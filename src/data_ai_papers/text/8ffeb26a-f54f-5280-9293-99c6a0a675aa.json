{"title": "Reasoning about Consensus when Opinions Diffuse through Majority Dynamics", "authors": "Vincenzo Auletta; Diodato Ferraioli; Gianluigi Greco", "pub_date": "", "abstract": "Opinion diffusion is studied on social graphs where agents hold binary opinions and where social pressure leads them to conform to the opinion manifested by the majority of their neighbors. Within this setting, questions related to whether a minority/majority can spread the opinion it supports to all the other agents are considered. It is shown that, no matter of the underlying graph, there is always a group formed by a half of the agents that can annihilate the opposite opinion. Instead, the influence power of minorities depends on certain features of the given graph, which are NP-hard to be identified. Deciding whether the two opinions can coexist in some stable configuration is NP-hard, too.", "sections": [{"heading": "Introduction", "text": "Consider the following prototypical scenario. The members of a department are organizing a social dinner, and they have to decide whether to go to a restaurant or to a pizzeria. Initially, each of them holds an opinion on her ideal choice. They are neither strategic [Osborne and Rubinstein, 1994;Gottlob et al., 2005] nor inclined to use voting rules or other mechanisms to find an agreement [Brandt et al., 2016;Endriss, 2017]. Rather, we know that, at a certain point, they will exchange their viewpoints and each of them will be affected by a social pressure leading to adapt her opinion to the one manifested by the majority of her friends. So, we ask: Would be they capable to reach a consensus for some/all profiles of their initial opinions? Can a minority have enough social \"power\" to influence all other agents? Is it any easier for a majority to guide convergence towards consensus?\nOur goal is to analyze these questions under the lens of algorithm design and computational complexity, by focusing on the setting where agents (e.g., the members of the department) hold binary opinions (e.g., restaurant vs pizzeria), where at each time instant precisely one agent can change her opinion (asynchronous model), and where social relationships are encoded as a graph. Indeed, while the study of opinion diffusion, originated in [Granovetter, 1978], has attracted much attention in recent literature (e.g., [Grandi et al., 2015;Cholvy, 2016;Brill et al., 2016;Grandi et al., 2017;Bredereck and Elkind, 2017;Acar et al., 2017;Endriss, 2017;Christoff and Grossi, 2017]), problems related to consensus-in the setting of interest-was basically faced so far only by Mossel et al. [2014] and Feldman et al. [2014], roughly stating that, in expander graphs, a sufficiently large majority will always influence all other agents.\nIn this paper we fill this gap. In more details, we first analyze in Section 3 the question of whether there exists some profile from which a fraction \u03b1 of the agents that already agree on some given opinion can spread that opinion to all the remaining agents. We show that the answer is positive on any social graph and for any given value of \u03b1\u2265 1 /2. In particular, a (rather elaborated) polynomial-time algorithm computing the desired initial configurations is exhibited. The result is not only the main technical achievement of the paper, but it is also conceptually interesting and somehow surprising. Indeed, one might be inclined to believe that the topology of the social graphs (in particular, for values of \u03b1 close to 1 /2) should play some role w.r.t. the possibility of reaching consensus on some given opinion. To the contrary, our result says that there always exists a majority formed by a half of the agents that can annihilate the opposite opinion.\nMoreover, we evidence in Section 4 that the value \u03b1 = 1 /2 defines a sharp boundary for the consensus problem. Indeed, we show that a minority (i.e., \u03b1< 1 /2) that can spread its opinion to all the agents exists only in certain graphs. A result of this kind holds for the problem of assessing the existence of a minority that will become a majority [Auletta et al., 2015;2017a;2017b]. However, in this setting the graphs enjoying the desired property admit a (computationally) simple characterization, while in our setting the characterization is NPhard. Furthermore, even just deciding whether a minority can double the number of agents with its opinion is NP-hard.\nFinally, we address the question of identifying those graphs in which consensus is the only possible stable outcome. In fact, assessing whether the two opinions can/cannot coexist in some stable configuration has been left as an open research issue in [Bredereck and Elkind, 2017]. Moreover, this problem has a natural graph-theoretic interpretation in terms of the existence of non-trivial cuts that are locally stable, whose complexity was, so far, open in the literature [Ferraioli and Ventre, 2017]. In Section 5 we solve this problem, by showing that checking whether a cut of this kind exists is NP-hard.\nWe envisage a practical interest of our results if positioned in the context of assessing the robustness of social networks w.r.t. external intervention and manipulation. In particular, our results might be interpreted by putting ourselves in the perspective of an external agent who tries to distribute opinions on a network to reach a certain consensus. Indeed, our constructive proof in Section 3 can be immediately interpreted as a manipulation algorithm. Manipulations of this kind are of interest in those scenarios where no outcome can be returned until consensus is reached; examples include the novel privacy policies for publication of shared information in social networks (see, e.g., [Ferraioli and Ventre, 2017]). With this respect, our intractability results (for \u03b1 < 1/2) come as computational obstructions to such forms of manipulation, when the external agent is not powerful enough.", "publication_ref": ["b3", "b1", "b0", "b0", "b2", "b1", "b0", "b2", "b0", "b0", "b0", "b1", "b3", "b0", "b0", "b0", "b0", "b1", "b1"], "figure_ref": [], "table_ref": []}, {"heading": "Formal Framework for Opinion Diffusion", "text": "Let G = (N, E) be an undirected graph encoding the interactions of a set N of agents. We assume that G is connectedotherwise apply our results on each connected component.\nA configuration for G is a function c : N \u2192 {1, 0}; its intended meaning is that agent x \u2208 N with c(x) = 1 (respectively, c(x) = 0) holds opinion 1 (respectively, 0). For any set S \u2286 N of agents, we define S 1/c (shortly S 1 , if the configuration c is clearly understood) as the set of all agents with opinion 1. The set S 0/c (shortly S 0 ) is defined analogously. For each agent x \u2208 N , the set {y | {x, y} \u2208 E} of her neighbors is denoted by \u03b4(x). Agent x \u2208 N is stable in c if her opinion agrees with the opinion held by a (non-strict) majority of her neighbors; that is, either |\u03b4(x)\n0 | \u2264 |\u03b4(x) 1 | and c(x) = 1; or |\u03b4(x) 1 | \u2264 |\u03b4(x) 0 | and c(x) = 0. A configu- ration c is stable if all agents in N are stable.\nWe consider an asynchronous model where, at each time instant, precisely one agent which is not stable changes her opinion. Accordingly, a dynamics for G is modeled as a sequence of configurations c 0 , ..., c k such that c h+1 , for each h \u2208 {0, ..., k \u2212 1}, is obtained from c h by flipping the opinion of an agent that is not stable in c h . The dynamics will be also shortly denoted as c 0 c k , whenever we are just interested in the initial and final configurations only.\nLet op \u2208 {1, 0} be an opinion. Given an initial configuration c, let us denote by max op (c) the configuration resulting from the dynamics c max op (c) defined as follows: First, as long as there is an agent x \u2208 N that is not stable and whose opinion is not op, then flip her opinion. Second, as long as there is an agent x \u2208 N that is not stable and whose opinion is op, then flip her opinion. It is known that max op (c) is stable and that ", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "From Majority to Consensus", "text": "Let op \u2208 {1, 0} be an opinion. Define \u2200op as the \"consensus\" configuration where all agents hold opinion op, and consider the following problem defined on graphs and parameterized w.r.t. a fixed rational number \u03b1 such that 0 < \u03b1 < 1: CONSENSUS[\u03b1]: Given an undirected graph G = (N, E), compute a configuration c for G such that (i) |N op/c | \u2264 \u03b1|N | and (ii) max op (c) = \u2200op, or check that there is no configuration enjoying (i) and (ii).\nIn words, CONSENSUS[\u03b1] asks whether consensus on op can be reached in G from a configuration where the fraction of agents that initially holds opinion op is at most \u03b1. In the following, for simplicity, we assume that G is given and we omit it in our notation; moreover (and w.l.o.g), we fix op = 1.\nOur main result is that, for each undirected graph G, whenever the fraction \u03b1 covers a majority of the agents, i.e., \u03b1\u2265 1 /2, a configuration enjoying (i) and (ii) always exist and can be computed in polynomial-time. In particular, we propose (in Section 3.4) a polynomial time algorithm to solve CONSEN-SUS[ 1 /2]. The algorithm explores the space of binary partitions P of the agent set N , that are pairs P = (A, B) where A, B \u2286 N are such that A \u2229 B = \u2205 and A \u222a B = N . In the following, the fact that a set X \u2286 N belongs to {A, B} is shortly denoted by X \u2208 P; moreover, we defineX = N \\ X.\nOur approach is founded on the observation (see Section 3.1) that there are certain \"nice\" partitions from which solutions to CONSENSUS[ 1 /2] can be easily computed. However, it is not obvious how to single out these partitions. In fact, we propose an algorithm that proceeds as follows: it starts from an arbitrary balanced partition P = (A, B), i.e., such that \u22121 \u2264 |A| \u2212 |B| \u2264 1, and incrementally modifies the current partition via update procedures (described in Section 3.2 and Section 3.3) until a \"nice\" partition is found.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Nice Partitions", "text": "We next introduce three kinds of \"nice\" partitions from which solutions to CONSENSUS[ 1 /2] can be easily computed.\nTo this aim, let P be a partition of N . For any agent x \u2208 N , let P x (resp.,P x ) denote the set of P to which x belongs (resp., does not belong), and let us define the utility of x in P as the value u(x, P) = |\u03b4(x) \u2229 P x | \u2212 |\u03b4(x) \u2229P x |. Moreover, for any two disjoint sets of agents A and B , not necessarily forming a partition, we define E(A , B ) as the set of edges e \u2208 E such that e \u2229 A = \u2205 and e \u2229 B = \u2205.\nObserve that, whenever each \"side\" of P consists of all the agents that have the same specific opinion, then u(x * , P) > 0 holds if, and only if, agent x * is stable (with her opinion associated) with the side P x * . The first kind of \"nice\" partition we consider assumes the existence of a stable agent x * and, in addition, it relates the utility of all pairs of agents x and y from \"opposite\" sides with the cardinality of E({x}, {y}). Definition 1. P is a P1-partition if there is a set X \u2208 P such that |X| \u2264 N 2 and the following conditions hold: \u2022 u(x, P) + u(y, P) \u2264 \u22122|E({x}, {y})| holds for each pair of agents x \u2208 X and y \u2208X; \u2022 there is x \u2208 X with u(x , P) > 0.\n2\nTo define the second kind of \"nice\" partition, for each side X of a partition P, we denote by G[X] the subgraph of G induced by X. Let Zc(X, P) be the set of all connected components of G[X] such that u(y, P) = 0 for each component C \u2208 Zc(X, P) and each agent y of C. That is, Zc(X, P) is the set of connected components of G[X] such that all agents within these components have the same number of neighbors within the component and on the other side of the partition. Definition 2. P is a P2-partition if there is a set X \u2208 P such that |X| \u2264 N 2 and the following hold:\n{ { and Figure 1: Configurations leading to consensus on \"nice\" partitions.\n\u2022 every x \u2208X such that u(x, P) = k > 0 has at least (k + 2)/2 neighbors y \u2208X with u(y, P) < 0; \u2022 Zc(X, P) = \u2205.\n2\nLetc(P) be the configuration that, for a P1 or a P2 partition P, assigns opinion 1 (resp., 0) to all the agents in X (resp., X). We show thatc(P) leads to consensus (see Figure 1). Lemma 1. If P is a P1-partition, then max 1 (c(P)) = \u22001. Proof. For each y \u2208X, it holds that u(y, P) \u2264 \u2212u(x , P) \u2212 2|E({x }, {y})| < 0, where x and X are as in Definition 1. Hence, in the configurationc(P) all agents inX are not stable and they will change their opinion. Indeed, note that, while the dynamics is running, |\u03b4(y) 0 | \u2212 |\u03b4(y) 1 | \u2264 u(y, P) holds, for each y \u2208X that has not yet changed her opinion.\nLemma 2. If P is a P2-partition, then max 1 (c(P)) = \u22001. Proof Sketch. Let X \u2208 P be as in Definition 2. Note that agents in S = {y \u2208X | u(y, P) < 0} are not stable in c(P) and they flip their opinion. Let c * be the configuration reached fromc(P) after all agents in S flipped their opinion, and let P = (A , B ), with A = X \u222a S and B =X \\ S. Now, observe that u(x, P ) \u2264 u(x, P) for each x \u2208 B . Moreover, if u(x, P) > 0 or u(x, P) = 0, then x has neighbors in S, and u(x, P ) < 0. Hence, Zc(B , P ) = \u2205 and u(x, P ) \u2264 0 for each x \u2208 B . Thus, for each y 0 \u2208 B there is a path y 0 , . . . , y h in B , with h \u2265 0, where u(y h , P ) < 0 and u(y i , P ) = 0 for i = 0, . . . , h \u2212 1. Such agents flip their opinion if selected in the reverse order y h , . . . , y 0 .\nWe can also define a third kind of \"nice\" partition. For any x \u2208 N , let toZc(x, P) be the set of all components C \u2208 Zc(P x , P x ) containing an agent adjacent to x. Definition 3. P is a P3-partition if it is balanced and there is a set X \u2208 P such that the following hold:\n\u2022 u(x, P) + u(y, P) \u2264 \u22122|E({x}, {y})| holds for each pair of agents x \u2208 X and y \u2208X; \u2022 u(x, P) \u2264 0 holds for each x \u2208 N ; \u2022 |Zc(X, P)| \u2265 |Zc(X, P)| > 0;\n\u2022 for each D \u2208 Zc(X, P) there is x \u2208 X with D \u2208 toZc(x, P) and u(x, P) < \u22122|toZc(x, P)|. 2\nAssume that P is a P3-partition. In this case, we cannot reach consensus by starting fromc(P) but we need a more complex construction. Let X nz (resp.,X nz ) denote the set of agents that do not belong to any component in Zc(X, P) (resp., Zc(X, P)). Consider the configurationc(P) shown in Figure 1 and built as follows. All agents inX nz (resp., X nz ) hold opinion 1 (resp., 0). Moreover, for each component C \u2208 Zc(X, P), precisely one arbitrarily chosen agent x C \u2208 C holds opinion 1 and all the remaining agents of C hold opinion 0. For each component D \u2208 Zc(X, P), precisely one agent y D \u2208 D holds opinion 0 and all the remaining agents of D hold opinion 1, where y D \u2208X is an agent connected to some x D \u2208 X such that u(x D , P) < \u22122|toZc(x D , P)|. Note that, by definition of P3-partition, y D is well-defined. Lemma 3. If P is a P3-partition, then max 1 (c(P)) = \u22001. Proof Sketch. Let X \u2208 P be as in Definition 3. Let x be an agent in some C \u2208 Zc(X, P). Note that all neighbors of x are either confined in the component C or they occur inX nz , since (by Definition 3) we have u(y, Now, let c * be the profile derived fromc(P) after all agents x = x C occurring in C \u2208 Zc(X, P) and all agents x D with D \u2208 Zc(X, P) have changed their opinion. For each D \u2208 Zc(X, P), y D can change her opinion, because y D has at least |\u03b4(y D ) \u2229X| + 1 neighbors with opinion 1 in c * and at most |\u03b4(y D ) \u2229 X| \u2212 1 neighbors with opinion 0 (and we have u(y D , P) = 0). Finally, consider the configuration derived from c * after all agents y D with D \u2208 Zc(X, P) have changed their opinion. In this configuration, the only agents with opinion 0 are agents x in X nz with x = x D . For these agents, the fact that they can change their opinion can be shown with the arguments used in the proof of Lemma 2. These lemmas imply that if P is a P1 or P2 (resp., P3) partition, then |N 1/c(P) |\u2264 1 /2|N | (resp., |N 1/c(P) |\u2264 1 /2|N | ) and consensus is reached from these configurations. This is formalized in the following corollary. Hereinafter, we say that a partition is nice (for G) if it is a P1, P2 or P3 partition. Corollary 1. Assume that, for any graph G, a nice partition exists and can be computed in polynomial time. Then, CON-SENSUS[ 1 /2] can be solved in polynomial time, too.\nP) < 0 if y is adjacent to x. Now, inc(P) if x = x C ,", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Step 1: Remove Pivotal Agents", "text": "In the light of Corollary 1, our goal is to design an algorithm that, given as input a graph G, is able to compute (in polynomial time) a nice partition of G. To this end, a crucial role is played by the identification of certain agents, called pivotal. Definition 4. An agent x \u2208 N is pivotal in the partition P if there is an agent y \u2208P x , called a witness of x, such that u(x, P) + u(y, P) > \u22122|E({x}, {y})|.\n2\nIntuitively, pivotal agents are obstructions to the current partition P to being a P1 and P3 partitions. To remove these obstructions we exploit the property that, if we swap a pivotal agent with her witness, then the number of edges crossing the two sides of the partition increases. Hence, by successive swaps, we eventually remove all pivotal agents. To formalize this property, if x \u2208 N is pivotal and y is its witness, define SWAP(x, P) as the function returning the partition P such that P x =P x \u222a {x} \\ {y}. When a pivotal agent has multiple witnesses, the one to be swapped can be chosen arbitrarily. Lemma 4. Let x be a pivotal agent in the partition P, and let P = SWAP(x, P). Then, |E(P x ,P x )| > |E(P x ,P x )|. Moreover, if P is balanced, then P is balanced, too. To conclude, note that balancedness of P is immediate whenever P is balanced.\nHowever, removing all pivotal agents (by swapping them with their witnesses till none exists) is not yet sufficient to end up with a nice partition. Indeed, further obstructions can exist. In particular, the following result straightforwardly derives by inspecting Definitions 1-4.\nHereinafter, let #Zc(P) = | \u222a X\u2208P Zc(X, P)|. Fact 1. Let P be a balanced partition with no pivotal agents and which is not nice. Then, (i) u(x, P) \u2264 0, for each x \u2208 N ;\n(ii) for each X \u2208 P, it holds that |Zc(X, P)| > 0;\n(iii) for each X \u2208 P with |Zc(X, P)| \u2265 #Zc(P)/2, there is D \u2208 Zc(X, P) such that u(x, P) \u2265 \u22122|toZc(x, P)|, for each x \u2208X with D \u2208 toZc(x, P). 2\nA component D satisfying condition (iii) is termed critical, and the set of all critical components is denoted by cr(P). Fact 1 suggests that, to obtain a nice partition, we must modify a given balanced partition by removing all critical components while keeping it balanced and with no pivotal agents.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Step 2: Remove Critical Components", "text": "Let P be a balanced partition without pivotal agents and which is not nice. An agent x \u2208 N is critical if there is a component in toZc(x, P) that is critical. We distinguish two kinds of critical agents as follows. We remove critical components involving agents x of kind C1 by swapping certain agents between the two sides of P-see Figure 2. Formally, let us define REMOVEC1(x, P) as the function returning the partition P such that P x = P x \u222a base(x, P) \u222a {x} \\ dual (x, P), where dual (x, P) is the set including an arbitrarily chosen agent y of C connected to x, for each C \u2208 toZc(x, P), and where base(x, P) is a set containing up to |toZc(x, P)| \u2212 1 nodes, each one being chosen from a distinct component of Zc(P x , P).\nThe crucial observation is now that the application of RE-MOVEC1 can be related with the monotonic behavior of certain values, analogously to what we did in Lemma 4 (for pivotal agents and considering the number of crossing edges). Lemma 5. Let P be a balanced partition with no pivotal agents and which is not nice. Let x \u2208 N be a critical agent in P of kind C1. Then, either P = REMOVEC1(x, P) is nice, or it is balanced and one of the following conditions holds:\n\u2022 |E(P x ,P x )| > |E(P x ,P x )|;\n\u2022 |E(P x ,P x )| = |E(P x ,P x )| and #Zc(P ) < #Zc(P).\nProof Sketch. For each z \u2208 N , if y \u2208P z is connected to z, then u(z, P) + u(y, P) \u2264 \u22122|E({z}, {y})| = \u22122.\nSince the utility of each agent in base(x, P) \u222a dual (x, P) equals to 0, we get E(base(x, P), dual (x, P))=\u2205, u(x, P) = 0, agents in base(x, P) are not connected with each other, as they belong to different components, and, by the definition of Zc(P x , P),\nx is not connected to any of the agents in base(x, P). By these observations and by using arguments similar to those in Lemma 4, we can state that |E(P For the latter case, | \u222a X\u2208P Zc(X, P )| < | \u222aX\u2208P Zc(X, P)| holds. Indeed, moving agents in base(x, P) to the other side destroys |base(x, P)| components in P x , while creating at most the same number of components in the other side. Moreover, swapping x with agents in dual (x, P) causes replacing |dual (x, P)| = |toZc(x, P)| > 1 components inP x with at most one component including x.\nSuppose now that P is not balanced. Then |Zc(P x , P)| < |toZc(x, P)| \u2212 1, so thatP x has no zero component. Then, P is a P2 partition; indeed, nodes inP x with positive utility must be neighbors of agents from dual (x, P).\nCritical agents x of kind C2 are processed via the function REMOVEC2(x, P) described in Figure 3. Its salient properties are formalized below-as for Lemma 4 and Lemma 5, note the relationship we established between the application of the function and the monotonic behavior of certain values. Lemma 6. Let P = (A, B) be a balanced partition with no pivotal agents, and no critical agents of kind C1, and which is not nice. Let x \u2208 N be critical of kind C2. Then, either P = REMOVEC2(x, P) is nice, or it is balanced, |E(P x ,P x )| = |E(P x ,P x )| and one of the following conditions holds:\n\u2022 #Zc(P ) < #Zc(P); function REMOVEC2: (x, P) \u2192 P let C be the unique component in toZc(x, P) let D be an arbitrary component in Zc(Px, P) let x0, . . . , xn be a path s.t. x0 \u2208 C, xn \u2208 D, and x1 = x P 0 \u2190 P and i \u2190 0 repeat if xi+1 \u2208 P i x i then P i+1 \u2190 P i else let P i+1 be such that P i+1 x i =P i x i \u222a {xi} \\ {xi+1} i \u2190 i + 1 until either P i is nice, or P i has a pivotal or critical agent of kind C1, or #Zc(P i ) < #Zc(P 0 ), or |cr(P i )| < |cr(P 0 )| return P i end function \u2022 #Zc(P ) = #Zc(P) and |cr(P )| < |cr(P)|; \u2022 #Zc(P ) = #Zc(P), |cr(P )| = |cr(P)| and P has either a pivotal agent or a critical agent of kind C1. Moreover, REMOVEC2 converges in at most |N | iterations. Proof Sketch. W.l.o.g., assume that x 0 \u2208A and x 1 \u2208B. Note that u(x 0 , P 0 ) = 0 while u(x 1 , P 0 ) = \u22122, since x 1 is critical of kind C2. Hence, swapping x 0 with x 1 does not modify the size of the cut. Moreover, the swap produces a balanced partition P 1 . Note also that moving x 0 to B destroys one component of Zc(A, P 0 ) and does not add components to the other side; to this end, in particular, observe that u(x 0 , P 1 ) = \u22122. Instead, moving x 1 to A might create one fresh component at most (precisely including x 1 ). So, | \u222a X\u2208P 1 Zc(X, P 1 )| \u2264 | \u222a X\u2208P Zc(X, P 0 )|. In fact, existing components are not affected by the swap and we clearly have |cr(P 1 )| \u2264 |cr(P 0 )|. Therefore, if no exit condition is satisfied for i = 0, then the above relationships are actually equalities, and there are no pivotal agents and no critical agents of kind C1. In fact, in this case, the fresh component where x 1 occurs, say D 1 , is critical. Now, observe that not in every iteration the current partition is changed. Let i be the first index such that P i = P 1 . Then, x i still occurs in the critical component D 1 (as we are traversing a path) and x i+1 is therefore a critical agent of kind C2.\nAt this point, it is easily seen that the arguments used for the pair x 0 , x 1 can be used for x i , x i+1 , too. And the reasoning can be repeated (formally by induction) till some step i * where one exit condition is satisfied. To conclude, we claim that this step exists. Indeed, x n \u2208 D, where D is a component of P 0 . In particular, if no exit condition were satisfied before the n-th step, then D would be not affected by any swap, and thus it would be a component in P n\u22121 . In this case, however, x n\u22121 would belong to a critical component of A. But this is impossible, since x n\u22121 and x n are neighbors: indeed, in P n\u22121 , we have that u(x n\u22121 , P n\u22121 ) + u(x n , P n\u22121 ) = 0 > \u22122E(x n\u22121 , x n ), and thus x n\u22121 is a pivotal agent.\nConcerning the complexity, note that |N | iterations are required to go through the entire path between x 0 and x n .", "publication_ref": [], "figure_ref": ["fig_4", "fig_6"], "table_ref": []}, {"heading": "Putting It All Together", "text": "All ingredients are now in place to illustrate Algorithm 1, which we designed to solve CONSENSUS[ 1 /2].\nAlgorithm 1 Solving CONSENSUS[ 1 /2] on input G = (N, E) compute a balanced partition P of N done \u2190 false while not done do while there is a pivotal agent x in P do P \u2190 SWAP(x, P) if there is a critical agent x of kind C1 in P then P \u2190 REMOVEC1(x, P) else if there is a critical agent x of kind C2 in P then P \u2190 REMOVEC2(x, P) end if if P is nice then done \u2190 true end while if P is a P1 or P2-partition then returnc(P) else returnc(P)\nThe algorithms takes in input the graph G and starts by computing a balanced partition. At each iteration, it first removes all pivotal agents-via the repeated application of SWAP-and, subsequently, it removes a critical agent (if any exists). Observe that the application of functions REMOVEC1 and REMOVEC2 is potentially creating nice distributions or pivotal agents. This is why Algorithm 1 removes only one critical agent in the main loop. Eventually, the main loop terminates when the current partition is nice, and then the algorithm returns the configuration associated to that partition as we discussed in Section 3.1. Theorem 1. After at most poly(|N |) iterations Algorithm 1 returns a solution to CONSENSUS[ 1 /2]. Proof. For a partition P = (A, B), let \u03a6 1 (P) = |E(A, B)|, \u03a6 2 (P) = | \u222a X\u2208P Zc(X, P)|, and \u03a6 3 (P) = |cr(P)|. Observe that \u03a6 1 (P) \u2264 |N | 2 and \u03a6 3 (P) \u2264 \u03a6 2 (P) \u2264 |N |/2. Moreover, by Lemma 4, Lemma 5, and Lemma 6, after every two iterations, at least one of these functions decreases and, if \u03a6 k decreases, k = 2, 3, then \u03a6 k for k < k does not increase. Finally, if these functions cannot be further minimized (after at most |N | 4 /2 iterations), then a nice partition is obtained.\nCorrectness then follows from Corollary 1.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "From Minority to Consensus", "text": "In this section we address the question of whether a consensus on some opinion op \u2208 {1, 0} can be reached starting from a configuration where op is supported by a minority. We show that the answer to the question depends on the structure of the social graph and, more interestingly, recognizing such graphs is NP-hard. Inspired by similar results in earlier literature [Kempe et al., 2005;Chen, 2008], the following proof exhibits a reduction from the well-known VER-TEX COVER problem [Garey and Johnson, 1979]. Theorem 2. For every 0<\u03b1< 1 2 , CONSENSUS[\u03b1] is NP-hard. Proof Sketch. Let G = (N, E) be a graph and k > 0 be a natural number. Consider the problem of deciding whether G admits a vertex cover of cardinality at most k, that is a set S \u2286 N of nodes with |S| \u2264 k and such that {i, j} \u2229 S = \u2205, for each {i, j} \u2208 E. This is NP-hard even if |{j | {i, j} \u2208 E| = 3 for each i \u2208 N [Greenlaw and Petreschi, 1995].\nDefine\u1e20 = (N ,\u0112) as the graph obtained by including into G, for each i \u2208 N , 2 fresh nodes each of them connected to i only. Note that G has a vertex cover S with |\u03b4(x) 1 | = |\u03b4(x) 0 | and x is stable. Finally, consider x \u2208N 0 . SinceN b is a clique with |N 1 | = n and since we know that is no larger clique in\u011c, we have |\u03b4(x) \u2229N 1 | \u2264 n \u2212 1. So, |\u03b4(x) 0 | \u2265 |\u0100 \u222aB \u222aC| + n \u2212 1, while |\u03b4(x) 1 | \u2264 |A \u222a B \u222a C| + n \u2212 1. It follows that x is stable, too.\nThe following is an immediate consequence. Corollary 2. Deciding whether \u22001 and \u22000 are the only stable configurations is coNP-complete.", "publication_ref": ["b3", "b1", "b2"], "figure_ref": [], "table_ref": []}, {"heading": "Discussion and Conclusion", "text": "In the paper we addressed a number of questions related to whether consensus can be achieved in settings where opinions of the agents are affected by social influence phenomena. We have shown that a configuration always exists (and can be computed in polynomial-time) for which the opinion of the majority diffuse to all the agents. Moreover, we exhibited hardness results for spreading the opinion of the minority and for checking the existence of \"plural\" configurations.\nAn interesting avenue for further research is to identify special classes of graphs where it is easy to answer similar questions, by looking at structural and topological restrictions.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Acknowledgements", "text": "Vincenzo Auletta and Diodato Ferraioli were supported by \"GNCS-INdAM\". Gianluigi Greco was partially supported by Regione Calabria under POR project \"Explora Process\".", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "", "text": "|S| \u2264 k if, and only if, there exists a dynamics c \u22001 such that |N 1/c | \u2264 k. Since |N | = 3|N |, this immediately shows that consensus[\u03b1] is NP-hard, for every \u03b1 such that \u03b1|N | = \u1fb1|N | where\u1fb1 = k (3|N |) \u2264 1 3 . We now adapt the reduction to show that hardness holds for each 0<\u03b1< 1 /2.\nWe distinguish two cases. If \u03b1|N | > \u1fb1|N | , then we build a graph\u1e20 + = (N + ,\u0112 + ) as follows: arbitrarily pick u \u2208N \\N , and add to\u1e20 vertices u and u both connected to u and to each other and m \u2265 1 copies of a gadget consisting of a four nodes clique with each gadget node connected to u . Note that G has a vertex cover S with |S| \u2264 k iff there is a dynamics c \u22001 s.t.\nThe result follows by choosing m such that \u03b1(3|N |+4m+2) = k + 2m + 1.\nAssume finally that \u03b1|N | < \u1fb1|N | . In this case, we build a graph\u1e20 \u2212 = (N \u2212 ,\u0112 \u2212 ) as follows: arbitrarily pick u \u2208N \\ N , and add to\u1e20 vertex u connected to u, m + 3 \u2212 (m mod 2) nodes arranged in a ring and connected with u and with a new node u . Then, G has a vertex cover S with |S| \u2264 k iff there is a dynamics c An interesting generalization of the above result is that it is still NP-hard to decide whether there is a dynamics leading to a stable configuration where the opinion initially held by a minority of \u03b1|N | agents, with \u03b1 < 1 2 , is spread over (just) 2\u03b1|N | agents. The precise formulation is given in Theorem 3. Its proof is not an extension of Theorem 2 and, in fact, it is inspired by the reduction in [Auletta et al., 2015, Theorem 4] to the NP-hard problem 2P3N-3SAT [Yoshinaka, 2005]. Theorem 3. For every \u03b4 \u2208 (0, 1) and for every \u03b5 \u2264 1 2 \u2212 \u03b4 4 , it is NP-hard to decide whether there is a configuration c such that |N 1/c | = \u03b5n and max 1 (c) \u2265 (2 + \u03b4) \u03b5n .", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Stable Configurations without Consensus", "text": "For any graph G, consensus configurations (\u22001 and \u22000) are clearly stable. An interesting question, addressed in this section, is then whether G admits further stable configurations, in which case we would say that G is plural.\nNote that G is plural if it admits a non-trivial partition P, i.e., a partition P = (A, B) with A = \u2205 and B = \u2205, which has moreover local minimum cut-size, that is, |E(A , B )| \u2265 |E(A, B)| holds for each partition P = (A , B ) obtained by moving one node from one side to the other (formally, either A \u2286 A and\n. The complexity of recognizing whether a graph admits a partition of this kind was, so far, an open problem [Ferraioli and Ventre, 2017]. The result below answers that question, by exhibiting an involved NP-hardness reduction. Theorem 4. Deciding if a graph is plural is NP-complete.\nProof Sketch. Membership in NP is trivial. For the hardness, let \u03c6 = c 1 \u2227 \u2022 \u2022 \u2022 \u2227 c m be a Boolean formula such that, for each i \u2208 {1, ..., m}, the clause c i is the disjunction of 3 literals, i.e., c i = 1,i \u2228 2,i \u2228 3,i . Based on \u03c6, we define the graph\u011c = (N ,\u00ca) over nodesN = {p 1 , ..., p 6m+2 , q 1 , q 2 } \u222a m i=1 {\u03c3 1,i , ..., \u03c3 8,i }, where \u03c3 1,i , ..., \u03c3 8,i are the satisfying truth assignments (viewed as nodes) for c i . Moreover, for each pair \u03c3 j,i and \u03c3 j ,i , there is an edge connecting them in\u00ca if, and only if, the assignments are compatible; finally, each node {p 1 , ..., p 6m+2 } is connected with all the other nodes inN but q 1 and q 2 . Let n = m + 6m + 2 and note that any clique in\u011c has size n at most. In particular, a maximum clique of size n exists if, and only if, \u03c6 is satisfiable. Moreover, note that |N | = 8m + 6m + 2 + 2 = 2n and that each node in\u011c has at most 2n \u2212 2 neighbors.\nHaving the graph\u011c, we now build the social graph G = (N, E) over N =N \u222aA\u222aB \u222aC \u222a\u0100\u222aB \u222aC \u222aR\u222a{\u03b3,\u03b3,\u03b3 \u2022 }. Edges include those in\u00ca plus those illustrated, according to an intuitive notation, in Figure 4. Note, in particular, that for each x \u2208N and each h \u2208 {1, ..., 2n}, R contains the agent r xj which is connected to the agents\u0101 x,j,1 and\u0101 x,j,2 in\u0100. Moreover, x is connected (in addition to the edges in E) to all agents in N \\ R and to the agents r x1 , ..., r x h(x) , where h(x) is defined in a way that x is adjacent to 2n \u2212 2 nodes of N \u222a R. On this graph, we claim that a stable configuration c with N 0 = \u2205 and N 0 = N exists iff\u011c has a clique of size n.\n(\"only-if\"). Assume, w.l.o.g., that c(\u03b3) = 1. If |N 1 | = n, then the dominant opinion inN spreads to all agents outsid\u00ea N . From plurality ofN and c(\u03b3) = 1, we derive (A\u222aB \u222aC \u222a {\u03b3}) 0 = \u2205 and (\u0100\u222aB \u222aC \u222a{\u03b3,\u03b3 ", "publication_ref": ["b1"], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Vincenzo Auletta, Ioannis Caragiannis, Diodato Ferraioli, Clemente Galdi, and Giuseppe Persiano. Information retention in heterogeneous majority dynamics", "journal": "Cambridge University Press", "year": "2008", "authors": "[ References;  Acar"}, {"ref_id": "b1", "title": "Reaching Consensus via Non-Bayesian Asynchronous Learning in Social Networks", "journal": "W. H. Freeman & Co", "year": "1979", "authors": "Davide Cholvy ; Laurence Cholvy ; Zo\u00e9 Christoff; ; Grossi;  Feldman"}, {"ref_id": "b2", "title": "Strategic disclosure of opinions on a social network", "journal": "Greenlaw and Petreschi", "year": "1978", "authors": " Grandi"}, {"ref_id": "b3", "title": "Ryo Yoshinaka. Higher-order matching in the linear lambda calculus in the absence of constants is np-complete", "journal": "The MIT Press", "year": "1994", "authors": "[ Kempe"}], "figures": [{"figure_label": "", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "|N op/ maxop(c) | \u2265 |N op/c | for each dynamics c c with c = max op (c) [Bredereck and Elkind, 2017].", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Figure1and built as follows. All agents inX nz (resp., X nz ) hold opinion 1 (resp., 0). Moreover, for each component C \u2208 Zc(X, P), precisely one arbitrarily chosen agent x C \u2208 C holds opinion 1 and all the remaining agents of C hold opinion 0. For each component D \u2208 Zc(X, P), precisely one agent y D \u2208 D holds opinion 0 and all the remaining agents of D hold opinion 1, where y D \u2208X is an agent connected to some x D \u2208 X such that u(x D , P) < \u22122|toZc(x D , P)|. Note that, by definition of P3-partition, y D is well-defined. Lemma 3. If P is a P3-partition, then max 1 (c(P)) = \u22001. Proof Sketch. Let X \u2208 P be as in Definition 3. Let x be an agent in some C \u2208 Zc(X, P). Note that all neighbors of x are either confined in the component C or they occur inX nz , since (by Definition 3) we have u(y, P) < 0 if y is adjacent to x. Now, inc(P) if x = x C , then x has |\u03b4(x) \u2229X| + 1 neighbors with opinion 1 and |\u03b4(x) \u2229 X| \u2212 1 neighbors with opinion 0. Since u(x, P) = 0, |\u03b4(x) \u2229X| + 1 > |\u03b4(x) \u2229 X| \u2212 1. Hence, x can flip her opinion. Moreover, for each D \u2208 Zc(X, P), consider the agent x D \u2208 X.Note that x D has i\u00f1 c(P) at least |\u03b4(x) \u2229X| \u2212 |toZc(x D , P)| neighbors having opinion 1 and at most |\u03b4(x)\u2229X)| +|toZc(x D , P)| neighbors with opinion 0. Therefore, u(x D , P) < \u22122|toZc(x D , P)| implies that |\u03b4(x) \u2229X| \u2212 |toZc(x D , P)| > |\u03b4(x) \u2229 X| + |toZc(x D , P)|, and x D can flip her opinion.Now, let c * be the profile derived fromc(P) after all agents x = x C occurring in C \u2208 Zc(X, P) and all agents x D with D \u2208 Zc(X, P) have changed their opinion. For each D \u2208 Zc(X, P), y D can change her opinion, because y D has at least |\u03b4(y D ) \u2229X| + 1 neighbors with opinion 1 in c * and at most |\u03b4(y D ) \u2229 X| \u2212 1 neighbors with opinion 0 (and we have u(y D , P) = 0). Finally, consider the configuration derived from c * after all agents y D with D \u2208 Zc(X, P) have changed their opinion. In this configuration, the only agents with opinion 0 are agents x in X nz with x = x D . For these agents, the fact that they can change their opinion can be shown with the arguments used in the proof of Lemma 2.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "Proof. Consider the witness y of x. Let \u2206 = |E(P x \\ {x},P x \\{y})| and note that: |E(Px,Px)| = \u2206+|\u03b4(x)\u2229Px|+ |\u03b4(y) \u2229 Px| \u2212 |E({x}, {y})| and |E(P x ,P x )| = \u2206 + |\u03b4(x) \u2229 Px| + |\u03b4(y) \u2229Px| + |E({x}, {y})| . Hence, |E(P x ,P x )| \u2212 |E(P x ,P x )| coincides with the value u(x, P) + u(y, P) + 2|E({x}, {y})| > 0.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Definition 5. A critical agent x \u2208 N is of kind C1: if |toZc(x, P)| > 1 and u(x, P) \u2265 \u22122|toZc(x, P)|, or if |toZc(x, P)| = 1 and u(x, P) > \u22122|toZc(x, P)|; C2: if |toZc(x, P)| = 1 and u(x, P) = \u22122|toZc(x, P)|. 2", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "Figure 2 :2Figure 2: Illustration of the function REMOVEC1.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_5", "figure_caption": "x ,P x )| \u2212 |E(Px,Px)| = u(x, P) + y\u2208dual(x,P) u(y, P) + 2|toZc(x, P)|. In particular, since u(y, P) = 0 holds for each y \u2208 dual (x, P), we derive |E(P x ,P x )| \u2212 |E(Px,Px)| = u(x, P) + 2|toZc(x, P)|. Assume now that P is a balanced but not nice. If u(x, P) > \u22122|toZc(x, P)|, then |E(P x ,P x )| > |E(P x ,P x )|. Instead, if u(x, P) = \u22122|toZc(x, P)|, then |E(P x ,P x )| = |E(Px,Px)| and |toZc(x, P)| > 1.", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_6", "figure_caption": "Figure 3 :3Figure 3: Processing a critical agent of kind C2.", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "0 | \u2264 |\u03b4(x) 1 | and c(x) = 1; or |\u03b4(x) 1 | \u2264 |\u03b4(x) 0 | and c(x) = 0. A configu- ration c is stable if all agents in N are stable.", "formula_coordinates": [2.0, 54.0, 360.08, 243.0, 30.87]}, {"formula_id": "formula_1", "formula_text": "P) < 0 if y is adjacent to x. Now, inc(P) if x = x C ,", "formula_coordinates": [3.0, 315.0, 205.41, 243.0, 20.61]}, {"formula_id": "formula_2", "formula_text": "Proof Sketch. For each z \u2208 N , if y \u2208P z is connected to z, then u(z, P) + u(y, P) \u2264 \u22122|E({z}, {y})| = \u22122.", "formula_coordinates": [4.0, 315.0, 286.47, 243.0, 19.91]}], "doi": ""}