{"title": "Taskonomy: Disentangling Task Transfer Learning", "authors": "Amir R Zamir; Alexander Sax; William Shen; Leonidas Guibas; Jitendra Malik; Silvio Savarese; Cam Pose", "pub_date": "2018-04-23", "abstract": "Do visual tasks have a relationship, or are they unrelated? For instance, could having surface normals simplify estimating the depth of an image? Intuition answers these questions positively, implying existence of a structure among visual tasks. Knowing this structure has notable values; it is the concept underlying transfer learning and provides a principled way for identifying redundancies across tasks, e.g., to seamlessly reuse supervision among related tasks or solve many tasks in one system without piling up the complexity. We proposes a fully computational approach for modeling the structure of space of visual tasks. This is done via finding (first and higher-order) transfer learning dependencies across a dictionary of twenty six 2D, 2.5D, 3D, and semantic tasks in a latent space. The product is a computational taxonomic map for task transfer learning. We study the consequences of this structure, e.g. nontrivial emerged relationships, and exploit them to reduce the demand for labeled data. For example, we show that the total number of labeled datapoints needed for solving a set of 10 tasks can be reduced by roughly 2 3 (compared to training independently) while keeping the performance nearly the same. We provide a set of tools for computing and probing this taxonomical structure including a solver that users can employ to devise efficient supervision policies for their use cases.", "sections": [{"heading": "Introduction", "text": "Object recognition, depth estimation, edge detection, pose estimation, etc are examples of common vision tasks deemed useful and tackled by the research community. Some of them have rather clear relationships: we understand that surface normals and depth are related (one is a derivate of the other), or vanishing points in a room are useful for orientation. Other relationships are less clear: how keypoint detection and the shading in a room can, together, perform pose estimation. Figure 1: A sample task structure discovered by the computational task taxonomy (taskonomy). It found that, for instance, by combining the learned features of a surface normal estimator and occlusion edge detector, good networks for reshading and point matching can be rapidly trained with little labeled data.\nThe field of computer vision has indeed gone far without explicitly using these relationships. We have made remarkable progress by developing advanced learning machinery (e.g. ConvNets) capable of finding complex mappings from X to Y when many pairs of (x, y) s.t. x \u2208 X, y \u2208 Y are given as training data. This is usually referred to as fully supervised learning and often leads to problems being solved in isolation. Siloing tasks makes training a new task or a comprehensive perception system a Sisyphean challenge, whereby each task needs to be learned individually from scratch. Doing so ignores their quantifiably useful relationships leading to a massive labeled data requirement.\nAlternatively, a model aware of the relationships among tasks demands less supervision, uses less computation, and behaves in more predictable ways. Incorporating such a structure is the first stepping stone towards develop-1 ing provably efficient comprehensive/universal perception models [34,4], i.e. ones that can solve a large set of tasks before becoming intractable in supervision or computation demands. However, this task space structure and its effects are still largely unknown. The relationships are non-trivial, and finding them is complicated by the fact that we have imperfect learning models and optimizers. In this paper, we attempt to shed light on this underlying structure and present a framework for mapping the space of visual tasks. Here what we mean by \"structure\" is a collection of computationally found relations specifying which tasks supply useful information to another, and by how much (see Fig. 1).\nWe employ a fully computational approach for this purpose, with neural networks as the adopted computational function class. In a feedforward network, each layer successively forms more abstract representations of the input containing the information needed for mapping the input to the output. These representations, however, can transmit statistics useful for solving other outputs (tasks), presumably if the tasks are related in some form [83,19,58,46]. This is the basis of our approach: we computes an affinity matrix among tasks based on whether the solution for one task can be sufficiently easily read out of the representation trained for another task. Such transfers are exhaustively sampled, and a Binary Integer Programming formulation extracts a globally efficient transfer policy from them. We show this model leads to solving tasks with far less data than learning them independently and the resulting structure holds on common datasets (ImageNet [78] and Places [104]).\nBeing fully computational and representation-based, the proposed approach avoids imposing prior (possibly incorrect) assumptions on the task space. This is crucial because the priors about task relations are often derived from either human intuition or analytical knowledge, while neural networks need not operate on the same principles [63,33,40,45,102,88]. For instance, although we might expect depth to transfer to surface normals better (derivatives are easy), the opposite is found to be the better direction in a computational framework (i.e. suited neural networks better).\nAn interactive taxonomy solver which uses our model to suggest data-efficient curricula, a live demo, dataset, and code are available at http://taskonomy.vision/.", "publication_ref": ["b33", "b3", "b82", "b18", "b57", "b45", "b77", "b103", "b62", "b32", "b39", "b44", "b101", "b87"], "figure_ref": [], "table_ref": []}, {"heading": "Related Work", "text": "Assertions of existence of a structure among tasks date back to the early years of modern computer science, e.g. with Turing arguing for using learning elements [95,98] rather than the final outcome or Jean Piaget's works on developmental stages using previously learned stages as sources [74,39,38], and have extended to recent works [76,73,50,18,97,61,11,66]. Here we make an attempt to actually find this structure. We acknowledge that this is related to a breadth of topics, e.g. compositional modeling [35,10,13,23,55,92,90], homomorphic cryptography [42], lifelong learning [93,15,85,84], functional maps [71], certain aspects of Bayesian inference and Dirichlet processes [54,91,90,89,37,39], few-shot learning [81,25,24,70,86], transfer learning [75,84,29,64,67,59], un/semi/selfsupervised learning [22,8,17,103,19,83], which are studied across various fields [73,94,12]. We review the topics most pertinent to vision within the constraints of space:\nSelf-supervised learning methods leverage the inherent relationships between tasks to learn a desired expensive one (e.g. object detection) via a cheap surrogate (e.g. colorization) [68,72,17,103,100,69]. Specifically, they use a manually-entered local part of the structure in the task space (as the surrogate task is manually defined). In contrast, our approach models this large space of tasks in a computational manner and can discover obscure relationships.\nUnsupervised learning is concerned with the redundancies in the input domain and leveraging them for forming compact representations, which are usually agnostic to the downstream task [8,49,20,9,32,77]. Our approach is not unsupervised by definition as it is not agnostic to the tasks. Instead, it models the space tasks belong to and in a way utilizes the functional redundancies among tasks.\nMeta-learning generally seeks performing the learning at a level higher than where conventional learning occurs, e.g. as employed in reinforcement learning [21,31,28], optimization [2,82,48], or certain architectural mechanisms [27,30,87,65]. The motivation behind meta learning has similarities to ours and our outcome can be seen as a computational meta-structure of the space of tasks.\nMulti-task learning targets developing systems that can provide multiple outputs for an input in one run [50,18]. Multi-task learning has experienced recent progress and the reported advantages are another support for existence of a useful structure among tasks [93,100,50,76,73,50,18,97,61,11,66]. Unlike multi-task learning, we explicitly model the relations among tasks and extract a meta-structure. The large number of tasks we consider also makes developing one multi-task network for all infeasible.\nDomain adaption seeks to render a function that is developed on a certain domain applicable to another [44,99,5,80,52,26,36]. It often addresses a shift in the input domain, e.g. webcam images to D-SLR [47], while the task is kept the same. In contrast, our framework is concerned with output (task) space, hence can be viewed as task/output adaptation. We also perform the adaptation in a larger space among many elements, rather than two or a few.\nIn the context of our approach to modeling transfer learning across tasks:\nLearning Theoretic approaches may overlap with any of the above topics and usually focus on providing generalization guarantees. They vary in their approach: e.g. by modeling transferability with the transfer family required 2  to map a hypothesis for one task onto a hypothesis for another [7], through information-based approaches [60], or through modeling inductive bias [6]. For these guarantees, learning theoretic approaches usually rely on intractable computations, or avoid such computations by restricting the model or task. Our method draws inspiration from theoretical approaches but eschews (for now) theoretical guarantees in order to use modern neural machinery.", "publication_ref": ["b94", "b97", "b73", "b38", "b37", "b75", "b72", "b49", "b17", "b96", "b60", "b10", "b65", "b34", "b9", "b12", "b22", "b54", "b91", "b89", "b41", "b92", "b14", "b84", "b83", "b70", "b53", "b90", "b89", "b88", "b36", "b38", "b80", "b24", "b23", "b69", "b85", "b74", "b83", "b28", "b63", "b66", "b58", "b21", "b7", "b16", "b102", "b18", "b82", "b72", "b93", "b11", "b67", "b71", "b16", "b102", "b99", "b68", "b7", "b48", "b19", "b8", "b31", "b76", "b20", "b30", "b27", "b1", "b81", "b47", "b26", "b29", "b86", "b64", "b49", "b17", "b92", "b99", "b49", "b75", "b72", "b49", "b17", "b96", "b60", "b10", "b65", "b43", "b98", "b4", "b79", "b51", "b25", "b35", "b46", "b6", "b59", "b5"], "figure_ref": [], "table_ref": []}, {"heading": "Method", "text": "We define the problem as follows: we want to maximize the collective performance on a set of tasks T = {t 1 , ..., t n }, subject to the constraint that we have a limited supervision budget \u03b3 (due to financial, computational, or time constraints). We define our supervision budget \u03b3 to be the maximum allowable number of tasks that we are willing to train from scratch (i.e. source tasks). The task dictionary is defined as V=T \u222a S where T is the set of tasks which we want solved (target), and S is the set of tasks that can be trained (source). Therefore, T \u2212 T \u2229 S are the tasks that we want solved but cannot train (\"target-only\"), T \u2229 S are the tasks that we want solved but could play as source too, and S \u2212 T \u2229 S are the \"source-only\" tasks which we may not directly care about to solve (e.g. jigsaw puzzle) but can be optionally used if they increase the performance on T .\nThe task taxonomy (taskonomy) is a computationally found directed hypergraph that captures the notion of task transferability over any given task dictionary. An edge between a group of source tasks and a target task represents a feasible transfer case and its weight is the prediction of its performance. We use these edges to estimate the globally optimal transfer policy to solve T . Taxonomy produces a family of such graphs, parameterized by the available supervision budget, chosen tasks, transfer orders, and transfer functions' expressiveness.\nTaxonomy is built using a four step process depicted in Fig. 2  is trained. In stage II, all feasible transfers between sources and targets are trained. We include higher-order transfers which use multiple inputs task to transfer to one target. In stage III, the task affinities acquired from transfer function performances are normalized, and in stage IV, we synthesize a hypergraph which can predict the performance of any transfer policy and optimize for the optimal one.\nA vision task is an abstraction read from a raw image. We denote a task t more formally as a function f t which maps image I to f t (I). Task Dictionary: Our mapping of task space is done via (26) tasks included in the dictionary, so we ensure they cover common themes in computer vision (2D, 3D, semantics, etc) to the elucidate fine-grained structures of task space. See Fig. 3 for some of the tasks with detailed definition of each task provided in the supplementary material. We include tasks with various levels of abstraction, ranging from solvable by a simple kernel convolved over the image (e.g. edge detection) to tasks requiring basic understanding of scene geometry (e.g. vanishing points) and more abstract ones involving semantics (e.g. scene classification).\nIt is critical to note the task dictionary is meant to be a sampled set, not an exhaustive list, from a denser space of all conceivable visual tasks. Sampling gives us a tractable way to sparsely model a dense space, and the hypothesis is that (subject to a proper sampling) the derived model should generalize to out-of-dictionary tasks. The more regular / better sampled the space, the better the generalization. We evaluate this in Sec. 4.2 with supportive results. For evaluation of the robustness of results w.r.t the choice of dictionary, see the supplementary material.\nDataset: We need a dataset that has annotations for every task on every image. Training all of our tasks on exactly the same pixels eliminates the possibility that the observed transferabilities are affected by different input data peculiarities rather than only task intrinsics. There has not been such a dataset of scale made of real images, so we created a dataset of 4 million images of indoor scenes from about 600 buildings; every image has an annotation for every task. The images are registered on and aligned with buildingwide meshes similar to [3,101,14] enabling us to programmatically compute the ground truth for many tasks without human labeling. For the tasks that still require labels (e.g. scene classes), we generate them using Knowledge Distillation [43] from known methods [104,57,56,78]. See the supplementary material for full details of the process and a user study on the final quality of labels generated using Knowledge Distillation (showing < 7% error).", "publication_ref": ["b25", "b2", "b100", "b13", "b42", "b103", "b56", "b55", "b77"], "figure_ref": ["fig_1", "fig_2"], "table_ref": []}, {"heading": "Step I: Task-Specific Modeling", "text": "We train a fully supervised task-specific network for each task in S. Task-specific networks have an encoderdecoder architecture homogeneous across all tasks, where  the encoder is large enough to extract powerful representations, and the decoder is large enough to achieve a good performance but is much smaller than the encoder.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Step II: Transfer Modeling", "text": "Given a source task s and a target task t, where s \u2208 S and t \u2208 T , a transfer network learns a small readout function for t given a statistic computed for s (see Fig 4). The statistic is the representation for image I from the encoder of s: E s (I). The readout function (D s\u2192t ) is parameterized by \u03b8 s\u2192t minimizing the loss L t :\nD s\u2192t := arg min \u03b8 E I\u2208D L t D \u03b8 E s (I) , f t (I) , (1)\nwhere f t (I) is ground truth of t for image I. E s (I) may or may not be sufficient for solving t depending on the relation between t and s (examples in Fig. 5). Thus, the performance of D s\u2192t is a useful metric as task affinity. We train transfer functions for all feasible source-target combinations.\nAccessibility: For a transfer to be successful, the latent representation of the source should both be inclusive of sufficient information for solving the target and have the information accessible, i.e. easily extractable (otherwise, the raw image or its compression based representations would be optimal). Thus, it is crucial for us to adopt a low-capacity (small) architecture as transfer function trained with a small amount of data, in order to measure transferability conditioned on being highly accessible. We use a shallow fully convolutional network and train it with little data (8x to 120x less than task-specific networks).\nHigher-Order Transfers: Multiple source tasks can contain complementary information for solving a target task (see examples in Fig 6). We include higher-order transfers which are the same as first order but receive multiple representations in the input. Thus, our transfers are functions D : \u2118(S) \u2192 T , where \u2118 is the powerset operator.\nAs there is a combinatorial explosion in the number of feasible higher-order transfers (|T | \u00d7 |S| k for k th order), we employ a sampling procedure with the goal of filtering out higher-order transfers that are less likely to yield good results, without training them. We use a beam search: for transfers of order k \u2264 5 to a target, we select its 5 best sources (according to 1 st order performances) and include all of their order-k combination. For k \u2265 5, we use a beam of size 1 and compute the transfer from the top k sources.\nTransitive Transfers: We examined if transitive task transfers (s \u2192 t 1 \u2192 t 2 ) could improve the performance over their direct counterpart (a \u2192 t 2 ), but found that the two had equal performance in almost all cases in both highdata and low-data scenarios. The experiment is provided in the supplementary material. Therefore, we need not consider the cases where branching would be more than one level deep when searching for the optimal transfer path.", "publication_ref": [], "figure_ref": ["fig_4"], "table_ref": []}, {"heading": "Step III: Ordinal Normalization using Analytic", "text": "Hierarchy Process (AHP)\nWe want to have an affinity matrix of transferabilities across tasks. Aggregating the raw losses/evaluations L s\u2192t from transfer functions into a matrix is obviously problematic as they have vastly different scales and live in different spaces (see Fig. 7-left). Hence, a proper normalization is needed. A naive solution would be to linearly rescale each row of the matrix to the range [0, 1]. This approach fails when the actual output quality increases at different speeds w.r.t. the loss. As the loss-quality curve is generally unknown, such approaches to normalization are ineffective.\nInstead, we use an ordinal approach in which the output quality and loss are only assumed to change monotonically. For each t, we construct W t a pairwise tournament matrix between all feasible sources for transferring to t. The element at (i, j) is the percentage of images in a held-out test set, D test , on which s i transfered to t better than s j did (i.e. D si\u2192t (I) > D sj \u2192t (I)).\nWe clip this intermediate pairwise matrix W t to be in [0.001, 0.999] as a form of Laplace smoothing. Then we divide W t = W t /W T t so that the matrix shows how many times better s i is compared to s j . The final tournament ratio matrix is positive reciprocal with each element w i,j of W t :\nw i,j = EI\u2208D test [D si\u2192t (I) > D sj \u2192t (I)] EI\u2208D test [D si\u2192t (I) < D sj \u2192t (I)] .(2)\nWe quantify the final transferability of s i to t as the cor-  See supplementary material for the full matrix with higher-order transfers.\nA\nresponding (i th ) component of the principal eigenvector of W t (normalized to sum to 1). The elements of the principal eigenvector are a measure of centrality, and are proportional to the amount of time that an infinite-length random walk on W t will spend at any given source [62]. We stack the principal eigenvectors of W t for all t \u2208 T , to get an affinity matrix P ('p' for performance)-see Fig. 7, right. This approach is derived from Analytic Hierarchy Process [79], a method widely used in operations research to create a total order based on multiple pairwise comparisons.", "publication_ref": ["b61", "b78"], "figure_ref": ["fig_5", "fig_5"], "table_ref": []}, {"heading": "Step IV: Computing the Global Taxonomy", "text": "Given the normalized task affinity matrix, we need to devise a global transfer policy which maximizes collective performance across all tasks, while minimizing the used supervision. This problem can be formulated as subgraph selection where tasks are nodes and transfers are edges. The optimal subgraph picks the ideal source nodes and the best edges from these sources to targets while satisfying that the number of source nodes does not exceed the supervision budget. We solve this subgraph selection problem using Boolean Integer Programming (BIP), described below, which can be solved optimally and efficiently [41,16].\nOur transfers (edges), E, are indexed by i with the form ({s i 1 , . . . , s i mi }, t i ) where {s i 1 , . . . , s i mi } \u2282 S and t i \u2208 T . We define operators returning target and sources of an edge:\n{s i 1 , . . . , s i mi }, t i sources \u2212 \u2212\u2212\u2212\u2212 \u2192 {s i 1 , . . . , s i mi } {s i 1 , . . . , s i mi }, t i target \u2212 \u2212\u2212\u2212 \u2192 t i .\nSolving a task t by fully supervising it is denoted as {t}, t .\nWe also index the targets T with j so that in this section, i is an edge and j is a target. The parameters of the problem are: the supervision budget (\u03b3) and a measure of performance on a target from each of its transfers (p i ), i.e. the affinities from P . We can also optionally include additional parameters of: r j specifying the relative importance of each target task and i specifying the relative cost of acquiring labels for each task.\nThe BIP is parameterized by a vector x where each transfer and each task is represented by a binary variable; x indicates which nodes are picked to be source and which transfers are selected. The canonical form for a BIP is: maximize c T x , subject to Ax b and x \u2208 {0, 1} |E|+|V| .\nEach element c i for a transfer is the product of the importance of its target task and its transfer performance:\nc i := r target(i) \u2022 p i .(3)\nHence, the collective performance on all targets is the summation of their individual AHP performance, p i , weighted by the user specified importance, r i . Now we add three types of constraints via matrix A to enforce each feasible solution of the BIP instance corresponds to a valid subgraph for our transfer learning problem: Constraint I: if a transfer is included in the subgraph, all of its source nodes/tasks must be included too, Constraint II: each target task has exactly one transfer in, Constraint III: supervision budget is not exceeded.\nConstraint I: For each row a i in A we require a i \u2022 x \u2264 b i , where\na i,k = \uf8f1 \uf8f4 \uf8f2 \uf8f4 \uf8f3 |sources(i)| if k = i \u22121 if (k \u2212 |E|) \u2208 sources(i) 0 otherwise (4) b i = 0.(5)\nConstraint II: Via the row a |E|+j , we enforce that each target has exactly one transfer:\na |E|+j,i := 2 \u2022 1 {target(i)=j} , b |E|+j := \u22121. (6)\nConstraint III: the solution is enforced to not exceed the budget. Each transfer i is assigned a label cost i , so a |E|+|V|+1,i := i , b |E|+|V|+1 := \u03b3.\nThe elements of A not defined above are set to 0. The problem is now a valid BIP and can be optimally solved in a fraction of a second [41]. The BIP solutionx corresponds to the optimal subgraph, which is our taxonomy.", "publication_ref": ["b40", "b15", "b40"], "figure_ref": [], "table_ref": []}, {"heading": "Experiments", "text": "With 26 tasks in the dictionary (4 source-only tasks), our approach leads to training 26 fully supervised task-specific networks, 22 \u00d7 25 transfer networks in 1 st order, and 22 \u00d7 25 k for k th order, from which we sample according to the procedure in Sec. 3. The total number of transfer functions trained for the taxonomy was \u223c3,000 which took 47,886 GPU hours on the cloud.\nOut of 26 tasks, we usually use the following 4 as sourceonly tasks (described in Sec. 3) in the experiments: colorization, jigsaw puzzle, in-painting, random projection. However, the method is applicable to an arbitrary partitioning of the dictionary into T and S. The interactive solver  website allows the user to specify any desired partition.\nNetwork Architectures: We preserved the architectural and training details across tasks as homogeneously as possible to avoid injecting any bias. The encoder architecture is identical across all task-specific networks and is a fully convolutional ResNet-50 without pooling. All transfer functions include identical shallow networks with 2 conv layers (concatenated channel-wise if higher-order). The loss (L t ) and decoder's architecture, though, have to depend on the task as the output structures of different tasks vary; for all pixel-to-pixel tasks, e.g. normal estimation, the decoder is a 15-layer fully convolutional network; for low dimensional tasks, e.g. vanishing points, it consists of 2-3 FC layers. All networks are trained using the same hyperparameters regardless of task and on exactly the same input images. Tasks with more than one input, e.g. relative camera pose, share weights between the encoder towers. Transfer networks are all trained using the same hyperparameters as the task-specific networks, except that we anneal the learning rate earlier since they train much faster. Detailed definitions of architectures, training process, and experiments with different encoders can be found in the supplementary material.\nData Splits: Our dataset includes 4 million images. We made publicly available the models trained on full dataset, but for the experiments reported in the main paper, we used a subset of the dataset as the extracted structure stabilized and did not change when using more data (explained in Sec. 5.2). The used subset is partitioned into training (120k), validation (16k), and test (17k) images, each from non-overlapping sets of buildings. Our task-specific networks are trained on the training set and the transfer networks are trained on a subset of validation set, ranging from 1k images to 16k, in order to model the transfer patterns under different data regimes. In the main paper, we report all results under the 16k transfer supervision regime (\u223c10% of the split) and defer the additional sizes to the supplementary material and website (see Sec. 5.2). Transfer functions are evaluated on the test set.\nHow good are the trained task-specific networks? Win rate (%) is the proportion of test set images for which a baseline is beaten. Table 1 provides win rates of the taskspecifc networks vs. two baselines. Visual outputs for a ran- ", "publication_ref": [], "figure_ref": [], "table_ref": ["tab_5"]}, {"heading": "Color ri i i izat t t ti i i ion", "text": "In-p p p pain n n nting Rand d d dom Proj o .", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Ji i i ig g g gsaw w w w", "text": "In-paint t t ting g g g Figure 8: Computed taxonomies for solving 22 tasks given various supervision budgets (x-axes), and maximum allowed transfer orders (y-axes). One is magnified for better visibility. Nodes with incoming edges are target tasks, and the number of their incoming edges is the order of their chosen transfer function. Still transferring to some targets when tge budget is 26 (full budget) means certain transfers started performing better than their fully supervised task-specific counterpart. See the interactive solver website for color coding of the nodes by Gain and Quality metrics. Dimmed nodes are the source-only tasks, and thus, only participate in the taxonomy if found worthwhile by the BIP optimization to be one of the sources. dom test sample are in Fig. 3. The high win rates in Table 1 and qualitative results show the networks are well trained and stable and can be relied upon for modeling the task space. See results of applying the networks on a YouTube video frame-by-frame here. A live demo for user uploaded queries is available here.\nTo get a sense of the quality of our networks vs. state-ofthe-art task-specific methods, we compared our depth estimator vs. released models of [53] which led to outperforming [53] with a win rate of 88% and losses of 0.35 vs. 0.47 (further details in the supplementary material). In general, we found the task-specific networks to perform on par or better than state-of-the-art for many of the tasks, though we do not formally benchmark or claim this.", "publication_ref": ["b52", "b52"], "figure_ref": ["fig_2"], "table_ref": ["tab_5"]}, {"heading": "Evaluation of Computed Taxonomies", "text": "Fig. 8 shows the computed taxonomies optimized to solve the full dictionary, i.e. all tasks are placed in T and S (except for 4 source-only tasks that are in S only). This was done for various supervision budgets (columns) and maximum allowed order (rows) constraints. Still seeing transfers to some targets when the budget is 26 (full dictionary) means certain transfers became better than their fully supervised task-specific counterpart.\nWhile Fig. 8 shows the structure and connectivity, Fig. 9 quantifies the results of taxonomy recommended transfer policies by two metrics of Gain and Quality, defined as: Gain: win rate (%) against a network trained from scratch using the same training data as transfer networks'. That is, the best that could be done if transfer learning was not utilized. This quantifies the gained value by transferring. Quality: win rate (%) against a fully supervised network trained with 120k images (gold standard). Red (0) and Blue (1) represent outperforming the reference method on none and all of test set images, respec-  tively (so the transition Red\u2192White\u2192Blue is desirable. White (.5) represents equal performance to reference). Each column in Fig. 9 shows a supervision budget. As apparent, good results can be achieved even when the supervision budget is notably smaller than the number of solved tasks, and as the budget increases, results improve (expected). Results are shown for 2 maximum allowed orders.", "publication_ref": [], "figure_ref": ["fig_7", "fig_7"], "table_ref": []}, {"heading": "Generalization to Novel Tasks", "text": "The taxonomies in Sec. 4.1 were optimized for solving all tasks in the dictionary. In many situations, a practitioner is interested in a single task which even may not be in the dictionary. Here we evaluate how taxonomy transfers to a novel out-of-dictionary task with little data. This is done in an all-for-one scenario where we put one task in T and all others in S. The task in T is target-only and has no task-specific network. Its limited data (16k) is used to train small transfer networks to sources. This basically localizes where the target would be in the taxonomy. Fig. 10 (left) shows the Gain and Quality of the transfer policy found by the BIP for each task. Fig. 10 (right) compares the taxonomy suggested policy against some of the best existing self-supervised methods [96,103,68,100,1], ImageNet FC7 features [51], training from scratch, and a fully supervised network (gold standard).\nThe results in Fig. 10 (right) are noteworthy. The large win margin for taxonomy shows that carefully selecting transfer policies depending on the target is superior to fixed transfers, such as the ones employed by self-supervised methods. ImageNet features which are the most popular off-the-shelf features in vision are also outperformed by those policies. Additionally, though the taxonomy transfer policies lose to fully supervised networks (gold standard) in Taxonomy Significance Test Supervision Budget Supervision Budget most cases, the results often get close with win rates in 40% range. These observations suggests the space has a rather predicable and strong structure. For graph visualization of the all-for-one taxonomy policies please see the supplementary material. The solver website allows generating the taxonomy for arbitrary sets of target-only tasks.", "publication_ref": ["b95", "b102", "b67", "b99", "b0", "b50"], "figure_ref": ["fig_8", "fig_8", "fig_8"], "table_ref": []}, {"heading": "Significance Test of the Structure", "text": "The previous evaluations showed good transfer results in terms of Quality and Gain, but how crucial is it to use our taxonomy to choose smart transfers over just choosing any transfer? In other words, how significant/strong is the discovered structure of task space? Fig. 11 quantifies this by showing the performance of our taxonomy versus a large set of taxonomies with random connectivities. Our taxonomy outperformed all other connectivities by a large margin signifying both existence of a strong structure in the space as well as a good modeling of it by our approach. Complete experimental details is available in supplementary material.", "publication_ref": [], "figure_ref": ["fig_9"], "table_ref": []}, {"heading": "Evaluation on MIT Places & ImageNet", "text": "To what extent are our findings dataset dependent, and would the taxonomy change if done on another dataset? We examined this by finding the ranking of all tasks for transferring to two target tasks of object classification and scene classification on our dataset. We then fine tuned our taskspecific networks on other datasets (MIT Places [104] for scene classification, ImageNet [78] for object classification) and evaluated them on their respective test sets and metrics. Fig. 12 shows how the results correlate with taxonomy's ranking from our dataset. The Spearman's rho between the taxonomy ranking and the Top-1 ranking is 0.857 on Places and 0.823 on ImageNet showing a notable correlation. See supplementary material for complete experimental details.", "publication_ref": ["b103", "b77"], "figure_ref": ["fig_1"], "table_ref": []}, {"heading": "Universality of the Structure", "text": "We employed a computational approach with various design choices. It is important to investigate how specific to those the discovered structure is. We did stability tests by computing the variance in our output when making changes in one of the following system choices: I. architecture of task-specific networks, II. architecture of transfer function networks, III. amount of data available for training transfer networks, IV. datasets, V. data splits, VI. choice of dictionary. Overall, despite injecting large changes (e.g. varying the size of training data of transfer functions by 16x, size and architecture of task-specific networks and transfer networks by 4x), we found the outputs to be remarkably stable leading to almost no change in the output taxonomy computed on top. Detailed results and experimental setup of each tests are reported in the supplementary material.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Task Similarity Tree", "text": "Thus far we showed the task space has a structure, measured this structure, and presented its utility for transfer learning via devising transfer policies. This structure can be presented in other manners as well, e.g. via a metric of similarity across tasks. Figure 13 shows a similarity tree for the tasks in our dictionary. This is acquired from agglomerative clustering of the tasks based on their transferring-out behavior, i.e. using columns of normalized affinity matrix P as feature vectors for tasks. The tree shows how tasks would be hierarchically positioned w.r.t. to each other when measured based on providing information for solving other tasks; the closer two tasks, the more similar their role in transferring to other tasks. Notice that the 3D, 2D, low dimensional geometric, and semantic tasks are found to cluster together using a fully computational approach, which matches the intuitive expectations from the structure of task space. The transfer taxonomies devised by BIP are consistent with this tree as BIP picks the sources in a way that all of these modes are quantitatively best covered, subject to the given budget and desired target set.", "publication_ref": [], "figure_ref": ["fig_2"], "table_ref": []}, {"heading": "Limitations and Discussion", "text": "We presented a method for modeling the space of visual tasks by way of transfer learning and showed its utility in Figure 13: Task Similarity Tree. Agglomerative clustering of tasks based on their transferring-out patterns (i.e. using columns of normalized affinity matrix as task features). 3D, 2D, low dimensional geometric, and semantic tasks clustered together using a fully computational approach.\nreducing the need for supervision. The space of tasks is an interesting object of study in its own right and we have only scratched the surface in this regard. We also made a number of assumptions in the framework which should be noted.\nModel Dependence: We used a computational approach and adopted neural networks as our function class. Though we validated the stability of the findings w.r.t various architectures and datasets, it should be noted that the findings are in principle model and data specific.\nCompositionality: We performed the modeling via a set of common human-defined visual tasks. It is natural to consider a further compositional approach in which such common tasks are viewed as observed samples which are composed of computationally found latent subtasks.\nSpace Regularity: We performed modeling of a dense space via a sampled dictionary. Though we showed a good tolerance w.r.t. to the choice of dictionary and transferring to out-of-dictionary tasks, this outcome holds upon a proper sampling of the space as a function of its regularity. More formal studies on properties of the computed space is required for this to be provably guaranteed for a general case.\nTransferring to Non-visual and Robotic Tasks: Given the structure of the space of visual tasks and demonstrated transferabilities to novel tasks, it is worthwhile to question how this can be employed to develop a perception module for solving downstream tasks which are not entirely visual, e.g. robotic manipulation, but entail solving a set of (a priori unknown) visual tasks.\nLifelong Learning: We performed the modeling in one go. In many cases, e.g. lifelong learning, the system is evolving and the number of mastered tasks constantly increase. Such scenarios require augmentation of the structure with expansion mechanisms based on new beliefs.", "publication_ref": [], "figure_ref": ["fig_2"], "table_ref": []}, {"heading": "", "text": "Acknowledgement: We acknowledge the support of NSF (DMS-1521608), MURI (1186514-1-TBCJE), ONR MURI (N00014-14-1-0671), Toyota(1191689-1-UDAWF), ONR MURI (N00014-13-1-0341), Nvidia, Tencent, a gift by Amazon Web Services, a Google Focused Research Award.", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Learning to see by moving", "journal": "", "year": "2015", "authors": "P Agrawal; J Carreira; J Malik"}, {"ref_id": "b1", "title": "Learning to learn by gradient descent by gradient descent", "journal": "", "year": "2016", "authors": "M Andrychowicz; M Denil; S Gomez; M W Hoffman; D Pfau; T Schaul; N De Freitas"}, {"ref_id": "b2", "title": "Joint 2d-3d-semantic data for indoor scene understanding", "journal": "", "year": "2017", "authors": "I Armeni; S Sax; A R Zamir; S Savarese"}, {"ref_id": "b3", "title": "Provable bounds for learning some deep representations", "journal": "", "year": "2014", "authors": "S Arora; A Bhaskara; R Ge; T Ma"}, {"ref_id": "b4", "title": "Tabula rasa: Model transfer for object category detection", "journal": "", "year": "2011", "authors": "Y Aytar; A Zisserman"}, {"ref_id": "b5", "title": "A bayesian/information theoretic model of learning to learn viamultiple task sampling", "journal": "Mach. Learn", "year": "1997-07", "authors": "J Baxter"}, {"ref_id": "b6", "title": "A notion of task relatedness yielding provable multiple-task learning guarantees", "journal": "", "year": "2003", "authors": "S Ben-David; R S Borbely"}, {"ref_id": "b7", "title": "Representation learning: A review and new perspectives", "journal": "", "year": "2013", "authors": "Y Bengio; A Courville; P Vincent"}, {"ref_id": "b8", "title": "A survey of clustering data mining techniques. Grouping multidimensional data", "journal": "", "year": "2006", "authors": "P Berkhin"}, {"ref_id": "b9", "title": "Compositionality, mdl priors, and object recognition", "journal": "", "year": "1997", "authors": "E Bienenstock; S Geman; D Potter"}, {"ref_id": "b10", "title": "Integrated perception with recurrent multi-task neural networks", "journal": "", "year": "2016", "authors": "H Bilen; A Vedaldi"}, {"ref_id": "b11", "title": "Identifying beneficial task relations for multi-task learning in", "journal": "", "year": "2017", "authors": "J Bingel; A S\u00f8gaard"}, {"ref_id": "b12", "title": "Similarity by composition", "journal": "", "year": "2007", "authors": "O Boiman; M Irani"}, {"ref_id": "b13", "title": "Matterport3d: Learning from rgb-d data in indoor environments", "journal": "", "year": "2017", "authors": "A Chang; A Dai; T Funkhouser; M Halber; M Nie\u00dfner; M Savva; S Song; A Zeng; Y Zhang"}, {"ref_id": "b14", "title": "Lifelong Machine Learning", "journal": "Morgan & Claypool Publishers", "year": "2016", "authors": "Z Chen; B Liu"}, {"ref_id": "b15", "title": "V12. 1: Users manual for cplex. International Business Machines Corporation", "journal": "", "year": "2009", "authors": "I I Cplex"}, {"ref_id": "b16", "title": "Unsupervised visual representation learning by context prediction", "journal": "", "year": "2015", "authors": "C Doersch; A Gupta; A A Efros"}, {"ref_id": "b17", "title": "Multi-task self-supervised visual learning", "journal": "", "year": "2017", "authors": "C Doersch; A Zisserman"}, {"ref_id": "b18", "title": "Decaf: A deep convolutional activation feature for generic visual recognition", "journal": "", "year": "2014", "authors": "J Donahue; Y Jia; O Vinyals; J Hoffman; N Zhang; E Tzeng; T Darrell"}, {"ref_id": "b19", "title": "Adversarial feature learning", "journal": "", "year": "2016", "authors": "J Donahue; P Kr\u00e4henb\u00fchl; T Darrell"}, {"ref_id": "b20", "title": "Rl2: Fast reinforcement learning via slow reinforcement learning", "journal": "", "year": "2016", "authors": "Y Duan; J Schulman; X Chen; P L Bartlett; I Sutskever; P Abbeel"}, {"ref_id": "b21", "title": "Why does unsupervised pre-training help deep learning", "journal": "Journal of Machine Learning Research", "year": "2010-02", "authors": "D Erhan; Y Bengio; A Courville; P.-A Manzagol; P Vincent; S Bengio"}, {"ref_id": "b22", "title": "clustering by compositionunsupervised discovery of image categories", "journal": "Springer", "year": "2012", "authors": "A Faktor; M Irani"}, {"ref_id": "b23", "title": "A bayesian approach to unsupervised oneshot learning of object categories", "journal": "", "year": "2003", "authors": "L Fe-Fei"}, {"ref_id": "b24", "title": "One-shot learning of object categories", "journal": "", "year": "2006", "authors": "L Fei-Fei; R Fergus; P Perona"}, {"ref_id": "b25", "title": "Unsupervised visual domain adaptation using subspace alignment", "journal": "", "year": "2013", "authors": "B Fernando; A Habrard; M Sebban; T Tuytelaars"}, {"ref_id": "b26", "title": "Model-agnostic metalearning for fast adaptation of deep networks", "journal": "", "year": "2017", "authors": "C Finn; P Abbeel; S Levine"}, {"ref_id": "b27", "title": "Guided cost learning: Deep inverse optimal control via policy optimization", "journal": "", "year": "2016", "authors": "C Finn; S Levine; P Abbeel"}, {"ref_id": "b28", "title": "Deep spatial autoencoders for visuomotor learning", "journal": "", "year": "2016", "authors": "C Finn; X Y Tan; Y Duan; T Darrell; S Levine; P Abbeel"}, {"ref_id": "b29", "title": "Generalizing skills with semi-supervised reinforcement learning", "journal": "", "year": "2016", "authors": "C Finn; T Yu; J Fu; P Abbeel; S Levine"}, {"ref_id": "b30", "title": "Oneshot visual imitation learning via meta-learning", "journal": "CoRR", "year": "2017", "authors": "C Finn; T Yu; T Zhang; P Abbeel; S Levine"}, {"ref_id": "b31", "title": "A survey of dimension reduction techniques", "journal": "", "year": "2002", "authors": "I K Fodor"}, {"ref_id": "b32", "title": "Catastrophic forgetting in connectionist networks: Causes, consequences and solutions", "journal": "", "year": "1999", "authors": "R M French"}, {"ref_id": "b33", "title": "Provable algorithms for machine learning problems", "journal": "", "year": "2013", "authors": "R Ge"}, {"ref_id": "b34", "title": "Composition systems", "journal": "Quarterly of Applied Mathematics", "year": "2002", "authors": "S Geman; D F Potter; Z Chi"}, {"ref_id": "b35", "title": "Domain adaptation for object recognition: An unsupervised approach", "journal": "", "year": "2011", "authors": "R Gopalan; R Li; R Chellappa"}, {"ref_id": "b36", "title": "A theory of causal learning in children: Causal maps and bayes nets", "journal": "", "year": "2002", "authors": "A Gopnik; C Glymour; D Sobel; L Schulz; T Kushnir; D Danks"}, {"ref_id": "b37", "title": "A theory of causal learning in children: causal maps and bayes nets. Psychological review", "journal": "", "year": "2004", "authors": "A Gopnik; C Glymour; D M Sobel; L E Schulz; T Kushnir; D Danks"}, {"ref_id": "b38", "title": "The scientist in the crib: Minds, brains, and how children learn", "journal": "William Morrow & Co", "year": "1999", "authors": "A Gopnik; A N Meltzoff; P K Kuhl"}, {"ref_id": "b39", "title": "Neural turing machines. CoRR, abs/1410", "journal": "", "year": "2014", "authors": "A Graves; G Wayne; I Danihelka"}, {"ref_id": "b40", "title": "Optimization. Gurobi optimizer reference manual", "journal": "", "year": "2016", "authors": "I Gurobi"}, {"ref_id": "b41", "title": "The theory and applications of homomorphic cryptography", "journal": "", "year": "2008", "authors": "K Henry"}, {"ref_id": "b42", "title": "Distilling the knowledge in a neural network", "journal": "", "year": "2015", "authors": "G Hinton; O Vinyals; J Dean"}, {"ref_id": "b43", "title": "Continuous manifold based adaptation for evolving visual domains", "journal": "", "year": "2014", "authors": "J Hoffman; T Darrell; K Saenko"}, {"ref_id": "b44", "title": "Visual learning of arithmetic operations. CoRR, abs/1506.02264", "journal": "", "year": "2015", "authors": "Y Hoshen; S Peleg"}, {"ref_id": "b45", "title": "Transferring deep convolutional neural networks for the scene classification of high-resolution remote sensing imagery", "journal": "Remote Sensing", "year": "2015", "authors": "F Hu; G.-S Xia; J Hu; L Zhang"}, {"ref_id": "b46", "title": "Robust visual domain adaptation with low-rank reconstruction", "journal": "", "year": "2012", "authors": "I.-H Jhuo; D Liu; D Lee; S.-F Chang"}, {"ref_id": "b47", "title": "Adam: A method for stochastic optimization. CoRR, abs/1412", "journal": "", "year": "2014", "authors": "D P Kingma; J Ba"}, {"ref_id": "b48", "title": "Auto-encoding variational bayes", "journal": "", "year": "2013", "authors": "D P Kingma; M Welling"}, {"ref_id": "b49", "title": "Ubernet: Training auniversal'convolutional neural network for low-, mid-, and high-level vision using diverse datasets and limited memory", "journal": "", "year": "2016", "authors": "I Kokkinos"}, {"ref_id": "b50", "title": "Imagenet classification with deep convolutional neural networks", "journal": "", "year": "2012", "authors": "A Krizhevsky; I Sutskever; G E Hinton"}, {"ref_id": "b51", "title": "What you saw is not what you get: Domain adaptation using asymmetric kernel transforms", "journal": "", "year": "2011", "authors": "B Kulis; K Saenko; T Darrell"}, {"ref_id": "b52", "title": "Deeper depth prediction with fully convolutional residual networks", "journal": "IEEE", "year": "2016", "authors": "I Laina; C Rupprecht; V Belagiannis; F Tombari; N Navab"}, {"ref_id": "b53", "title": "Human-level concept learning through probabilistic program induction", "journal": "Science", "year": "2015", "authors": "B M Lake; R Salakhutdinov; J B Tenenbaum"}, {"ref_id": "b54", "title": "Building machines that learn and think like people", "journal": "Behavioral and Brain Sciences", "year": "2016", "authors": "B M Lake; T D Ullman; J B Tenenbaum; S J Gershman"}, {"ref_id": "b55", "title": "Fully convolutional instance-aware semantic segmentation", "journal": "", "year": "2016", "authors": "Y Li; H Qi; J Dai; X Ji; Y Wei"}, {"ref_id": "b56", "title": "Microsoft coco: Common objects in context", "journal": "Springer", "year": "2014", "authors": "T.-Y Lin; M Maire; S Belongie; J Hays; P Perona; D Ramanan; P Doll\u00e1r; C L Zitnick"}, {"ref_id": "b57", "title": "CRF learning with CNN features for image segmentation", "journal": "CoRR", "year": "2015", "authors": "F Liu; G Lin; C Shen"}, {"ref_id": "b58", "title": "Label efficient learning of transferable representations acrosss domains and tasks", "journal": "", "year": "2017", "authors": "Z Luo; Y Zou; J Hoffman; L F Fei-Fei"}, {"ref_id": "b59", "title": "On Universal Transfer Learning", "journal": "Springer", "year": "2007", "authors": "M M H Mahmud"}, {"ref_id": "b60", "title": "The three rs of computer vision: Recognition, reconstruction and reorganization", "journal": "Pattern Recognition Letters", "year": "2016", "authors": "J Malik; P Arbel\u00e1ez; J Carreira; K Fragkiadaki; R Girshick; G Gkioxari; S Gupta; B Hariharan; A Kar; S Tulsiani"}, {"ref_id": "b61", "title": "Random walks and diffusion on networks", "journal": "Physics Reports", "year": "2017", "authors": "N Masuda; M A Porter; R Lambiotte"}, {"ref_id": "b62", "title": "Catastrophic interference in connectionist networks: The sequential learning problem", "journal": "The Psychology of Learning and Motivation", "year": "1989", "authors": "M Mccloskey; N J Cohen"}, {"ref_id": "b63", "title": "Mapping and revising markov logic networks for transfer learning", "journal": "", "year": "2007", "authors": "L Mihalkova; T Huynh; R J Mooney"}, {"ref_id": "b64", "title": "Exploiting similarities among languages for machine translation", "journal": "CoRR", "year": "2013", "authors": "T Mikolov; Q V Le; I Sutskever"}, {"ref_id": "b65", "title": "Crossstitch networks for multi-task learning", "journal": "", "year": "2016", "authors": "I Misra; A Shrivastava; A Gupta; M Hebert"}, {"ref_id": "b66", "title": "Inductive transfer for bayesian network structure learning", "journal": "", "year": "2007", "authors": "A Niculescu-Mizil; R Caruana"}, {"ref_id": "b67", "title": "Unsupervised learning of visual representations by solving jigsaw puzzles", "journal": "Springer", "year": "2008", "authors": "M Noroozi; P Favaro"}, {"ref_id": "b68", "title": "Representation learning by learning to count", "journal": "", "year": "2017", "authors": "M Noroozi; H Pirsiavash; P Favaro"}, {"ref_id": "b69", "title": "Zero-shot learning by convex combination of semantic embeddings", "journal": "", "year": "2013", "authors": "M Norouzi; T Mikolov; S Bengio; Y Singer; J Shlens; A Frome; G S Corrado; J Dean"}, {"ref_id": "b70", "title": "Functional maps: a flexible representation of maps between shapes", "journal": "ACM Transactions on Graphics (TOG)", "year": "2012", "authors": "M Ovsjanikov; M Ben-Chen; J Solomon; A Butscher; L Guibas"}, {"ref_id": "b71", "title": "Context encoders: Feature learning by inpainting", "journal": "", "year": "2016", "authors": "D Pathak; P Krahenbuhl; J Donahue; T Darrell; A A Efros"}, {"ref_id": "b72", "title": "Multi-task learning with labeled and unlabeled tasks", "journal": "stat", "year": "1050", "authors": "A Pentina; C H Lampert"}, {"ref_id": "b73", "title": "The origins of intelligence in children", "journal": "International Universities Press", "year": "1952", "authors": "J Piaget; M Cook"}, {"ref_id": "b74", "title": "Discriminability-based transfer between neural networks", "journal": "", "year": "1993", "authors": "L Y Pratt"}, {"ref_id": "b75", "title": "Playing for benchmarks", "journal": "", "year": "2017", "authors": "S R Richter; Z Hayder; V Koltun"}, {"ref_id": "b76", "title": "Nonlinear dimensionality reduction by locally linear embedding. science", "journal": "", "year": "2000", "authors": "S T Roweis; L K Saul"}, {"ref_id": "b77", "title": "Imagenet large scale visual recognition challenge", "journal": "International Journal of Computer Vision", "year": "2004", "authors": "O Russakovsky; J Deng; H Su; J Krause; S Satheesh; S Ma; Z Huang; A Karpathy; A Khosla; M Bernstein"}, {"ref_id": "b78", "title": "The analytic hierarchy process -what it is and how it is used", "journal": "Mathematical Modeling", "year": "1987", "authors": "R W Saaty"}, {"ref_id": "b79", "title": "Adapting visual category models to new domains. Computer Vision-ECCV", "journal": "", "year": "2010", "authors": "K Saenko; B Kulis; M Fritz; T Darrell"}, {"ref_id": "b80", "title": "One-shot learning with a hierarchical nonparametric bayesian model", "journal": "", "year": "2012", "authors": "R Salakhutdinov; J Tenenbaum; A Torralba"}, {"ref_id": "b81", "title": "Trust region policy optimization", "journal": "", "year": "2015", "authors": "J Schulman; S Levine; P Moritz; M I Jordan; P Abbeel"}, {"ref_id": "b82", "title": "Cnn features off-the-shelf: an astounding baseline for recognition", "journal": "", "year": "2014", "authors": "A Sharif Razavian; H Azizpour; J Sullivan; S Carlsson"}, {"ref_id": "b83", "title": "Guest editors introduction: special issue on inductive transfer learning. Machine Learning", "journal": "", "year": "2008", "authors": "D L Silver; K P Bennett"}, {"ref_id": "b84", "title": "Lifelong machine learning systems: Beyond learning algorithms", "journal": "", "year": "2013", "authors": "D L Silver; Q Yang; L Li"}, {"ref_id": "b85", "title": "Zeroshot learning through cross-modal transfer", "journal": "", "year": "2013", "authors": "R Socher; M Ganjoo; C D Manning; A Ng"}, {"ref_id": "b86", "title": "Dropout: A simple way to prevent neural networks from overfitting", "journal": "Journal of Machine Learning Research", "year": "2014", "authors": "N Srivastava; G Hinton; A Krizhevsky; I Sutskever; R Salakhutdinov"}, {"ref_id": "b87", "title": "Intriguing properties of neural networks", "journal": "CoRR", "year": "2013", "authors": "C Szegedy; W Zaremba; I Sutskever; J Bruna; D Erhan; I J Goodfellow; R Fergus"}, {"ref_id": "b88", "title": "Generalization, similarity, and bayesian inference", "journal": "Behavioral and Brain Sciences", "year": "2001", "authors": "J B Tenenbaum; T L Griffiths"}, {"ref_id": "b89", "title": "Goodman. How to grow a mind: Statistics, structure, and abstraction", "journal": "science", "year": "2011", "authors": "J B Tenenbaum; C Kemp; T L Griffiths; N "}, {"ref_id": "b90", "title": "Theory-based bayesian models of inductive learning and reasoning", "journal": "", "year": "2006", "authors": "J B Tenenbaum; C Kemp; P Shafto"}, {"ref_id": "b91", "title": "Toward the neural implementation of structure learning. Current opinion in neurobiology", "journal": "", "year": "2016", "authors": "D G R Tervo; J B Tenenbaum; S J Gershman"}, {"ref_id": "b92", "title": "A deep hierarchical approach to lifelong learning in minecraft", "journal": "", "year": "2017", "authors": "C Tessler; S Givony; T Zahavy; D J Mankowitz; S Mannor"}, {"ref_id": "b93", "title": "Learning to learn", "journal": "Springer Science & Business Media", "year": "2012", "authors": "S Thrun; L Pratt"}, {"ref_id": "b94", "title": "Computing machinery and intelligence", "journal": "Mind", "year": "1950", "authors": "A M Turing"}, {"ref_id": "b95", "title": "Unsupervised learning of visual representations using videos", "journal": "", "year": "2015", "authors": "X Wang; A Gupta"}, {"ref_id": "b96", "title": "Transitive invariance for self-supervised visual representation learning", "journal": "", "year": "2017", "authors": "X Wang; K He; A Gupta"}, {"ref_id": "b97", "title": "Thinking machines: Can there be? Are we", "journal": "University of California Press", "year": "1991", "authors": "T Winograd"}, {"ref_id": "b98", "title": "Adapting svm classifiers to data with shifted distributions", "journal": "", "year": "2007", "authors": "J Yang; R Yan; A G Hauptmann"}, {"ref_id": "b99", "title": "Generic 3d representation via pose estimation and matching", "journal": "Springer", "year": "2008", "authors": "A R Zamir; T Wekel; P Agrawal; C Wei; J Malik; S Savarese"}, {"ref_id": "b100", "title": "Gibson Env: Real-world perception for embodied agents", "journal": "IEEE", "year": "2018", "authors": "A R Zamir; F Xia; J He; A Sax; J Malik; S Savarese"}, {"ref_id": "b101", "title": "Understanding deep learning requires rethinking generalization", "journal": "CoRR", "year": "2016", "authors": "C Zhang; S Bengio; M Hardt; B Recht; O Vinyals"}, {"ref_id": "b102", "title": "Colorful image colorization", "journal": "Springer", "year": "2008", "authors": "R Zhang; P Isola; A A Efros"}, {"ref_id": "b103", "title": "Learning deep features for scene recognition using places database", "journal": "", "year": "2004", "authors": "B Zhou; A Lapedriza; J Xiao; A Torralba; A Oliva"}], "figures": [{"figure_label": "2", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Figure 2 :2Figure 2: Computational modeling of task relations and creating the taxonomy. From left to right: I. Train task-specific networks. II. Train (first order and higher) transfer functions among tasks in a latent space. III. Get normalized transfer affinities using AHP (Analytic Hierarchy Process). IV. Find global transfer taxonomy using BIP (Binary Integer Program).", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "Figure 3 :3Figure 3: Task Dictionary. Outputs of 24 (of 26) task-specific networks for a query (top left). See results of applying frame-wise on a video here.", "figure_data": ""}, {"figure_label": "4", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Figure 4 :4Figure 4: Transfer Function. A small readout function is trained to map representations of source task's frozen encoder to target task's labels. If order> 1, transfer function receives representations from multiple sources.", "figure_data": ""}, {"figure_label": "5", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "Figure 5 :5Figure 5: Transfer results to normals (upper) and 2.5D Segmentation (lower) from 5 different source tasks.The spread in transferability among different sources is apparent, with reshading among top-performing ones in this case. Task-specific networks were trained on 60x more data. \"Scratch\" was trained from scratch without transfer learning.", "figure_data": ""}, {"figure_label": "7", "figure_type": "figure", "figure_id": "fig_5", "figure_caption": "Figure 7 :7Figure7: First-order task affinity matrix before (left) and after (right) Analytic Hierarchy Process (AHP) normalization. Lower means better transfered. For visualization, we use standard affinity-distance method dist = e \u2212\u03b2\u2022P (where \u03b2 = 20 and e is element-wise matrix exponential). See supplementary material for the full matrix with higher-order transfers.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_6", "figure_caption": "i i izat t t ti i i ion In-p p p pain n n nting Ji i i ig g g gsaw w w w Rand d d dom Proj o . g g gsa a a aw R R R Ra a a a an n n ndom Proj o .", "figure_data": ""}, {"figure_label": "9", "figure_type": "figure", "figure_id": "fig_7", "figure_caption": "Figure 9 :9Figure9: Evaluation of taxonomy computed for solving the full task dictionary. Gain (left) and Quality (right) values for each task using the policy suggested by the computed taxonomy, as the supervision budget increases(\u2192). Shown for transfer orders 1 and 4.", "figure_data": ""}, {"figure_label": "10", "figure_type": "figure", "figure_id": "fig_8", "figure_caption": "Figure 10 :10Figure 10: Generalization to Novel Tasks. Each row shows a novel test task. Left: Gain and Quality values using the devised \"all-for-one\" transfer policies for novel tasks for orders 1-4. Right: Win rates (%) of the transfer policy over various self-supervised methods, ImageNet features, and scratch are shown in the colored rows. Note the large margin of win by taxonomy. The uncolored rows show corresponding loss values.", "figure_data": ""}, {"figure_label": "11", "figure_type": "figure", "figure_id": "fig_9", "figure_caption": "Figure 11 :11Figure11: Structure Significance. Our taxonomy compared with random transfer policies (random feasible taxonomies that use the maximum allowable supervision budget). Y-axis shows Quality or Gain, and X-axis is the supervision budget. Green and gray represent our taxonomy and random connectivities, respectively. Error bars denote 5 th -95 th percentiles.", "figure_data": ""}, {"figure_label": "12", "figure_type": "figure", "figure_id": "fig_10", "figure_caption": "Figure 12 :12Figure 12: Evaluating the discovered structure on other datasets: ImageNet [78] (left) for object classification and MIT Places [104] (right) for scene classification. Y-axis shows accuracy on the external benchmark while bars on x-axis are ordered by taxonomy's predicted performance based on our dataset. A monotonically decreasing plot corresponds to preserving identical orders and perfect generalization.", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_0", "figure_caption": ". In stage I, a task-specific network for each task in S", "figure_data": "Query ImageSurface NormalsEucl. DistanceObject Class.Scene Class.Top 5 prediction:Top 2 prediction:sliding doorliving roomhome theater, home theatretelevision roomstudio couch, day bedchina cabinet, china closetentertainment centerJigsaw puzzleColorization2D Segm.2.5D Segm.Semantic Segm.Vanishing Points2D Edges3D Edges2D Keypoints3D Keypoints3D Curvature Image ReshadingIn-paintingDenoisingAutoencodingCam. Pose (non-fixated) Cam. Pose (fixated) Triplet Cam. Pose Room LayoutPoint Matching"}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "Higher-Order Transfers. Representations can contain complementary information. E.g. by transferring simultaneously from 3D Edges and Curvature individual stairs were brought out. See our publicly available interactive transfer visualization page for more examples.", "figure_data": "ImageGT (Normals) Fully SupervisedImageGT (Reshade) Fully Supervised{ Occlusion Edges+Curvature } 2 nd order transfer ={ 3D Keypoints Surface Normals } 2 nd order transfer + =Figure 6:"}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_4", "figure_caption": "Scene Class. 97.0 93.4 Autoenc. 100 99.8 2D Edges 100 99.9 Occ. Edges 100 95.4 Reshading 94.9 95.2 Pose (fix) 76.3 79.5 Pose (nonfix) 60.2 61.9 Inpainting 99.9 -2D Segm. 97.7 95.7 2.5D Segm. 94.2 89.4 Curvature 78.7 93.4 Matching 86.8 84.6 Egomotion 67.5 72.3 Normals 99.4 99.5 Vanishing 99.5 96.4 2D Keypnt. 99.8 99.4 Z-Depth 92.3 91.1 Distance 92.4 92.1 3D Keypnt. 96.0 96.9 Mean 92.4 90.9", "figure_data": "Taskavg rand Taskavg rand Taskavg randDenoising 100 99.9 Layout99.6 89.1"}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_5", "figure_caption": "Task-Specific Networks' Sanity: Win rates vs. random (Gaussian) network representation readout and statistically informed guess avg.", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_6", "figure_caption": "03 .04 .04 .03 .04 .03 .03 .02 .02 Scene Cls. 80 52 83 74 74 71 75 15 -3.30 2.76 3.56 3.15 3.17 3.09 3.19 2.23 2.63 22 .30 .34 .28 .28 .23 .24 .12 .15 2.5D Segm. 80 93 92 89 90 84 87 40 -.21 .34 .34 .26 .29 .22 .24 .16 .17 Occ. Edges 93 96 95 93 94 93 94 42 -.16 .19 .18 .17 .18 .16 .17 .12 .13 Curvature 88 94 89 85 88 92 88 29 -.25 .28 .26 .25 .26 .26 .25 .21 .22 66 .66 .85 .65 .65 .62 .54 .37 .41", "figure_data": "OrderOrder Increase (\u2192)TaskscratchImageNet[51]Wang.[96]Agrawal.[1]Zamir.[100]Zhang.[103]Noroozi.[68]full sup.TaxonomyDepth88 88 93 89 88 84 86 43 -Sem. Segm. 78 79 82 85 76 78 84 21 -1.74 1.88 1.92 1.80 1.85 1.74 1.71 1.42 1.53Object Cls. 79 54 82 76 75 76 76 34 -4.08 3.57 4.27 3.99 3.98 4.00 3.97 3.26 3.46Normals 97 98 98 98 98 97 97 6 -Egomotion 79 78 83 77 76 74 71 59 -8.60 8.58 9.26 8.41 8.34 8.15 7.94 7.32 6.85Layout80 76 85 79 77 78 70 36 -"}], "formulas": [{"formula_id": "formula_0", "formula_text": "D s\u2192t := arg min \u03b8 E I\u2208D L t D \u03b8 E s (I) , f t (I) , (1)", "formula_coordinates": [4.0, 319.71, 367.78, 225.4, 15.01]}, {"formula_id": "formula_1", "formula_text": "w i,j = EI\u2208D test [D si\u2192t (I) > D sj \u2192t (I)] EI\u2208D test [D si\u2192t (I) < D sj \u2192t (I)] .(2)", "formula_coordinates": [5.0, 86.44, 672.75, 199.92, 24.43]}, {"formula_id": "formula_2", "formula_text": "A", "formula_coordinates": [5.0, 334.88, 160.55, 2.87, 2.01]}, {"formula_id": "formula_3", "formula_text": "{s i 1 , . . . , s i mi }, t i sources \u2212 \u2212\u2212\u2212\u2212 \u2192 {s i 1 , . . . , s i mi } {s i 1 , . . . , s i mi }, t i target \u2212 \u2212\u2212\u2212 \u2192 t i .", "formula_coordinates": [5.0, 339.12, 569.31, 180.3, 33.2]}, {"formula_id": "formula_4", "formula_text": "c i := r target(i) \u2022 p i .(3)", "formula_coordinates": [6.0, 131.24, 194.12, 155.13, 9.95]}, {"formula_id": "formula_5", "formula_text": "a i,k = \uf8f1 \uf8f4 \uf8f2 \uf8f4 \uf8f3 |sources(i)| if k = i \u22121 if (k \u2212 |E|) \u2208 sources(i) 0 otherwise (4) b i = 0.(5)", "formula_coordinates": [6.0, 64.27, 349.55, 222.1, 58.04]}, {"formula_id": "formula_6", "formula_text": "a |E|+j,i := 2 \u2022 1 {target(i)=j} , b |E|+j := \u22121. (6)", "formula_coordinates": [6.0, 75.69, 435.02, 210.67, 12.16]}], "doi": ""}