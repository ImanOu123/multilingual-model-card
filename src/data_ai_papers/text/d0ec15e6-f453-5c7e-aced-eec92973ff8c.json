{"title": "Spot The Bot: A Robust and Efficient Framework for the Evaluation of Conversational Dialogue Systems", "authors": "Jan Deriu; Don Tuggener; Pius Von D\u00e4niken; Jon Ander Campos; Alvaro Rodrigo; Thiziri Belkacem; Aitor Soroa; Eneko Agirre; Mark Cieliebak", "pub_date": "", "abstract": "The lack of time-efficient and reliable evaluation methods hamper the development of conversational dialogue systems (chatbots). Evaluations requiring humans to converse with chatbots are time and cost-intensive, put high cognitive demands on the human judges, and yield low-quality results. In this work, we introduce Spot The Bot, a cost-efficient and robust evaluation framework that replaces human-bot conversations with conversations between bots. Human judges then only annotate for each entity in a conversation whether they think it is human or not (assuming there are humans participants in these conversations). These annotations then allow us to rank chatbots regarding their ability to mimic the conversational behavior of humans. Since we expect that all bots are eventually recognized as such, we incorporate a metric that measures which chatbot can uphold human-like behavior the longest, i.e., Survival Analysis. This metric has the ability to correlate a bot's performance to certain of its characteristics (e.g., fluency or sensibleness), yielding interpretable results. The comparably low cost of our framework allows for frequent evaluations of chatbots during their evaluation cycle. We empirically validate our claims by applying Spot The Bot to three domains, evaluating several stateof-the-art chatbots, and drawing comparisons to related work. The framework is released as a ready-to-use tool.", "sections": [{"heading": "Introduction", "text": "Evaluation is a long-standing issue in developing conversational dialogue systems (i.e., chatbots). The underlying difficulty in evaluation lies in the problem's open-ended nature, as chatbots do not solve a clearly-defined task whose success can be measured in relation to an a priori defined ground truth. Automatic metrics have so far failed to show high correlation with human evaluations (Liu et al., 2016;Lowe et al., 2017;Mehri and Eskenazi, 2020). Human evaluation approaches are mainly classified according to the following: single-turn vs. multi-turn evaluation, and direct user evaluation vs. expert judge evaluation. Single-turn analysis is usually performed by a human judge that rates a single response of the bot to a given context, whereas multi-turn analysis is often performed by a user that interacts with the bot and rates the interaction. Single-turn ratings disregard the multiturn nature of a dialogue (See et al., 2019). Although more and more multi-turn evaluations are performed, most of them are based on human-bot conversations, which are costly to obtain and tend to suffer from low quality (Dinan et al., 2020a). The instructions to be followed by annotators are often chosen ad-hoc and there are no unified definitions. Compounded with the use of often criticized Likert scales (Amidei et al., 2019a), these evaluations often yield a low agreement. The required cost and time efforts also inhibit the widespread use of such evaluations, which raises questions on the replicability, robustness, and thus significance of the results. In this work, we present the Spot The Bot framework, a cost-efficient evaluation methodology that can be used to rank several bots with regard to their ability to disguise as humans. It works as a multiturn-based evaluation with human judges. Spot The Bot is based on two observations: First, chatbots are trained on conversations between humans, and thus, they should be evaluated regarding their ability to mimic human behavior. Second, the longer a conversation is, the more likely it is that a bot exhibits non-human-like behavior. Spot The Bot works by generating conversations between bots, then mixing these bot-bot conversations with human-human conversations and letting human judges decide for each entity in the conversations if it is a human or a bot. The conversations are rated at different points in time, which introduces the time-dependent component. This setting allows for two different analyses: a ranking based on pairwise comparisons of bots, and the application of the Survival Analysis, which computes the survival rate for each bot at different conversation lengths. Furthermore, the human judges annotate the entities with respect to more fine-grained features, which can be chosen based on characteristics that the bots are expected to exhibit (e.g. fluency or informativeness). The Survival Analysis further allows to pin down the features that contribute to a dialogue system's survival, enabling interpretable results. We show that our framework produces reliable, repeatable results, while being quicker and more cost-effective to run than related approaches, as it does not rely on human-bot conversations and generally requires fewer annotations. Furthermore, we show that disagreement between human annotators can be interpreted as a feature of a system's performance, rather than a weakness in the evaluation approach. We apply the framework to three well-known domains and common baselines and state-of-the-art systems to produce a stable ranking among them. We release the framework as a ready-to-use tool for evaluating dialogue systems into which different systems can be plugged and compared 1 .", "publication_ref": ["b26", "b27", "b29", "b35", "b12", "b1"], "figure_ref": [], "table_ref": []}, {"heading": "Related Work", "text": "There exist various methods to evaluate dialogue systems, both automatic and human-based, but no single evaluation metric is widely agreed upon in the scientific community (Deriu et al., 2020). Automatic evaluation metrics for chatbots are known to correlate poorly with human ratings (Liu et al., 2016;Lowe et al., 2017;Mehri and Eskenazi, 2020), so we focus on human-based approaches, which can be classified in two dimensions: 1) single-turn vs. multi-turn approaches, and 2) approaches where the dialogue systems are judged by the user directly (interactive) or where judgments are made by objective experts, who do not participate in the dialogue (static).\nSingle-turn Static Evaluations. Evaluations 1 https://github.com/jderiu/ spot-the-bot-code based on a static context and a single response from the dialogue systems are widely adopted. Usually, the rating is performed by expert raters that read the response of one or more dialogue systems to a static context and rate the responses (Galley et al., 2018). Alternatively, the responses of two bots can be compared directly to choose a preferred answer (Li et al., 2016). While being relatively time and cost-efficient, single-turn evaluation fails to capture the conversation's quality as a whole. A system that tends to produce repeated answers can obtain a high single-turn score, albeit a low multi-turn one (See et al., 2019). Some authors also report poor inter-annotator agreement (Ghandeharioun et al., 2019).\nHuman-Bot Conversations. In order to perform interactive multi-turn evaluations, the standard method is to let humans converse with a chatbot and rate it afterward (Ghandeharioun et al., 2019), typically using Likert scales (van der Lee et al., 2019). The ConvAI2 challenge (Dinan et al., 2020b) and the Alexa Prize (Venkatesh et al., 2018) applied this procedure. Apart from the high cost of collecting human-bot conversations, this approach puts a high cognitive strain on humans, as they have to perform several tasks at once (Schmitt and Ultes, 2015). Besides, it is not always possible to get sensible conversations with bots, making it hard to get high-quality conversations. In fact, in the ConvAI2 challenge, half of the collected human-bot conversations were discarded due to their low quality (Dinan et al., 2020b). Finally, Likert scales are known to suffer from high annotation variance (Ghandeharioun et al., 2019), require normalization a posteriori, are prone to order effects and are less reliable than ranking-based ratings (Amidei et al., 2019b).\nSelf-talk. Recently, using self-talk dialogues, i.e., dialogues where a bot talks to itself, gained traction as a cost-effective basis for evaluation. This idea is closely related to user simulations used to evaluate task-oriented systems (Schatzmann et al., 2006). Ghandeharioun et al. (2019) and Deriu and Cieliebak (2019) use self-talk to produce automatic evaluations. In ACUTE-EVAL , the authors propose to let humans evaluate self-talk dialogues. Since self-talk does not allow direct comparisons between bots, the authors let humans read two self-talk conversations ", "publication_ref": ["b26", "b27", "b29", "b16", "b23", "b35", "b18", "b18", "b21", "b13", "b38", "b34", "b13", "b18", "b2", "b33", "b18", "b10"], "figure_ref": [], "table_ref": []}, {"heading": "Losses +=1", "text": "Survival = (2+, 3-, 5-)\nFigure 1: Overview of the Spot The Bot process for one conversation. 1: A bot-bot conversation is segmented into different lengths (e.g. 2, 3, and 5 exchanges). 2: These segments are shown to distinct sets of annotators who judge whether each entity is a bot. 4: The winner is determined for each annotated segment and survival statistics are updated. This process is repeated for all conversations between the competing bots.\nside-by-side and rate them with respect to various features. This increases the cognitive complexity of the annotation task. Furthermore, the resulting ranking of the bots is per criterion, whereas our method produces one ranking and can optionally incorporate annotations of features that yield interpretability of the results.\nTuring Test. Spot The Bot is reminiscent of the Turing Test (Turing, 1950), as the dialogue systems are evaluated based on their ability to mimic human behavior. The Turing test served as a useful mental model for understanding what machine intelligence might mean. However, it has also been criticized as a way to identify intelligence in NLP systems. Bender and Koller (2020) argues that a system may fool a user into believing it is human, and yet this does not prove that the system understands the meaning of the conversation they are having. In our approach, we claim that failing the test is a valid indicator to discriminate among bots.\nIn fact, we presume that eventually all bots will fail the test, and we collect a time component to record the time it takes for a bot to be detected.", "publication_ref": ["b36", "b4"], "figure_ref": [], "table_ref": []}, {"heading": "Spot The Bot", "text": "In this section, we first provide an overview of the Spot The Bot framework and then describe the evaluation process's individual steps.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Overview", "text": "Spot The Bot employs a tournament among chatbots to determine which performs the best at mimicking humans' conversational behavior. To measure the success of each bot, human crowd-workers are shown conversations between two competing bots at a time, mixed with conversations between two humans. The crowdworkers' task is to determine for each entity in a conversation whether it is a human or a bot (or whether the crowdworker is unsure). The bot that is most frequently annotated as being human wins the tournament. Figure 1 provides an overview of the process for one conversation. There are different use cases for Spot The Bot, e.g., when a novel dialogue strategy is to be compared against existing ones or if a set of chatbots is to be ranked in the context of a shared task. On top of returning a ranking, Spot The Bot employs the Survival Analysis, which introduces a time aspect into the evaluation and provides insights into how different features correlate to the bots' ability to pass as a human. Formally, assume a pool of b bots {B 1 , ..., B b }, which is to be ranked. For each pair of bots, a set of conversations is sampled by letting the bots talk to each other, where S ij denotes the set of conversations between bots B i and B j . Each conversation is defined as a sequence of exchanges e 0 , ..., e N , where each exchange consists of two turns: e i = {t e i 0 , t e i 1 }, one for each entity.\nSegmentation. The more exchanges there are in a conversation, the more likely it is that a bot gets recognized as such. Thus, we show different segments of the conversation to the crowdworkers. A segment is defined as the first k exchanges of the dialogue: S k ij = e 0 , ..., e k . Thus, an annotator only sees the first k exchanges of the conversation. 2 Each segment of the same conversation is rated by a different annotator to avoid that one annotator sees parts of the same conversation multiple times, which would bias the rating. We choose different segment lengths since we cannot know a priori which length is sufficient for the different bots to be recognized as such.\nHuman Conversations. We add conversations among humans to the pool of conversations that are to be rated. The human conversations are sampled from the training set used to train the dialogue systems in the respective domain. The results of the annotations of the human dialogues establish an upper bound for the evaluation. Also, they are meant to prevent annotators from concluding that all entities are bots. 3 Annotation. The annotation procedure works in two steps: First, the annotators have to decide for each entity in a conversation segment if it is a bot or a human. Second, to correlate the outcome to various characteristics of a bot, the framework allows rating specific features (e.g., fluency or appropriateness). The framework then measures the influence of these features on the survival time of the bots, which serves as an explainability component (cf. Sections 3.3 and 4.2). Features. We chose three features: sensibleness, specificity (Adiwardana et al., 2020), and fluency. The first two are shown to capture the core conversational behavior of answering sensibly and not with illogical statements while being specific to the conversation's given context. The third feature states if the utterances are grammatically correct and fluent. The features are rated by preference ranking, that is, the annotator states which of the two entities performed better with respect to the features.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Ranking", "text": "We define a win function for the annotations of the pairwise, direct conversations between two bots. The outputs of the win function are aggregated to 2 We experimented with letting crowdworkers decide where they were sure that an entity is a bot or a human. However, this approach required too much fine-tuning to constrain erratic annotator behavior, cf. Appendix B. 3 We investigated if annotators realize that conversations are either between bots or humans by looking at ratios of conversations where both entities are labeled identically, but found no evidence that this happens more often than by chance.\ndetermine the overall winner of the tournament.\nWin Function. Each annotation at each segment length S k ij = e 0 , ..., e k of a conversation constitutes the result of one annotation applied by one crowdworker, individually labeling each of the two entities as either bot, human, or unsure. The winner of segment S k ij under a crowdworker's annotation is determined by the following ordering of the labels: human > unsure > bot. That is, if bot B i is assigned the label human and bot B j has label bot or unsure, B i has won the segment. 4 Similar to Bojar et al. (2013), we define a win rate of B i against B j to aggregate the wins from all segments of all annotations stemming from conversations between bots B i and B j , as:\nWINS(B i , B j ) WINS(B i , B j ) + WINS(B j , B i ) (1)\nwhere WINS(B i , B j ) denotes the number of times that B i wins against B j .\nRanking. To create the ranking, we follow the approach by Du\u0161ek et al. (2018), where the ranking is generated by the TrueSkill (Herbrich et al., 2006) algorithm based on the win rate, and significant differences in performance are determined by bootstrap sampling. The result is a ranked set of clusters, where each cluster is composed of entities that do not have a significant difference in performance.", "publication_ref": ["b7", "b14", "b19"], "figure_ref": [], "table_ref": []}, {"heading": "Survival Analysis", "text": "While pair-wise win rates are well-suited to provide a relative ranking among a pool of bots, it does not serve as an absolute evaluation of a single bot's ability to disguise as a human. Also, the conversations' segmentation introduces a time component, which we leverage to investigate our intuition that bots are more likely to reveal themselves in longer conversations. In our evaluation, a bot that is able to disguise in long conversations can be said to be most successful. Thus, we complement our evaluation with Survival Analysis. Survival Analysis estimates probabilities for the occurrence of an event at different points in time.\nIt has a long history in the medical domain, where it is used to estimate the effectiveness of different treatments (Li and Ma, 2013). In engineering disciplines, it is applied to estimate the time to failure of machine components (Eyal et al., 2014). In our case, we are interested in the time, corresponding to the number of exchanges, until a dialogue system is spotted as such. In addition, Survival Analysis allows us to correlate finer-grained characteristics to the survival probability, which allows us to inspect which of the annotated features impact a bot's survival.\nWe interpret the annotation data as such: the spotted event occurred if the system was annotated as \"bot\" and it survived if it was annotated as \"unsure\" or \"human\". Let k be the number of exchanges in the annotated conversation segment, meaning that each dialog system produced k outputs. If the dialog system was not spotted, we know it survived for at least k exchanges. This is a so-called rightcensored data point. If the dialogue system was spotted as such, we cannot tell the exact number of exchanges it took for an annotator to spot it, meaning it could have taken less than k exchanges. We thus record that the spotting event happened in the interval (0, k], a so-called interval-censored event.\nFrom this data, we can get non-parametric estimates of the survival function of the different systems per domain (Turnbull, 1974). To check whether these differences are significant, we apply a generalized log-rank test (Zhao and Sun, 2004). We use the Cox Proportional Hazards Model (Cox, 1972) to study the influence of the features outlined in Section 3.1 on the time before the systems are spotted. 5", "publication_ref": ["b22", "b15", "b37", "b40", "b9"], "figure_ref": [], "table_ref": []}, {"heading": "Experiments", "text": "Domains. We apply Spot The Bot to three widely used domains for conversational dialogue systems: Dailydialog (Li et al., 2017), Empathetic Dialogues (Rashkin et al., 2019), and PersonaChat (Zhang et al., 2018). For each domain 6 , we prepared a pool of bots to be ranked and analyzed. For each pair of bots, we sampled |S ij | = 45 conversations. For this, we seed the conversations by using the first exchange of a conversation in the test set, which is sampled at random. Although there exists a probability that the bots resample parts of a conversation, we did not find evidence of this happening. In fact, only 2% of all sampled conversations contain an exchange, which can be found in the training material. For the annotation task, we recruited paid crowdworkers from Amazon Mechanical Turk (AMT). To avoid that, the results are biased towards the performance of a few crowdworkers, we designed a Human Intelligence Task as a batch of 20 conversations, and each worker was only allowed to work on three batches. We designed the batches so that two segments of the same conversations never appear in the same batch, and each batch contains different segments of different conversations.\nSegmentation. The segment lengths are based on the lengths of the dialogues in a domain. Since we add human conversations of the training set to be rated, the sampled dialogues should adhere to their lengths. PersonaChat and Dailydialog have longer conversations; thus, we used segments of 2, 3, and 5 exchanges. The Empathetic Dialogue domain has shorter dialogues; thus, we used segment lengths of 1, 2, and 3 exchanges.\nDialogue Systems. For each domain, we prepared a pool of dialogue systems to be ranked. If applicable, we reused existing systems. In order to assess the performance of Spot The Bot regarding weak models, we trained a small sequence-tosequence model (DR) for only 3 epochs, which returns mostly general answers. For the Dailydialog domain, we trained all bots in the pool using Par-lAI as there were no pre-trained models available.\nTo leverage the recently developed language models, we fine-tune a GPT-2 (GPT) model (Radford et al., 2018), and a BERT-Rank (BR) model. Additionally, we train a sequence-to-sequence model (S2) with attention to compare the language models to previous state-of-the-art approaches. Together with the DR model, the pool consists of b = 4 systems. For the Empathetic Dialogues, we prepared the same pool of models as in Dailydialog.\nSince the recently developed Blender model (Roller et al., 2020) is trained on the Empathetic Dialogue dataset as well, we add the pre-trained version to the pool (BL). For the PersonaChat domain, we mostly reuse the openly available systems of the ConvAI2 challenge (Dinan et al., 2020a), namely, Lost in Conversation 7 (LC) and Huggingface 8\n(HF), which were the top-rated dialogue systems in the ConvAI2 challenge (Dinan et al., 2020a), as well as KVMemNN (KV), which served as the baseline. We also add the Blender model, which is also trained in this domain. In order to have more retrieval based systems, we train a BertRank (BR) model. Together with the DR model, the pool consists of b = 6 different dialogue systems.", "publication_ref": ["b25", "b39", "b30", "b32", "b12", "b12"], "figure_ref": [], "table_ref": []}, {"heading": "Ranking Results", "text": "Table 1 gives an overview of the win rates for each pair of bots and their ranking ranges. The Chisquare test computes the significance. For each domain, most pairwise win-rates are significant.\nAs expected, DR performs worst in all three do-  mains, which is due to its repetitive nature, which is exposed over the course of a dialogue. In the Dailydialog and the Empathetic Dialogues domains, the GPT2 and the BR models perform equally, i.e., they end up in the same cluster. In both domains, systems using pre-trained language models outperform the S2 model, which is learned from scratch, which aligns with the expectation of related findings. The BL model outperforms all other models in both the PersonaChat and Empathetic Dialogues domains, which is in line with the results presented by the authors of the Blender model (Roller et al., 2020). Furthermore, the LC model is ranked very highly. This corresponds to the findings of the Con-vAI2 challenge (Dinan et al., 2020a). However, in Spot The Bot, the KV is ranked much higher than the HF model, which is not in line with the ConvAI2 evaluation.  Figure 2 shows the survival functions for the three domains. The survival rates produce the same rankings as those from pairwise win rates reported in Table 1, except for the Empathetic Dialogues domain, where GPT and BR switch places. Importantly, the distinction between these two is not significant in any of the rankings. Further non-significant differences within the Survival Analysis are S2 and DR in the Empathetic Dialogues domain, BR and S2 in the Dailydialog domain, and LC and KV in the PersonaChat domain. All other pairwise comparisons of survival curves are significant with p < 0.05 after correction for multiple comparisons.", "publication_ref": ["b32", "b12"], "figure_ref": ["fig_0"], "table_ref": ["tab_2", "tab_2"]}, {"heading": "Survival Analysis", "text": "Feature Influence. For each of the three featuresfluency, specificity, and sensibleness -annotators have to specify whether one entity performed better, the same, or worse than the other. We encode this information as 1, 0, and \u22121 respectively and fit a Cox proportional hazards model (Cox, 1972) for every system independently with the features as covariates.\nThe numerical entries in Table 2 refer to the perfeature win-rate of each bot, which is computed analogously to Equation 1 using the feature annotations directly. Bold entries in Table 2 show which features have a significant influence on the system being spotted. All significant effects go in the intuitive direction, meaning that a higher feature value leads to longer survival. For example, for the DR model, the fluency feature is significant across all three domains, and together with its low fluency win rate, we can deduce that it is often spotted due to its low fluency. Sensibleness seems to be an important feature across the board, meaning that in general, bots can be spotted due to inappropriate, nonsensical answers or hide if they respond in a suitable manner. Interestingly, specificity seems to be mostly unimportant, which could be due to either the bots not being noticeably unspecific, or it being an irrelevant feature for the chosen domains.", "publication_ref": ["b9"], "figure_ref": [], "table_ref": ["tab_4", "tab_4"]}, {"heading": "Discussion", "text": "", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "On Inter-Annotator Agreement", "text": "The robustness of the evaluation of chatbots is often hampered by inter-annotator agreement (IAA) (Gandhe and Traum, 2016). Measuring and reporting IAA is not yet a standard practice in evaluating chatbots (Amidei et al., 2019a), and producing annotations with high IAA on open-domain conversations is prone to be impeded by subjective interpretation of feature definitions and idiosyncratic annotator behavior (Bishop and Herron, 2015). In our setting, annotator disagreement on a bot's human-like behavior can be interpreted as a feature of a bot's performance: A bot that manages to fool one of two annotators into believing it is human can be said to have performed better than a bot that does not manage to fool any annotator. To analyze the annotator agreement in this light, we calculate per bot and label the percentage of cases where both annotators annotate the label if one of them does. Given three labels (human, bot, unsure), the chance for random agreement is 0.33. The results averaged over all investigated domains and segment lengths per bot, are shown in Table 3. 9 The results confirm that the bots that rank high  based on win rates and in the survival analysis (BL, GPT, LC) obtain the highest agreement on the human label and lowest agreement on the bot label. Conversely, the DR system obtains the highest agreement when being identified as a bot, and lowest when it is perceived as a human. This analysis suggests that our experiments' results do not stem from a random agreement between the annotators, i.e., the annotations of the best and worst-performing systems show agreement distinctly higher than chance regarding the respective labels.", "publication_ref": ["b17", "b1", "b5"], "figure_ref": [], "table_ref": ["tab_6"]}, {"heading": "On Reliability", "text": "One key requirement for an evaluation procedure is that repeated executions of the procedure result in the same outcome. We measure how many pairwise conversations between two bots are needed to guarantee a stable ranking.   shows for each |S ij | \u2208 {3...45} the proportion of times in which the most frequent ranking occurred.\nFor the Dailydialog domain, |S ij | = 33 pairwise conversations are enough to guarantee a stable ranking. In the other two domains, this value is reached with over 40 pairwise dialogues.\nA more in-depth analysis reveals that ranking stability depends on the significance of pairwise comparisons. For instance, in the PersonaChat domain, the KV and LC systems are not significantly different, which leads to two different rankings depending on the subsampling: in the first, KV and LC are in the same cluster, and in the second, LC and KV are in separate clusters, with LC being on top. Thus, removing either of them from the pool would yield a more stable ranking. To investigate this further, we applied a leave-one-out stability analysis. More precisely, we applied the analysis on B \\ {sys i }, where sys i \u2208 B. Figure 3b shows the result of the leave-one-out stability analysis. When leaving one between LC or KV out, the stability is achieved with 25 pairwise dialogues. When removing one of the other systems, the stability is reached with at least 40 dialogues. Thus, the number of pairwise bot-bot chats needed for Spot the Bot evaluation depends on the pool of bots to be evaluated and should be determined empirically.  Table 4 the mean time per annotation is displayed.", "publication_ref": [], "figure_ref": ["fig_2"], "table_ref": ["tab_9"]}, {"heading": "On Time Efficiency", "text": "For the Dailydialog and PersonaChat domain, the average annotation time is at around 25 seconds.\nFor the Empathetic Dialogues, it is at 18 seconds, which is due to the shorter dialogues. We compare this to the time to create conversations between humans and bots. We recruited three dialogue system experts from our lab to interact with the systems. Each expert created 5 conversations with each system. The average times do not take into account the time needed to instruct the experts. For the Dailydialog and Empathetic Dialogues domains, it takes over 2 Minutes per conversation. For PersonaChat, the time increased to almost 4 minutes. Similarly to our experts, the average time for a human-bot conversation in the wild evaluation of the ConvAI2 challenge 10 also lies at 4 minutes 11 . Considering the 100 dialogues per system used in ConvAI, the evaluation time would be 2,000 minutes per system. In Spot the Bot, 40 annotations times 24 seconds mean 16 minutes per pair of systems. Assuming a comparison between 5 systems, an approach based on human-bot annotations such as ConvAI would require 20 thousand minutes, while Spot the Bot would do with 0,16 thousand minutes 12 . Concerning other methods based on self-talk, ACUTE-EVAL did not report the time per annotation, but they reported the time required to achieve significant results in PersonaChat, which is close to 30 minutes. Our method requires only 16 minutes (with 40 annotations). Thus, Spot The Bot increases the annotation speed while reducing the human raters' mental strain.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Conclusion", "text": "In this work, we introduced Spot The Bot, a robust and time-efficient approach for evaluating conversational dialogue systems. It is based on conversations between bots rated by humans with respect to the bots' ability to mimic human behavior. We show that Spot The Bot yields robust and significant results while reducing the evaluation time compared to other evaluation frameworks. A team of researchers who would like to benchmark their system against four competing chatbots could do that for the cost of fewer than 3 hours of crowdsourced annotations. Spot the Bot facilitates developers making real progress based on frequent manual evaluations data, avoiding the use of noisy automatic metrics or once-in-a-year costly manual evaluations. We make the framework as well as the data publicly available.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A Annotation Tool", "text": "Figure 4 shows the annotation tool. The annotator is presented with a segment of the conversation, with the first i exchanges. In the first step, the annotator needs to decide for both entities separately if they are human or not. If it is not yet possible to decide, the annotator can choose to state that they are undecided. In the second step, the annotators are asked to state which of the two entities performs better with respect to three different features: fluency, sensibleness, and specificity with the following definitions:\n\u2022 Fluency: Which entities' language is more fluent and grammatically correct?\n\u2022 Sensibleness: Which entities' responses are more sensible? If the answer seems confusing, illogical, contradictory, or factually wrong then it is NOT sensible.\n\u2022 Specificity: Which entities' responses are more specific and explicit in the given context? An answer is specific if it can be given only in the current context.", "publication_ref": [], "figure_ref": ["fig_3"], "table_ref": []}, {"heading": "B Gamification", "text": "As an alternative to the segmentation approach, we experimented with a gamified version of the annotation tool (see Figure 5). In this version, the annotators were presented with the first turn of the conversation. At each point in time, they could choose whether to open the next turn or decide for an entity. If both decisions have been made, the annotators had to decide for the three aforementioned features, which entity performs better. The task was framed as a game, and the annotators received feedback in the form of a leaderboard. The score was a combination of the correctness (were the entities classified correctly) and a turn-penalty. That is, the more turns they opened, the lower the score.\nAs an additional incentive, the winner was awarded a bonus payment. However, this approach resulted in unwanted behavior of the annotators. Some always decided after just one exchange, which leads to random annotations. Others opened the whole conversation first and then decided. To counteract these behaviors the tool needed a lot of fine-tuning, making the approach not reliable for practical use.", "publication_ref": [], "figure_ref": ["fig_4"], "table_ref": []}, {"heading": "C Experimental Setup", "text": "All the systems which we used were trained using the ParlAI system. We used the available models for the Lost in Conversation system, Blender, Huggingface system, and the KVMemNN. The other systems were trained using the ParlAI training functionality with the following hyperparameters. We trained all the models for 30 epochs. For all the Bert-Rank experiments, we used the Bi-Encoder and optimized the last four layers due to GPU restrictions. The GPT2 models were trained with the standard-setting. Due to GPU restrictions, we used the small version of the GPT2 model. The sequence-to-sequence model was trained with two layers of GRUs (Cho et al., 2014), each with 512 hidden units. We used the general attention mechanism (Luong et al., 2015) and used the Fast-Text word-embeddings (Bojanowski et al., 2017). We used the ADAM optimizer (Kingma and Ba, 2014) with a learning rate of 0.001. For the small sequence-to-sequence model, we used a one layer GRU with 128 hidden units. We trained this model for only 3 epochs as we noted that after three epochs, it is able to generate the generic answers.  In Table 5, the win rates and rankings for the fluency feature are shown. For the PersonaChat domain, the ranking differs significantly from the bot detection, as KV, LC, BR, and HF are all in the same cluster. In Table 6 the win rates for the Sensibleness and Specificity Average (SSA) are shown.\nA system wins if it is favored both in sensibleness     We apply Spot The Bot on three different domains, which all are based on conversations between two humans. Thus, dialogue systems learn to imitate human conversational behavior. Personachat. PersonaChat (Zhang et al., 2018) contains dialogues between two humans, each of the conversation participants is given a predefined persona. The persona is a set of characteristics of a person (name, occupation, hobbies, etc.), and the goal of the conversation is to mimic the process of getting to know each other. Dailydialog. Dailydialog (Li et al., 2017) is a dataset that contains dialogues that occur in daily life situations. The data is crawled from English learning websites. Thus, the dialogues are better curated and more formal. Furthermore, the data is annotated with features that represent the emotion in the dialogue. For our experiment, we did not make use of these features. Empathetic Dialogues. Empathetic Dialogues (Rashkin et al., 2019) focuses on empathetic response generation. The dialogues occur between two persons that discuss a situation that happened to one of the participants. Thus, there are two types of participants: the speaker and the listener. The first describes the situation and their feelings about it, and the listener responds empathetically.  For each segment 2,3, and 5 the win-rate (WR) and the percentage of classification as humans (HP) are shown.\nIn the last row the percentage of ties is shown.\nThe intuition behind the segment length is that if the dialogue is too long, then most conversational dialogue systems will always be exposed as such. Contrary, if the dialogues are too short, there is too little information to discriminate between dialogue systems. Thus, having different lengths of conversations ensures that these extremes do not occur. The effect is shown in Table 8. For each dialogue system, the rate at which it is classified as a human is depicted for the three different segments. For each dialogue system, this rate goes down, which is in line with our intuition. Similarly, the rate of unsure classification is lower at later segments. In later segments, two phenomena occur. First, the number of ties increases, as most dialogue systems get exposed as such, the number of ties in the Dailydialog domain increases from 72% to 81%. Second, the difference between the win-rates increases. Better bots have a higher win-rate, and the lower-ranked bots get a lower win rate. However, the win-rates are less significant due to the high number of ties. For instance, the GPT model increases its win rate to 0.81, whereas the win rate for S2 decreases from 0.46 to 0.34.", "publication_ref": ["b8", "b28", "b6", "b39", "b25", "b31"], "figure_ref": [], "table_ref": ["tab_11", "tab_13", "tab_16"]}, {"heading": "G On Stability against weak Annotators", "text": "One drawback of Likert-scale based evaluation methods is that many annotations need to be removed due to unreliable annotators (Lowe et al., 2017). Spot The Bot shows that it is stable with respect to weak annotators. Since we can measure how often the annotators correctly classify an entity, we can rate the quality of an annotator. A random annotator would receive a correctness rate of 50%. Table 9 shows an overview of the annotators for each domain. Table 9: Overview of the annotator performance. The number of annotations (#Ann), the average correctness score (AVG. CORR), the average correctness score for the human-human conversations (AVG. HUM. CORR.), and the percentage of annotators that have a correctness score below 50% ( < 50%).\nThe average correctness score is significantly higher than random. For the Dailydialog and Empathetic Dialog domain, the rate of annotators, which achieved a rate below 50%, was below 10% of all annotators. For the PersonaChat domain, the rate is higher, which is due to the fact that stronger dialogue systems were in the pool of bots. The average correctness scores for predicting humans correctly is high for all domains. Hence, Spot The Bot proves to be stable against annotators with low scores.\nWhen removing all annotators with scores below 75%, the rankings remain stable. Only the significance scores decrease as a large number of dialogues gets removed. This lies in contrast to the gathering of conversations between humans and bots, which must be strictly supervised. For instance, the dialogues gathered in the wild evaluation of the ConvAI2 challenge were not usable. In fact, we applied Spot The Bot on these conversations, and the humans were rated as bots in 45% of the cases.", "publication_ref": ["b27"], "figure_ref": [], "table_ref": []}, {"heading": "Acknowledgments", "text": "", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "12 The amount of time needed by ConvAI grows linearly with the number of systems, while Spot the Bot (and ACUTE-EVAL) would grow quadratically. A pool of five systems seems reasonable for a research team, but even for larger pools (up to 51 systems) Spot the Bot is still more efficient", "journal": "Apoorv Kulshreshtha", "year": "", "authors": "Daniel Adiwardana; Minh-Thang Luong; David R So; Jamie Hall; Noah Fiedel; Romal Thoppilan; Zi Yang"}, {"ref_id": "b1", "title": "Agreement is overrated: A plea for correlation to assess human evaluation reliability", "journal": "", "year": "2019", "authors": "Jacopo Amidei; Paul Piwek; Alistair Willis"}, {"ref_id": "b2", "title": "The use of rating and Likert scales in natural language generation human evaluation tasks: A review and some recommendations", "journal": "", "year": "2019", "authors": "Jacopo Amidei; Paul Piwek; Alistair Willis"}, {"ref_id": "b3", "title": "icenReg: Regression Models for Interval Censored Data in R", "journal": "", "year": "2017", "authors": "Clifford Anderson-Bergman"}, {"ref_id": "b4", "title": "Climbing towards NLU: On meaning, form, and understanding in the age of data", "journal": "", "year": "2020", "authors": "Emily Bender; Alexander Koller"}, {"ref_id": "b5", "title": "Use and misuse of the Likert item responses and other ordinal measures", "journal": "International journal of exercise science", "year": "2015", "authors": "A Phillip; Robert L Bishop;  Herron"}, {"ref_id": "b6", "title": "Enriching word vectors with subword information", "journal": "Transactions of the Association for Computational Linguistics", "year": "2017", "authors": "Piotr Bojanowski; Edouard Grave; Armand Joulin; Tomas Mikolov"}, {"ref_id": "b7", "title": "Proceedings of the Eighth Workshop on Statistical Machine Translation", "journal": "", "year": "2013", "authors": "Ond\u0159ej Bojar; Christian Buck; Chris Callison-Burch; Christian Federmann; Barry Haddow; Philipp Koehn; Christof Monz; Matt Post; Radu Soricut; Lucia Specia"}, {"ref_id": "b8", "title": "On the properties of neural machine translation: Encoder-decoder approaches", "journal": "Association for Computational Linguistics", "year": "2014", "authors": "Kyunghyun Cho; Bart Van Merri\u00ebnboer; Dzmitry Bahdanau; Yoshua Bengio"}, {"ref_id": "b9", "title": "Regression Models and Life-Tables", "journal": "Journal of the Royal Statistical Society. Series B (Methodological)", "year": "1972", "authors": "D R Cox"}, {"ref_id": "b10", "title": "Towards a metric for automated conversational dialogue system evaluation and improvement", "journal": "Association for Computational Linguistics", "year": "2019", "authors": "Jan Deriu; Mark Cieliebak"}, {"ref_id": "b11", "title": "Eneko Agirre, and Mark Cieliebak. 2020. Survey on evaluation methods for dialogue systems", "journal": "Artificial Intelligence Review", "year": "", "authors": "Jan Deriu; Alvaro Rodrigo; Arantxa Otegi; Guillermo Echegoyen; Sophie Rosset"}, {"ref_id": "b12", "title": "The second conversational intelligence challenge (convai2)", "journal": "Springer International Publishing", "year": "2020", "authors": "Emily Dinan; Varvara Logacheva; Valentin Malykh; Alexander Miller; Kurt Shuster; Jack Urbanek; Douwe Kiela; Arthur Szlam; Iulian Serban; Ryan Lowe; Shrimai Prabhumoye; Alan W Black; Alexander Rudnicky; Jason Williams; Joelle Pineau; Mikhail Burtsev; Jason Weston"}, {"ref_id": "b13", "title": "The second conversational intelligence challenge (convai2)", "journal": "Springer International Publishing", "year": "2020", "authors": "Emily Dinan; Varvara Logacheva; Valentin Malykh; Alexander Miller; Kurt Shuster; Jack Urbanek; Douwe Kiela; Arthur Szlam; Iulian Serban; Ryan Lowe; Shrimai Prabhumoye; Alan W Black; Alexander Rudnicky; Jason Williams; Joelle Pineau; Mikhail Burtsev; Jason Weston"}, {"ref_id": "b14", "title": "Findings of the E2E NLG challenge", "journal": "Association for Computational Linguistics", "year": "2018", "authors": "Ond\u0159ej Du\u0161ek; Jekaterina Novikova; Verena Rieser"}, {"ref_id": "b15", "title": "Survival analysis of automobile components using mutually exclusive forests", "journal": "IEEE Transactions on Systems, Man, and Cybernetics", "year": "2014", "authors": "A Eyal; L Rokach; M Kalech; O Amir; R Chougule; R Vaidyanathan; K Pattada"}, {"ref_id": "b16", "title": "End-to-end conversation modeling : Moving beyond chitchat dstc 7 task 2 description", "journal": "", "year": "2018", "authors": "Michel Galley; Chris Brockett; Xiang Gao; Bill Dolan; Jianfeng Gao"}, {"ref_id": "b17", "title": "A semi-automated evaluation metric for dialogue model coherence", "journal": "Springer", "year": "2016", "authors": "Sudeep Gandhe; David Traum"}, {"ref_id": "b18", "title": "Approximating interactive human evaluation with self-play for open-domain dialog systems", "journal": "", "year": "2019", "authors": "Asma Ghandeharioun; Judy Hanwen Shen; Natasha Jaques; Craig Ferguson; Noah Jones; Agata Lapedriza; Rosalind Picard"}, {"ref_id": "b19", "title": "TrueSkillTM: A Bayesian Skill Rating System", "journal": "MIT Press", "year": "2006", "authors": "Ralf Herbrich; Tom Minka; Thore Graepel"}, {"ref_id": "b20", "title": "Adam: A method for stochastic optimization", "journal": "", "year": "2014", "authors": "P Diederik; Jimmy Kingma;  Ba"}, {"ref_id": "b21", "title": "Best practices for the human evaluation of automatically generated text", "journal": "", "year": "2019", "authors": "Chris Van Der Lee; Albert Gatt; Sander Emiel Van Miltenburg; Emiel Wubben;  Krahmer"}, {"ref_id": "b22", "title": "Survival analysis in medicine and genetics", "journal": "CRC Press", "year": "2013", "authors": "Jialiang Li; Shuangge Ma"}, {"ref_id": "b23", "title": "A persona-based neural conversation model", "journal": "Long Papers", "year": "2016", "authors": "Jiwei Li; Michel Galley; Chris Brockett; Georgios Spithourakis; Jianfeng Gao; Bill Dolan"}, {"ref_id": "b24", "title": "Acute-eval: Improved dialogue evaluation with optimized questions and multi-turn comparisons", "journal": "", "year": "2019", "authors": "Margaret Li; Jason Weston; Stephen Roller"}, {"ref_id": "b25", "title": "DailyDialog: A manually labelled multi-turn dialogue dataset", "journal": "", "year": "2017", "authors": "Yanran Li; Hui Su; Xiaoyu Shen; Wenjie Li; Ziqiang Cao; Shuzi Niu"}, {"ref_id": "b26", "title": "How NOT to evaluate your dialogue system: An empirical study of unsupervised evaluation metrics for dialogue response generation", "journal": "Association for Computational Linguistics", "year": "2016", "authors": "Chia-Wei Liu; Ryan Lowe; Iulian Serban; Mike Noseworthy; Laurent Charlin; Joelle Pineau"}, {"ref_id": "b27", "title": "Towards an automatic Turing test: Learning to evaluate dialogue responses", "journal": "Association for Computational Linguistics", "year": "2017", "authors": "Ryan Lowe; Michael Noseworthy; Iulian Vlad Serban; Nicolas Angelard-Gontier; Yoshua Bengio; Joelle Pineau"}, {"ref_id": "b28", "title": "Effective approaches to attention-based neural machine translation", "journal": "", "year": "2015", "authors": "Thang Luong; Hieu Pham; Christopher D Manning"}, {"ref_id": "b29", "title": "Usr: An unsupervised and reference free evaluation metric for dialog generation", "journal": "", "year": "2020", "authors": "Shikib Mehri; Maxine Eskenazi"}, {"ref_id": "b30", "title": "Language Models are Unsupervised Multitask Learners", "journal": "", "year": "2018", "authors": "Alec Radford; Jeffrey Wu; Rewon Child; David Luan; Dario Amodei; Ilya Sutskever"}, {"ref_id": "b31", "title": "Towards empathetic opendomain conversation models: A new benchmark and dataset", "journal": "Association for Computational Linguistics", "year": "2019", "authors": "Eric Michael Hannah Rashkin; Margaret Smith; Y-Lan Li;  Boureau"}, {"ref_id": "b32", "title": "Recipes for building an open-domain chatbot", "journal": "", "year": "2020", "authors": "Stephen Roller; Emily Dinan; Naman Goyal; Da Ju; Mary Williamson; Yinhan Liu; Jing Xu; Myle Ott; Kurt Shuster; Eric M Smith"}, {"ref_id": "b33", "title": "A survey of statistical user simulation techniques for reinforcement-learning of dialogue management strategies. The Knowledge Engineering", "journal": "Review", "year": "2006", "authors": "Jost Schatzmann; Kark Weilhammer; Matt Stuttle; Steve Young"}, {"ref_id": "b34", "title": "Interaction quality: Assessing the quality of ongoing spoken dialog interaction by experts-and how it relates to user satisfaction", "journal": "Speech Communication", "year": "2015", "authors": "Alexander Schmitt; Stefan Ultes"}, {"ref_id": "b35", "title": "What makes a good conversation? how controllable attributes affect human judgments", "journal": "Long and Short Papers", "year": "2019", "authors": "Abigail See; Stephen Roller; Douwe Kiela; Jason Weston"}, {"ref_id": "b36", "title": "Computing Machinery and Intelligence. Mind", "journal": "LIX", "year": "1950", "authors": "A M Turing"}, {"ref_id": "b37", "title": "Nonparametric Estimation of a Survivorship Function with Doubly Censored Data", "journal": "Journal of the American Statistical Association", "year": "1974", "authors": "W Bruce;  Turnbull"}, {"ref_id": "b38", "title": "On evaluating and comparing open domain dialog systems", "journal": "", "year": "2018", "authors": "Anu Venkatesh; Chandra Khatri; Ashwin Ram; Fenfei Guo; Raefer Gabriel; Ashish Nagar; Rohit Prasad; Ming Cheng"}, {"ref_id": "b39", "title": "Personalizing dialogue agents: I have a dog, do you have pets too?", "journal": "Long Papers", "year": "2018", "authors": "Saizheng Zhang; Emily Dinan; Jack Urbanek; Arthur Szlam; Douwe Kiela; Jason Weston"}, {"ref_id": "b40", "title": "Generalized logrank test for mixed interval-censored failure time data", "journal": "Statistics in Medicine", "year": "2004", "authors": "Qiang Zhao; Jianguo Sun"}], "figures": [{"figure_label": "2", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Figure 2 :2Figure 2: Survival function per system estimated for each domain.", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "Figure 3 :3Figure 3: Ranking stability experiments.The x-axis denotes the number of pairwise conversations between two bots. The y-axis denotes the rate at which the same ranking is achieved across 1000 repetitions. The horizontal line denotes the 95% mark. In the lower Figure, we show the experiments for the PersonaChat domain, when leaving one system out.", "figure_data": ""}, {"figure_label": "4", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Figure 4 :4Figure 4: The annotation tool. Left is the decision about the nature of each entity. Right is the decision with regard to the features.", "figure_data": ""}, {"figure_label": "5", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "Figure 5 :5Figure 5: Gamified version of the annotation tool.", "figure_data": ""}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "", "figure_data": ""}, {"figure_label": "2", "figure_type": "table", "figure_id": "tab_4", "figure_caption": "", "figure_data": ""}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_6", "figure_caption": "Annotator agreement on labels.", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_7", "figure_caption": "That is, what is the lower bound to |S ij | so that the ranking is stable. For each |S ij | \u2208 {3...45}, we randomly sample |S ij | conversation for each pair and compute the ranking. We repeat this subsampling procedure 1000 times and measure the minimum |S ij | that guarantees the same ranking in at least 95% of cases. Figure3a", "figure_data": ""}, {"figure_label": "4", "figure_type": "table", "figure_id": "tab_9", "figure_caption": "Overview of time efficiency in Seconds. Spot The Bot annotation versus creating human-bot conversations.", "figure_data": ""}, {"figure_label": "5", "figure_type": "table", "figure_id": "tab_11", "figure_caption": "Win rates for each pair of systems for each of the three domains. The bold entries denote significance (p < 0.05) computed with Chi-square test.", "figure_data": ""}, {"figure_label": "6", "figure_type": "table", "figure_id": "tab_13", "figure_caption": "Win rates for each pair of systems for each of the three domains. The bold entries denote significance (p < 0.05) computed with Chi-square test. and specificity. The rankings are similar to the bot detection rankings. For empathetic dialogues, the GPT model performs indistinguishably from the S2 model. In the PersonaChat domain, HF and BR are in the same cluster.", "figure_data": "E Domain DetailsDOMAIN NAME#DIALOGUES AVG. EXCHANGES |B| SEGMENTSDAILYDIALOG131183.7442,3,5EMPATHETIC DIALOGUES250001.6551,2,3PERSONACHAT109077.8562,3,5"}, {"figure_label": "7", "figure_type": "table", "figure_id": "tab_14", "figure_caption": "Overview of the domains", "figure_data": ""}, {"figure_label": "8", "figure_type": "table", "figure_id": "tab_16", "figure_caption": "Segment Analysis for the Dailydialog domain.", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_17", "figure_caption": "DOMAIN #ANN AVG. CORR AVG. HUM. CORR. < 50%", "figure_data": "DD3377%86%9.1%ED3263%92%7.5%PC4069%77%22.8%"}], "formulas": [{"formula_id": "formula_0", "formula_text": "WINS(B i , B j ) WINS(B i , B j ) + WINS(B j , B i ) (1)", "formula_coordinates": [4.0, 348.04, 295.62, 177.5, 25.56]}], "doi": "10.18637/jss.v081.i12"}