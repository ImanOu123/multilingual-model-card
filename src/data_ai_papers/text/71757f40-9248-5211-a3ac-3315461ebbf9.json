{"title": "Constraint on Five Points in Two Images", "authors": "Tomas Werner", "pub_date": "", "abstract": "It is well-known that epipolar geometry relating two uncalibrated images is determined by at least seven correspondences. If there are more than seven of them, their positions cannot be arbitrary if they are to be projections of any world points by any two cameras. Less than seven matches have been thought not to be constrained in any way. We show that there is a constraint even on five matches, i.e., that there exist forbidden configurations of five points in two images. The constraint is obtained by requiring orientation consistence-points on the wrong side of rays are not allowed. For allowed configurations, we show that epipoles must lie in domains with piecewise-conic boundaries, and how to compute them. We present a concise algorithm deciding whether a configuration is allowed or forbidden.", "sections": [{"heading": "Introduction", "text": "The 1 retina of a central camera is usually modelled by the projective plane. This gives to our disposal synthetic projective geometry and also linear algebra because flats in the projective plane can be represented by subspaces of the real vector 3-space. However, it has been observed several times [5,7,13,3] that projective geometry is an unnecessarily wide model for computer vision because it factorizes out orientation of flats. Orientation clearly plays a r\u00f4le because light rays are oriented halflines rather than unoriented infinite lines. Thus, the projective geometry can model configurations of flats and their camera projections that are inconsistent in orientation and hence cannot occur in reality.\nThe oriented projective geometry [9] (also called twosided projective) is a more suitable model because it does represent orientation. In the vector space representation, orientation is expressed by orientation of bases of subspaces: two bases represent the same flat if they not only span the same subspace but also have equal handedness.\nEpipolar geometry, so useful for photogrammetry and 1 This paper was started in Oxford and finished in Prague. I thank the EC Projects VIBES and IST-2001-32184 ACTIPRET, the grant Grant Agency of the Czech Republic (grant 102/01/0971), and the grant MSM 212300013 for support during these periods.  computer vision [6], has been studied already by the 19-th century projective geometers: given two 7-tuples of points in projective plane, find two other points such that the first point joined with the first 7-tuple and the second point joined with the second 7-tuple form a pair of line pencils related by a homography (e.g., in [4]). The well-known result is that 7 is the right number-for less points, the task is ambiguous, for more, it has no solution in general. This paper shows that even five correspondences may have no solution for epipolar geometry if orientation is taken into account. Nothing is assumed about the cameras except the fact that they are central and linear-no affine information, no rectangular pixels, the cameras can be different (their image coordinate systems can even have opposite handedness), moreover they can be directional or panoramic 2 . Figure 1 illustrates an example configura-tion of five correspondences that is not consistent with any epipolar geometry. Figure 2 shows an example of an allowed configuration and the loci where the epipoles can only be. These regions have piecewise-conic boundaries, with vertices in some of the given correspondences.\nThe paper is organized as follows. After introducing the notation, the oriented epipolar constraint and its decomposition into the projective and orientation part is described in section 3. Each of these parts imposes a constraint on simultaneous position of the epipoles, which combined together are promised to yield the final constraint. Section 4 derives the projective part and section 5 combines the two together. A concise explicit algorithm deciding whether a configuration of five point pairs is feasible is presented in section 6. Finally, classes of 3D reconstructions from 5 points are characterized in section 7.", "publication_ref": ["b4", "b6", "b12", "b2", "b8", "b0", "b5", "b3", "b1"], "figure_ref": ["fig_0", "fig_1"], "table_ref": []}, {"heading": "Notation and Concepts", "text": "{x, y, z} denotes a set while (x, y, z) denotes an ordered list. Set-theoretical difference is A \\ B. R is the set of reals, x \u223c y is equality of two vectors up to a non-zero scale, x + \u223c y is equality up to a positive scale. [x, y, z] is det([x, y, z]). Kronecker product of two vectors or matrices is x \u2297 y, column-wise matrix vectorization is vec(A).\nP 2 denotes the projective plane, and S 2 the oriented projective 2-space (i.e., the 2-sphere). Following [9], \u00acx denotes the antipode x, x \u2228 y denotes the join of two points forming a line, and a \u2227 b is the meet of two lines forming a point. x \u2228 y is often abbreviated as xy. The pencil of three lines joining points x 1 , x 2 , x 3 with y is thus y(x 1 , x 2 , x 3 ).\nBy x in italics we denote a point, either from P 2 or S 2 . A homogeneous vector from R 3 representing x is denoted by x in bold face. All vectors {\u03bbx| \u03bb = 0} represent the same x \u2208 P 2 , while only vectors {\u03bbx| \u03bb > 0} represent x \u2208 S 2 . The antipode \u00acx is represented by \u2212x. We will freely swap between boldface and italics symbols, assuming automatically that they relate to the same object. Note, symbols in italics mean abstract geometrical entities in the synthetic geometry sense, whereas boldface symbols are mere vectors. Thus expressions like x \u2208 y \u2228 z or x + y are meaningful, whereas x + y or x \u2208 l are not.\nFor any symbol s, s denotes entity related to the first image, while s is related to the second image.\n(x 1 , . . . , x n ) (y 1 , . . . , y n ) means that two point lists from P n are related by a homography, \u2203H\u2200i(y i \u223c Hx i ). (x 1 , . . . , x n ) + (y 1 , . . . , y n ) means that two point lists from S n are related by an oriented homography [9,13], \u2203H\u2200i(y i\n+ \u223c Hx i ). In P 1 , the cross-ratio of four points is x 1 , x 2 , x 3 , x 4 = [x 1 , x 2 ][x 3 , x 4 ][x 1 , x 3 ] \u22121 [x 2 , x 4 ] \u22121 . Symbol x 1 x 2 || x 3 x 4 denotes that x 1 , x 2 separates x 3 , x 4 .\nThere are 3 possibilities, x 1 x 2 || x 3 x 4 , x 1 x 3 || x 2 x 4 , and x 1 x 4 || x 2 x 3 , respectively equivalent to x 1 , x 2 , x 3 , x 4 greater than 1, between 0 and 1, and negative [8].\nChirotope \u03c7[(x 1 , . . . , x n )] of a list of points from S 2 is the list of signs sgn[x i , x j , x k ] where i, j, k are all different triplets of indices from 1, . . . , n. Chirotope \u03c7[y(x 1 , . . . , x n )] of the pencil of lines y(x 1 , . . . , x n ) is the list of signs sgn[y, x i , x j ] for all different index pairs i, j. Chirotope is a concept from the theory of oriented matroids [2] (also cf. [3]). It captures exactly the orientation information which is factorized out by the projective geometry.", "publication_ref": ["b8", "b8", "b12", "b7", "b1", "b2"], "figure_ref": [], "table_ref": []}, {"heading": "Two Constraints on Joint Epipole", "text": "Let G n = {(x 1 , x 1 ), . . . , (x n , x n )} be a configuration of n point pairs in two images. A necessary condition for G n to be projections of some n world points by some pair of cameras is that [4,6] there are two points e and e such that e(x 1 , . . . , x n ) e (x 1 , . . . , x n ) .\n(\n)1\nThis condition is not sufficient because it allows for scene points on wrong sides of the rays. It can be augmented to forbid that as follows: the points and epipoles are considered in S 2 rather than in P 2 , and the homography must be oriented 3 , e(x 1 , . . . , x n ) + e (x 1 , . . . , x n ). We will not use the last relation directly; instead, it can be shown [13] equivalent to simultaneously requiring (1) and\n\u03c7[e(x 1 , . . . , x n )] = \u2212\u03c7[e (x 1 , . . . , x n )] .(2)\nFor n \u2264 7, the unoriented condition (1) alone does not impose any constraint on either epipole separately. However, it is a constraint on the joint epipole (e, e ) \u2208 P 2 \u00d7 P 2 for n \u2265 2. I.e., if e is given, the location of e might not arbitrary anymore, forced to obey (1). Similarly, (2) constrains the oriented joint epipole (e, e ) \u2208 S 2 \u00d7 S 2 .\nWe will refer to (1) and (2) as projective constraint and orientation constraint on the joint epipole, respectively, and denote the sets of joint epipoles satisfying them for a configuration G n respectively by P (G n ) and S(G n ). The set satisfying both constraints is 4 \nE(G n ) = P (G n ) \u2229 S(G n ).\nThe rest of the paper will show that for n = 5, the combined constraint restricts e to lie in a subset of the first image plane rather than anywhere in the image, i.e., {e | \u2203e [(e, e ) \u2208 E(G 5 )]} = P 2 , and that there are configurations for which E(G 5 ) = \u2205.", "publication_ref": ["b3", "b5", "b2", "b12", "b3"], "figure_ref": [], "table_ref": []}, {"heading": "Projective Constraint", "text": "This section characterizes P (G n ) for up to n = 5. All points are considered in P 2 .\nLine-preserving property. In P (G 2 ), both epipoles are arbitrary unless one of them lies on the line joining the points. It follows from ( 1) that (e \u2208 x 1 \u2228 x 2 ) \u21d4 (e \u2208 x 1 \u2228 x 2 ). This indeed holds for all pairs of correspondences in G n . Four points. In P (G 4 ), one epipole is free and the other epipole is constrained by it to lie on a conic. Let e be given. Let Q e denote the conic determined by the points {e, x 1 , . . . , x 4 } and h denote the homography sending (x 1 , . . . , x 4 ) to (x 1 , . . . , x 4 ). Then e must lie on the conic Q e = h(Q e ). This follows from the Steiner theorem [8], saying that the locus of points e for which e(x 1 , . . . , x 4 ) is constant is any conic passing through x 1 , . . . , x 4 .\nFive points. In P (G 5 ), one epipole is free and the other is related with it by a Cremona transformation of degree 5. This is a classical result [10], which however is not widely known in computer vision 5 . It is obtained from the fact that the four-point constraint must hold for all five four-tuples from the five correspondences, i.e., P\n(G 5 ) = \u2229 5 i=1 P (G 4 i ) where G 4 i = {(x 1 , x 1 ), . . . , (x 5 , x 5 )} \\ {(x i , x i )}.\nLet e be given and let Q e i be the conic through the points {e, x 1 , . . . , x 5 } \\ {x i } and h i be the homography sending x j to x j for j \u2208 {1, . . . , 5} \\ {i}. Then e must lie simultaneously on all conics Q e i = h i (Q e i ). Quite surprisingly, all Q e 1 , . . . , Q e 5 intersect in a single point 6 for any e. Thus, there is a functional relationship between e and e defined everywhere except in x i , which is denoted by e = f (e).\nLet us construct six conics Q 0 , . . . , Q 5 in the first image and six conics Q 0 , . . . , Q 5 in the second image as follows. Q 0 is given by x 1 , . . . , x 5 and Q i = h i (Q 0 ). The conics Q 0 and Q 1 , . . . , Q 5 are obtained symmetrically.\nIf e \u2208 Q 0 (i.e., e is conconic with all x i ), then Q e i = Q 0 and Q e i = Q i for all i, and e lies on the common intersection of Q i . We will denote this intersection by x 0 . Symmetrically, x 0 is the common intersection of Q i . The new pair (x 0 , x 0 ) is uniquely defined by G 5 and it is the only point pair which would bring no information if added to G 5 . In other words, G 6 deg = G 5 \u222a {(x 0 , x 0 )} is a degenerate configuration in the sense that P (G 5 ) = P (G 6 deg ). The new pair (x 0 , x 0 ) plays the same r\u00f4le as any other pair (x i , x i ).\nIn fact, the extended configuration G 6 deg is more complete and symmetric than the original G 5 . The pair (x 0 , x 0 ) also allows to construct Q i and Q i without using h i , because Q i is a conic through {x 0 , . . . , x 5 }\\{x i }, and similarly for Q i .\nRecall [8] that Cremona transformations are mappings from P 2 to P 2 that are birational, i.e., both forward and inverse mapping is given by polynomials in homogeneous coordinates. A Cremona transformation of degree d is continuous and invertible everywhere except in d + 1 exceptional points where it is undefined, and d + 1 exceptional curves, which are each sent to the corresponding exceptional point. Everything is symmetric, there are d + 1 exceptional points and curves in each plane.\nf (e) can be evaluated by computing the intersection e of any two conics Q e i . Since these two conics share three points, the intersection can be expressed by polynomials in homogeneous coordinates 7 . Therefore f is birational. We showed that 8 f (Q i ) = x i for each i = 0, . . . , 5, therefore Q i and Q i are its exceptional curves, and x i and x i are its corresponding exceptional points. 7 The intersection of two conics sharing three points is conveniently computed using the reciprocal Cremona transformation [8]. The point reciprocal to\nx = (x 1 , x 2 , x 3 ) is given by x * = (x 2 x 3 , x 3 x 1 , x 1 x 2 ) . Note, (x * ) * = x.\nIts crucial property is that it sends the line x 1 x 2 to the conic given by {e 1 , e 2 , e 3 , x * 1 , x * 2 }, where e i are the three basis vectors (1, 0, 0) , (0, 1, 0) , (0, 0, 1) . The fourth common point of two conics\n{e 1 , e 2 , e 3 , x 1 , x 2 } and {e 1 , e 2 , e 3 , y 1 , y 2 } is just (x * 1 x * 2 \u2227 y * 1 y * 2 ) *\n. By simplifying this expression I also obtained that the degree of f is 5. 8 The following subtlety needs to be explained here. If e \u2208 Q i , then e = f (Q i ) = x i . But this does not correspond to any configuration of cameras and a 3D point X i corresponding to (x i , x i ), because if e = x i then the camera centers and X i are colinear and inevitably it is e = x i , if it happens to be consistent with (1). The statement f (Q i ) = x i describes the limit case, it says what is happening to e if e is very near Q i . Cell-preserving property. Central to G 5 is the conic web in each image plane formed by the exceptional curves and points of f (figure 3). This structure has a number of interesting properties, most of them naturally following from the correspondence induced by f and from continuity of f . The most useful for us is the following cell-preserving property.\nThe exceptional curves partition the first image plane into a system of cells, delineated by piecewise-conic boundaries. A cell C is uniquely characterized by the subset of conics that participate to form its boundary, or, equivalently, by the subset of points x i that belong to its boundary. Let I, J \u2282 {0, . . . , 5} be two sets of indices and let C IJ denote a cell whose boundary is formed by arcs of conics {Q i | i \u2208 I} and by points {x j | j \u2208 J}.\nFor each cell C IJ in the first image there is always a cell C I J in the second image such that I = J and J = I. Therefore, there is one-to-one correspondence between cells in the first and the second image. The cell-preserving property says that any cell C IJ is sent to its corresponding cell C JI by f . A typical pair of two corresponding cells is illustrated in figure 4.\nThe properties of f we will need can be summarized as follows: f (x i x j ) = x i x j , f (Q i ) = x i , and f (C IJ ) = C JI .", "publication_ref": ["b7", "b9", "b4", "b5", "b5", "b7", "b6", "b6", "b7", "b7", "b0"], "figure_ref": ["fig_2", "fig_3"], "table_ref": []}, {"heading": "Combining the Two Constraints", "text": "In this section, the set E(G 5 ) = P (G 5 ) \u2229 S(G 5 ) is constructed. The following observation is crucial: if two epipoles in the first image plane are inside a single cell C IJ , they are either both allowed or both forbidden. Formally,\n(e 1 , e 2 \u2208 C IJ ) \u21d2 [(e 1 , f (e 1 )) \u2208 E \u21d4 (e 2 , f (e 2 )) \u2208 E] .\nIn other words, the property of 'being an allowed epipole' is constant inside any cell. This is rather surprising-one would expect that this property changes if the epipole e crosses any line x i x j , because the sign of [e, x i , x j ] in (2) swaps. However, due to the line preserving property of f , If e = x i , the projective constraint restricts e to lie on Q i . Imposing the oriented constraint further forces e to lie on a segment of Q i , rather than anywhere on Q i . We call it the allowed segment. The allowed segment of Q i is given by omitting the index i from (2), i.e., by the condition\n(\u2200j, k \u2208 {1, . . . , 5}\\{i}) ([e, x j , x k ][x i , x j , x k ] < 0) (3)\nwhere e is any point on the segment. Four segments, delimited by neighboring pairs of points {x 1 , . . . , x 5 } \\ {x i }, are considered on each Q i . It can be shown that there is at most one allowed segment on each Q i .\nIt follows from continuity of f that each allowed segment is part of the boundary of some allowed cell and that the boundary of each allowed cell consists only of allowed segments. Two allowed cells never touch, except in point x 0 ; however, if an allowed segment contains x 0 it never stops there but always passes through it because x 0 is absent in (3). In other words, x 0 is the only point where allowed segments can cross each other. Therefore, the set of allowed segments uniquely determines the set of allowed cells and hence E(G 5 ). Constructing E(G 5 ) has just been reduced to enumeration of allowed segments, which is easy using (3).\nExamples of regions of allowed epipoles for three different configurations are in figures 2 and 5. An example of a forbidden configuration is in figure 1, in which x 1 , . . . , x 5 are respectively (0, 0, 1) , (0, 1, 1) , (1, 0, 1) , ( ", "publication_ref": ["b2", "b2"], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "Explicit Constraint on Five Points", "text": "Here, we'll give the algorithm deciding whether a given configuration G 5 is forbidden or allowed, i.e., whether E(G 5 ) is empty or non-empty. It already follows from section 5, but we will simplify it, providing additional insights.\nHow to sort five points on a conic. We will show how to compute the order of five points on the conic given by them. We will need it later in this section.\nThe set of possible orderings of n points in P 1 is equal to the set of their permutations factorized by cyclic permutations and reversion. This factorized set has n!/(2n) elements, which we call projective orders. E.g., there is a single projective order of 3 points, {(123)}, 3 projective orders of 4 points, {(1234), (1243), (1423)}, and 12 projective orders of 5 points, {(12345), (12354), ( 12534), ( 15234), ( 12435), ( 12453), ( 12543), ( 15243), ( 14235), ( 14253), ( 14523), (15423)}.\nA d-degree curve in P d is, up to a d-dimensional projectivity, isomorphic to P 1 via the mapping c :\nP 1 \u2192 P d given by (u, v) \u2192 (u d , u d\u22121 v, . . . , uv d\u22121 , v d ) .\nExamples are a conic in P 2 or a (twisted) cubic in P 3 . Therefore, the projective order of points c(x 1 ), . . . , c(x n ) \u2208 P d on the curve is the same as the projective order of x 1 , . . . , x n \u2208 P 1 .\nThe projective order of d + 3 points on a d-degree curve in P d can be computed without explicitly using c because it is closely related to separations of pencils of quadruples of hyperplanes. E.g., there exist 12 'qualitatively different' configurations of 5 points in P 2 , given by whether x i (x j , x k ) || x i (x l , x m ) for all different 5-tuples (i, j, k, l, m). They correspond to the 12 projective orders of the points on the conic given by them.\nIn P 2 , it is easy to verify that given four points x 1 , . . . , x 4 on a conic Q, the following three statements are equivalent:\n1. The projective order of x 1 , . . . , x 4 on Q is (1234). In S 2 , five points define a spherical conic rather than a projective one. A non-degenerate spherical conic Q consists of two disconnected antipodal components (see figure 6a). The equivalence 1 \u21d4 3 allows to find out which point is on which component (up to swapping the components) as follows. The inscribed rectangle theorem says that the line l = (x 1 x 2 \u2227 x 3 x 4 )(x 1 x 4 \u2227 x 2 x 3 ) is the polar of the point y = x 1 x 3 \u2227 x 2 x 4 with respect to any conic passing through x 1 , . . . , x 4 . If the projective order of x 1 , . . . , x 4 on Q is (1234), which can be done by renaming indices, y is inside Q and hence l is outside. Thus, l separates the two components of Q in S 2 (figure 6b). The points on the right of l are on one component, the points on the left on the other. Simplifying the algorithm. Recall from section 5 that finding whether Q i contains an allowed segment requires computing an arbitrary point e on each of the four segments of Q i and testing it for (3). We can get rid of computing these arbitrary points as follows.\nRename indices of the pairs (x 1 , x 1 ), . . . , (x 5 , x 5 ) so that the projective order of x 1 , . . . , x 5 on Q 0 is (12345). Since Q i = h \u22121 i (Q 0 ) and projectivities preserve projective order, this ensures that the projective order of\nx 2 , x 3 , x 4 , x 5 on Q 1 is (2345), of x 1 , x 3 , x 4 , x 5 on Q 2 is (1345), etc.\nSince E(G n ) is invariant to replacing any pair (x i , x i ) with (\u00acx i , \u00acx i ), we can do this replacement for appropriate pairs so that {x 1 , . . . , x 5 } \\ {x i } all lie on a single component of the spherical conic Q i , using the pivot line as described above. Now, the list of signs of [e, x j , x k ], where e is on any fixed segment and j, k \u2208 {1, . . . , 5} \\ {i}, is independent on the positions of x 1 , . . . , x 5 and hence known in advance. Testing whether Q i contains an allowed segment merely requires comparing these signs with signs of the appropriate determinants [x i , x j , x k ] according to (3). E.g., after renaming indices and replacing appropriate pairs with antipodes, the conic Q 5 with points x 1 , . . . , x 4 on it looks always as shown in figure 6b. It is obvious from the figure what are the signs of [e, x j , x k ] for each segment.\nTo summarize, the following function returns whether a configuration of five point pairs in two images is allowed:  Note, given all but one points from G 5 , e.g., {x 1 , . . . , x 5 , x 1 , . . . , x 4 }, the locus of the last point, x 5 , for which E(G 5 ) = \u2205 is a non-convex spherical polygon. Its vertices are a subset of the 5 + 15 = 20 intersections of the 5 2 lines x i x j (not only x i ) and its sides are segments of these lines.\n1;1]*(l1*x1)); s1 = [-1 -1 -1 +1 +1 +1 +1 -1 -1 -1 -1 +1 +1 +1 -1 +1 -1 -1 +1 +1 +1 +1 +1", "publication_ref": ["b2", "b4"], "figure_ref": ["fig_7", "fig_7", "fig_7"], "table_ref": []}, {"heading": "Chirotope of 3D Reconstruction", "text": "If (e, e ) \u2208 E(G 5 ), there exist an oriented projective reconstruction from G 5 , i.e., there are two cameras P, P and 3D points X i such that x i + \u223c PX i and x i + \u223c P X i [5,6,13]. Let P \u2227 denote the oriented camera center, being the wedge product of the three rows of P. In this section, we will investigate the 3D reconstruction (P \u2227 , P \u2227 , X 1 , . . . , X 5 ).\nConsider the extended degenerate configuration of six points G 6 deg = G 5 \u222a {(x 0 , x 0 )}, which was described in section 4. Let all 12 points x i , x i be from S 2 and let (e, e ) satisfy ( 1) and (2). Unlike in section 5, also the pair (x 0 , x 0 ) is assigned orientation and is present in (2). We can compute, up to a 3D oriented homography, cameras P and P and points X 0 , . . . , X 5 such that x i + \u223c PX i and x i + \u223c P X i for i = 0, . . . , 5. I noticed that if e crosses the line x i x j , two following determinants change sign: [P \u2227 , P \u2227 , X i , X j ] and [X a , X b , X c , X d ] where {a, b, c, d} = {0, . . . , 5} \\ {i, j}.\nThus, the lines joining the points x 0 , . . . , x 5 partition the allowed cell(s) into regions corresponding to different chirotopes of the 3D reconstruction (P \u2227 , P \u2227 , X 1 , . . . , X 5 ) from G 5 .\nTheses classes of 3D reconstructions can be tested for cheiral inequalities 9 , because the solvability of cheiral inequalities clearly depends only on the chirotope of the reconstruction. This provides another constraint on G 5 , which, however, can be violated only for panoramic images [13], because it has been shown that the cheiral inequalities are always satisfied for two directional images [5,13].", "publication_ref": ["b4", "b5", "b12", "b1", "b1", "b8", "b12", "b4", "b12"], "figure_ref": [], "table_ref": []}, {"heading": "Conclusion", "text": "The new constraint on five points in two images has been presented, based on existing epipolar constraint and orientation consistence, in contrary to the common belief that any configuration of five point pairs corresponds to some (infinitely many) epipolar geometries. We have not discussed the form of the constraint for degenerate configurations G 5 .", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Personal discussion with", "journal": "", "year": "2002", "authors": ""}, {"ref_id": "b1", "title": "", "journal": "Oriented Matroids, Encyclopaedia of Mathematics", "year": "1993", "authors": "A Bj\u00f6rner; M Vergnas; B Sturmfels; N White; G M Ziegler"}, {"ref_id": "b2", "title": "Combinatorial geometry for shape representation and indexing", "journal": "", "year": "1996", "authors": "S Carlsson"}, {"ref_id": "b3", "title": "Three-Dimensional Computer Vision", "journal": "MIT Press", "year": "1993", "authors": "O Faugeras"}, {"ref_id": "b4", "title": "", "journal": "Chirality. Int. Jour. Computer Vision IJCV", "year": "1998", "authors": "R I Hartley"}, {"ref_id": "b5", "title": "Multiple View Geometry in Computer Vision", "journal": "Cambridge University Press", "year": "2000", "authors": "R I Hartley; A Zisserman"}, {"ref_id": "b6", "title": "Oriented projective geometry for computer vision", "journal": "", "year": "1996", "authors": "S Laveau; O Faugeras"}, {"ref_id": "b7", "title": "Algebraic Projective Geometry", "journal": "Oxford University Press", "year": "1979", "authors": "J G Semple; G T Kneebone"}, {"ref_id": "b8", "title": "Oriented Projective Geometry: A Framework for Geometric Computations", "journal": "Academic Press, Inc", "year": "1250", "authors": "J Stolfi"}, {"ref_id": "b9", "title": "Teubners Sammlung von Lehrb\u00fcchern auf dem Gebiete der mathematischen Wissenschaften", "journal": "", "year": "1908", "authors": "R Sturm"}, {"ref_id": "b10", "title": "Matching constraints and the joint image", "journal": "", "year": "1995", "authors": "B Triggs"}, {"ref_id": "b11", "title": "Cheirality in epipolar geometry", "journal": "IEEE Computer Society Press", "year": "2001-07", "authors": "T Werner; T Pajdla"}, {"ref_id": "b12", "title": "Oriented matching constraints", "journal": "", "year": "2001-09", "authors": "T Werner; T Pajdla"}], "figures": [{"figure_label": "1", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Figure 1 .1Figure 1. An example configuration of five points in two cameras for which no epipolar geometry exists.", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Figure 2 .2Figure 2. Two camera retinas with five corresponding points. Red curves delineate domains where the epipoles can only be located.", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "Figure 3 .3Figure 3. Exceptional points and curves of f . Each index is depicted in different color. Also, lines xixj are depicted.", "figure_data": ""}, {"figure_label": "4", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Figure 4 .4Figure 4. Two cells CIJ and C JI , where I = {3, 4} and J = {1, 2}. Q3, Q4 correspond respectively to x 3 , x 4 , and x1, x2 correspond to Q 1 , Q 2 . If there is a line lij crossing CIJ , there is the corresponding line l ij crossing C JI . Function f maps CIJ to C JI and Q3, Q4 to x 3 , x 4 , respectively.", "figure_data": ""}, {"figure_label": "5", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "Figure 5 .5Figure 5. Two example image pairs with computed regions of allowed epipoles. Each row depicts one pair. The second example also shows the full family of six conics in grey.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_5", "figure_caption": ") , and x 1 , . . . , x 5 are respectively equal to x 4 , x 5 , x 3 , x 2 , x 1 .", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_6", "figure_caption": "2 .2Any point e = x i on Q satisfies e(x 1 , x 3 ) || e(x 2 , x 4 ). 3. The point x 1 x 3 \u2227 x 2 x 4 belongs to the interior of Q. The equivalence 1 \u21d4 2 yields the projective order of points x 1 , . . . , x 4 on the conic given by x 1 , . . . , x 5 . The projective order of all points can be found by testing separations for several permutations of the points. It's a bit tricky, the following MATLAB function does it for arbitrary d: function o = porderd(x) o = 1:3; for j = 4:size(x,2) while 1 i = po4(x(:,[o(1:3) j o(4:end) j+1:end])); if i < 3, break, end o = o([2:end 1]); end o = [o(1:i) j o(i+1:end)]; end function i = po4(x) r=det(x(:,[1 2 5:end]))*det(x(:,[3 4 5:end]))/... det(x(:,[1 3 5:end]))/det(x(:,[2 4 5:end])); if r>1 i=1; elseif r<0 i=2; else i=3; end", "figure_data": ""}, {"figure_label": "6", "figure_type": "figure", "figure_id": "fig_7", "figure_caption": "Figure 6 .6Figure 6. Conic in S 2 consists of two disconnected components (a). If the projective order of points is (1234), point 13 \u2227 24 is inside Q and line (12 \u2227 34)(14 \u2227 23) outside (b).", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_8", "figure_caption": "function OK = test_epi_5points(x1,x2) o = porderd(x2); x1 = x1(:,o); x2 = x2(:,o); for i = 1:5 OK = testQ5(x1,x2); if OK, break, end p = [2:5 1]; x1 = x1(:,p); x2 = x2(:,p); end function OK = testQ5(x1,x2) l1 = cross(x1(:,[1 3 1 3]),x1(:,[2 4 4 2])); l1 = cross(l1(:,[1 3]),l1(:,[2 4])); l1 = cross(l1(:,1),l1(:,2))'; x2 = x2 .* ([1;", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_9", "figure_caption": "+1]'; s2 = sign([det(x2(:,[5 1 2])) det(x2(:,[5 1 3])) det(x2(:,[5 1 4])) det(x2(:,[5 2 3])) det(x2(:,[5 2 4])) det(x2(:,[5 3 4]))]) * [1 1 1 1]; OK = any( all(s1==+s2) | all(s1==-s2) );", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "+ \u223c Hx i ). In P 1 , the cross-ratio of four points is x 1 , x 2 , x 3 , x 4 = [x 1 , x 2 ][x 3 , x 4 ][x 1 , x 3 ] \u22121 [x 2 , x 4 ] \u22121 . Symbol x 1 x 2 || x 3 x 4 denotes that x 1 , x 2 separates x 3 , x 4 .", "formula_coordinates": [2.0, 50.11, 642.85, 236.25, 35.14]}, {"formula_id": "formula_1", "formula_text": ")1", "formula_coordinates": [2.0, 537.37, 253.52, 7.74, 8.97]}, {"formula_id": "formula_2", "formula_text": "\u03c7[e(x 1 , . . . , x n )] = \u2212\u03c7[e (x 1 , . . . , x n )] .(2)", "formula_coordinates": [2.0, 344.73, 361.38, 200.38, 10.62]}, {"formula_id": "formula_3", "formula_text": "E(G n ) = P (G n ) \u2229 S(G n ).", "formula_coordinates": [2.0, 429.08, 497.42, 112.25, 10.31]}, {"formula_id": "formula_4", "formula_text": "(G 5 ) = \u2229 5 i=1 P (G 4 i ) where G 4 i = {(x 1 , x 1 ), . . . , (x 5 , x 5 )} \\ {(x i , x i )}.", "formula_coordinates": [3.0, 50.11, 301.44, 236.25, 24.28]}, {"formula_id": "formula_5", "formula_text": "x = (x 1 , x 2 , x 3 ) is given by x * = (x 2 x 3 , x 3 x 1 , x 1 x 2 ) . Note, (x * ) * = x.", "formula_coordinates": [3.0, 308.86, 599.73, 236.25, 18.09]}, {"formula_id": "formula_6", "formula_text": "{e 1 , e 2 , e 3 , x 1 , x 2 } and {e 1 , e 2 , e 3 , y 1 , y 2 } is just (x * 1 x * 2 \u2227 y * 1 y * 2 ) *", "formula_coordinates": [3.0, 308.86, 637.59, 222.04, 10.53]}, {"formula_id": "formula_7", "formula_text": "(e 1 , e 2 \u2208 C IJ ) \u21d2 [(e 1 , f (e 1 )) \u2208 E \u21d4 (e 2 , f (e 2 )) \u2208 E] .", "formula_coordinates": [4.0, 53.35, 635.52, 229.79, 9.65]}, {"formula_id": "formula_8", "formula_text": "(\u2200j, k \u2208 {1, . . . , 5}\\{i}) ([e, x j , x k ][x i , x j , x k ] < 0) (3)", "formula_coordinates": [4.0, 313.84, 437.15, 231.27, 10.65]}, {"formula_id": "formula_10", "formula_text": "P 1 \u2192 P d given by (u, v) \u2192 (u d , u d\u22121 v, . . . , uv d\u22121 , v d ) .", "formula_coordinates": [5.0, 50.11, 326.99, 236.25, 22.5]}, {"formula_id": "formula_11", "formula_text": "x 2 , x 3 , x 4 , x 5 on Q 1 is (2345), of x 1 , x 3 , x 4 , x 5 on Q 2 is (1345), etc.", "formula_coordinates": [5.0, 308.86, 572.69, 235.75, 21.61]}, {"formula_id": "formula_12", "formula_text": "1;1]*(l1*x1)); s1 = [-1 -1 -1 +1 +1 +1 +1 -1 -1 -1 -1 +1 +1 +1 -1 +1 -1 -1 +1 +1 +1 +1 +1", "formula_coordinates": [6.0, 50.11, 266.19, 138.68, 44.12]}], "doi": ""}