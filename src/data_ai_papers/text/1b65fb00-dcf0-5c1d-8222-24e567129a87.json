{"title": "Photorealistic Text-to-Image Diffusion Models with Deep Language Understanding", "authors": "Chitwan Saharia; William Chan; Saurabh Saxena; Lala Li; Jay Whang; Emily Denton; Seyed Kamyar; Seyed Ghasemipour; Burcu Karagol; S Sara Mahdavi; Rapha Gontijo Lopes; Tim Salimans; Jonathan Ho; David J Fleet; Mohammad Norouzi", "pub_date": "2022-05-23", "abstract": "We present Imagen, a text-to-image diffusion model with an unprecedented degree of photorealism and a deep level of language understanding. Imagen builds on the power of large transformer language models in understanding text and hinges on the strength of diffusion models in high-fidelity image generation. Our key discovery is that generic large language models (e.g. T5), pretrained on text-only corpora, are surprisingly effective at encoding text for image synthesis: increasing the size of the language model in Imagen boosts both sample fidelity and imagetext alignment much more than increasing the size of the image diffusion model. Imagen achieves a new state-of-the-art FID score of 7.27 on the COCO dataset, without ever training on COCO, and human raters find Imagen samples to be on par with the COCO data itself in image-text alignment. To assess text-to-image models in greater depth, we introduce DrawBench, a comprehensive and challenging benchmark for text-to-image models. With DrawBench, we compare Imagen with recent methods including VQ-GAN+CLIP, Latent Diffusion Models, GLIDE and DALL-E 2, and find that human raters prefer Imagen over other models in side-byside comparisons, both in terms of sample quality and image-text alignment. See imagen.research.google for an overview of the results. * Equal contribution. \u2020 Core contribution.", "sections": [{"heading": "Introduction", "text": "Multimodal learning has come into prominence recently, with text-to-image synthesis [53,12,57] and image-text contrastive learning [49,31,74] at the forefront. These models have transformed the research community and captured widespread public attention with creative image generation [22,54] and editing applications [21,41,34]. To pursue this research direction further, we introduce Imagen, a text-to-image diffusion model that combines the power of transformer language models (LMs) [15,52] with high-fidelity diffusion models [28,29,16,41] to deliver an unprecedented degree of photorealism and a deep level of language understanding in text-to-image synthesis. In contrast to prior work that uses only image-text data for model training [e.g., 53,41], the key finding behind Imagen is that text embeddings from large LMs [52,15], pretrained on text-only corpora, are remarkably effective for text-to-image synthesis. See Fig. 1 for select samples.\nImagen comprises a frozen T5-XXL [52] encoder to map input text into a sequence of embeddings and a 64\u00d764 image diffusion model, followed by two super-resolution diffusion models for generating Sprouts in the shape of text 'Imagen' coming out of a fairytale book.\nA photo of a Shiba Inu dog with a backpack riding a bike. It is wearing sunglasses and a beach hat.\nA high contrast portrait of a very happy fuzzy panda dressed as a chef in a high end kitchen making dough. There is a painting of flowers on the wall behind him.\nTeddy bears swimming at the Olympics 400m Butterfly event.\nA cute corgi lives in a house made out of sushi.\nA cute sloth holding a small treasure chest. A bright golden glow is coming from the chest.\nA brain riding a rocketship heading towards the moon.\nA dragon fruit wearing karate belt in the snow.\nA strawberry mug filled with white sesame seeds. The mug is floating in a dark chocolate sea. 256\u00d7256 and 1024\u00d71024 images (see Fig. A.4). All diffusion models are conditioned on the text embedding sequence and use classifier-free guidance [27]. Imagen relies on new sampling techniques to allow usage of large guidance weights without sample quality degradation observed in prior work, resulting in images with higher fidelity and better image-text alignment than previously possible.\nWhile conceptually simple and easy to train, Imagen yields surprisingly strong results. Imagen outperforms other methods on COCO [36] with zero-shot FID-30K of 7.27, significantly outperforming prior work such as GLIDE [41] (at 12.4) and the concurrent work of DALL-E 2 [54] (at 10.4). Our zero-shot FID score is also better than state-of-the-art models trained on COCO, e.g., Make-A-Scene [22] (at 7.6). Additionally, human raters indicate that generated samples from Imagen are on-par in image-text alignment to the reference images on COCO captions.\nWe introduce DrawBench, a new structured suite of text prompts for text-to-image evaluation. Draw-Bench enables deeper insights through a multi-dimensional evaluation of text-to-image models, with text prompts designed to probe different semantic properties of models. These include compositionality, cardinality, spatial relations, the ability to handle complex text prompts or prompts with rare words, and they include creative prompts that push the limits of models' ability to generate highly implausible scenes well beyond the scope of the training data. With DrawBench, extensive human evaluation shows that Imagen outperforms other recent methods [57,12,54] by a significant margin. We further demonstrate some of the clear advantages of the use of large pre-trained language models [52] over multi-modal embeddings such as CLIP [49] as a text encoder for Imagen.\nKey contributions of the paper include:\n1. We discover that large frozen language models trained only on text data are surprisingly very effective text encoders for text-to-image generation, and that scaling the size of frozen text encoder improves sample quality significantly more than scaling the size of image diffusion model. 2. We introduce dynamic thresholding, a new diffusion sampling technique to leverage high guidance weights and generating more photorealistic and detailed images than previously possible. 3. We highlight several important diffusion architecture design choices and propose Efficient U-Net, a new architecture variant which is simpler, converges faster and is more memory efficient. 4. We achieve a new state-of-the-art COCO FID of 7.27. Human raters find Imagen to be on-par with the reference images in terms of image-text alignment. 5. We introduce DrawBench, a new comprehensive and challenging evaluation benchmark for the text-to-image task. On DrawBench human evaluation, we find Imagen to outperform all other work, including the concurrent work of DALL-E 2 [54].", "publication_ref": ["b53", "b12", "b57", "b49", "b31", "b74", "b22", "b54", "b21", "b41", "b34", "b15", "b52", "b28", "b29", "b16", "b41", "b53", "b41", "b52", "b15", "b52", "b27", "b36", "b41", "b54", "b22", "b57", "b12", "b54", "b52", "b49", "b54"], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "Imagen", "text": "Imagen consists of a text encoder that maps text to a sequence of embeddings and a cascade of conditional diffusion models that map these embeddings to images of increasing resolutions (see Fig. A.4). In the following subsections, we describe each of these components in detail.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Pretrained text encoders", "text": "Text-to-image models need powerful semantic text encoders to capture the complexity and compositionality of arbitrary natural language text inputs. Text encoders trained on paired image-text data are standard in current text-to-image models; they can be trained from scratch [41,53] or pretrained on image-text data [54] (e.g., CLIP [49]). The image-text training objectives suggest that these text encoders may encode visually semantic and meaningful representations especially relevant for the text-to-image generation task. Large language models can be another models of choice to encode text for text-to-image generation. Recent progress in large language models (e.g., BERT [15], GPT [47,48,7], T5 [52]) have led to leaps in textual understanding and generative capabilities. Language models are trained on text only corpus significantly larger than paired image-text data, thus being exposed to a very rich and wide distribution of text. These models are also generally much larger than text encoders in current image-text models [49,31,80] (e.g. PaLM [11] has 540B parameters, while CoCa [80] has a \u2248 1B parameter text encoder).\nIt thus becomes natural to explore both families of text encoders for the text-to-image task. Imagen explores pretrained text encoders: BERT [15], T5 [51] and CLIP [46]. For simplicity, we freeze the weights of these text encoders. Freezing has several advantages such as offline computation of embeddings, resulting in negligible computation or memory footprint during training of the textto-image model. In our work, we find that there is a clear conviction that scaling the text encoder size improves the quality of text-to-image generation. We also find that while T5-XXL and CLIP text encoders perform similarly on simple benchmarks such as MS-COCO, human evaluators prefer T5-XXL encoders over CLIP text encoders in both image-text alignment and image fidelity on DrawBench, a set of challenging and compositional prompts. We refer the reader to Section 4.4 for summary of our findings, and Appendix D.1 for detailed ablations.", "publication_ref": ["b41", "b53", "b54", "b49", "b15", "b47", "b48", "b6", "b52", "b49", "b31", "b80", "b11", "b80", "b15", "b51", "b46"], "figure_ref": [], "table_ref": []}, {"heading": "Diffusion models and classifier-free guidance", "text": "Here we give a brief introduction to diffusion models; a precise description is in Appendix A.\nDiffusion models [63,28,65] are a class of generative models that convert Gaussian noise into samples from a learned data distribution via an iterative denoising process. These models can be conditional, for example on class labels, text, or low-resolution images [e.g. 16,29,59,58,75,41,54].\nA diffusion modelx \u03b8 is trained on a denoising objective of the form\nE x,c, ,t w t x \u03b8 (\u03b1 t x + \u03c3 t , c) \u2212 x 2 2 (1)\nwhere (x, c) are data-conditioning pairs, t \u223c U([0, 1]), \u223c N (0, I), and \u03b1 t , \u03c3 t , w t are functions of t that influence sample quality. Intuitively,x \u03b8 is trained to denoise z t := \u03b1 t x + \u03c3 t into x using a squared error loss, weighted to emphasize certain values of t. Sampling such as the ancestral sampler [28] and DDIM [64] start from pure noise z 1 \u223c N (0, I) and iteratively generate points z t1 , . . . , z t T , where 1 = t 1 > \u2022 \u2022 \u2022 > t T = 0, that gradually decrease in noise content. These points are functions of the x-predictionsx t 0 :=x \u03b8 (z t , c). Classifier guidance [16] is a technique to improve sample quality while reducing diversity in conditional diffusion models using gradients from a pretrained model p(c|z t ) during sampling. Classifierfree guidance [27] is an alternative technique that avoids this pretrained model by instead jointly training a single diffusion model on conditional and unconditional objectives via randomly dropping c during training (e.g. with 10% probability). Sampling is performed using the adjusted x-prediction (z t \u2212 \u03c3\u02dc \u03b8 )/\u03b1 t , where\u02dc\n\u03b8 (z t , c) = w \u03b8 (z t , c) + (1 \u2212 w) \u03b8 (z t ).(2)\nHere, \u03b8 (z t , c) and \u03b8 (z t ) are conditional and unconditional -predictions, given by \u03b8 := (z t \u2212 \u03b1 tx\u03b8 )/\u03c3 t , and w is the guidance weight. Setting w = 1 disables classifier-free guidance, while increasing w > 1 strengthens the effect of guidance. Imagen depends critically on classifier-free guidance for effective text conditioning.", "publication_ref": ["b63", "b28", "b65", "b16", "b29", "b59", "b58", "b75", "b41", "b54", "b28", "b64", "b16", "b27"], "figure_ref": [], "table_ref": []}, {"heading": "Large guidance weight samplers", "text": "We corroborate the results of recent text-guided diffusion work [16,41,54] and find that increasing the classifier-free guidance weight improves image-text alignment, but damages image fidelity producing highly saturated and unnatural images [27]. We find that this is due to a train-test mismatch arising from high guidance weights. At each sampling step t, the x-predictionx t 0 must be within the same bounds as training data x, i.e. within [\u22121, 1], but we find empirically that high guidance weights cause x-predictions to exceed these bounds. This is a train-test mismatch, and since the diffusion model is iteratively applied on its own output throughout sampling, the sampling process produces unnatural images and sometimes even diverges. To counter this problem, we investigate static thresholding and dynamic thresholding. See Appendix ", "publication_ref": ["b16", "b41", "b54", "b27"], "figure_ref": [], "table_ref": []}, {"heading": "Static thresholding:", "text": "We refer to elementwise clipping the x-prediction to [\u22121, 1] as static thresholding. This method was in fact used but not emphasized in previous work [28], and to our knowledge its importance has not been investigated in the context of guided sampling. We discover that static thresholding is essential to sampling with large guidance weights and prevents generation of blank images. Nonetheless, static thresholding still results in over-saturated and less detailed images as the guidance weight further increases.", "publication_ref": ["b28"], "figure_ref": [], "table_ref": []}, {"heading": "Dynamic thresholding:", "text": "We introduce a new dynamic thresholding method: at each sampling step we set s to a certain percentile absolute pixel value inx t 0 , and if s > 1, then we thresholdx t 0 to the range [\u2212s, s] and then divide by s. Dynamic thresholding pushes saturated pixels (those near -1 and 1) inwards, thereby actively preventing pixels from saturation at each step. We find that dynamic thresholding results in significantly better photorealism as well as better image-text alignment, especially when using very large guidance weights.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Robust cascaded diffusion models", "text": "Imagen utilizes a pipeline of a base 64\u00d764 model, and two text-conditional super-resolution diffusion models to upsample a 64 \u00d7 64 generated image into a 256 \u00d7 256 image, and then to 1024 \u00d7 1024 image. Cascaded diffusion models with noise conditioning augmentation [29] have been extremely effective in progressively generating high-fidelity images. Furthermore, making the super-resolution models aware of the amount of noise added, via noise level conditioning, significantly improves the sample quality and helps improving the robustness of the super-resolution models to handle artifacts generated by lower resolution models [29]. Imagen uses noise conditioning augmentation for both the super-resolution models. We find this to be a critical for generating high fidelity images.\nGiven a conditioning low-resolution image and augmentation level (a.k.a aug_level) (e.g., strength of Gaussian noise or blur), we corrupt the low-resolution image with the augmentation (corresponding to aug_level), and condition the diffusion model on aug_level. During training, aug_level is chosen randomly, while during inference, we sweep over its different values to find the best sample quality. In our case, we use Gaussian noise as a form of augmentation, and apply variance preserving Gaussian noise augmentation resembling the forward process used in diffusion models (Appendix A). The augmentation level is specified using aug_level \u2208 [0, 1]. See Fig.\nA.32 for reference pseudocode.", "publication_ref": ["b29", "b29"], "figure_ref": [], "table_ref": []}, {"heading": "Neural network architecture", "text": "Base model: We adapt the U-Net architecture from [40] for our base 64 \u00d7 64 text-to-image diffusion model. The network is conditioned on text embeddings via a pooled embedding vector, added to the diffusion timestep embedding similar to the class embedding conditioning method used in [16,29]. We further condition on the entire sequence of text embeddings by adding cross attention [57] over the text embeddings at multiple resolutions. We study various methods of text conditioning in Appendix D.3.1. Furthermore, we found Layer Normalization [2] for text embeddings in the attention and pooling layers to help considerably improve performance.\nSuper-resolution models: For 64 \u00d7 64 \u2192 256 \u00d7 256 super-resolution, we use the U-Net model adapted from [40,58]. We make several modifications to this U-Net model for improving memory efficiency, inference time and convergence speed (our variant is 2-3x faster in steps/second over the U-Net used in [40,58] ", "publication_ref": ["b40", "b16", "b29", "b57", "b1", "b40", "b58", "b40", "b58"], "figure_ref": [], "table_ref": []}, {"heading": "Evaluating Text-to-Image Models", "text": "The COCO [36] validation set is the standard benchmark for evaluating text-to-image models for both the supervised [82,22] and the zero-shot setting [53,41]. The key automated performance metrics used are FID [26] to measure image fidelity, and CLIP score [25,49] to measure image-text alignment. Consistent with previous works, we report zero-shot FID-30K, for which 30K prompts are drawn randomly from the validation set, and the model samples generated on these prompts are compared with reference images from the full validation set. Since guidance weight is an important ingredient to control image quality and text alignment, we report most of our ablation results using trade-off (or pareto) curves between CLIP and FID scores across a range of guidance weights.\nBoth FID and CLIP scores have limitations, for example FID is not fully aligned with perceptual quality [42], and CLIP is ineffective at counting [49]. Due to these limitations, we use human evaluation to assess image quality and caption similarity, with ground truth reference caption-image pairs as a baseline. We use two experimental paradigms:\n1. To probe image quality, the rater is asked to select between the model generation and reference image using the question: \"Which image is more photorealistic (looks more real)?\". We report the percentage of times raters choose model generations over reference images (the preference rate). 2. To probe alignment, human raters are shown an image and a prompt and asked \"Does the caption accurately describe the above image?\". They must respond with \"yes\", \"somewhat\", or \"no\". These responses are scored as 100, 50, and 0, respectively. These ratings are obtained independently for model samples and reference images, and both are reported.\nA brown bird and a blue bear.\nOne cat and two dogs sitting on the grass. A sign that says 'NeurIPS'.\nA small blue book sitting on a large red book.\nA blue coloured pizza.\nA wine glass on top of a dog.\nA pear cut into seven pieces A photo of a confused grizzly bear A small vessel propelled on water arranged in a ring. in calculus class. by oars, sails, or an engine. For both cases we use 200 randomly chosen image-caption pairs from the COCO validation set. Subjects were shown batches of 50 images. We also used interleaved \"control\" trials, and only include rater data from those who correctly answered at least 80% of the control questions. This netted 73 and 51 ratings per image for image quality and image-text alignment evaluations, respectively.\nDrawBench: While COCO is a valuable benchmark, it is increasingly clear that it has a limited spectrum of prompts that do not readily provide insight into differences between models (e.g., see Sec. 4.2). Recent work by [10] proposed a new evaluation set called PaintSkills to systematically evaluate visual reasoning skills and social biases beyond COCO. With similar motivation, we introduce DrawBench, a comprehensive and challenging set of prompts that support the evaluation and comparison of text-to-image models. DrawBench contains 11 categories of prompts, testing different capabilities of models such as the ability to faithfully render different colors, numbers of objects, spatial relations, text in the scene, and unusual interactions between objects. Categories also include complex prompts, including long, intricate textual descriptions, rare words, and also misspelled prompts. We also include sets of prompts collected from DALL-E [53], Gary Marcus et al. [38] and Reddit. Across these 11 categories, DrawBench comprises 200 prompts in total, striking a good balance between the desire for a large, comprehensive dataset, and small enough that human evaluation remains feasible. (Appendix C provides a more detailed description of DrawBench. Fig. 2 shows example prompts from DrawBench with Imagen samples.)\nWe use DrawBench to directly compare different models. To this end, human raters are presented with two sets of images, one from    models. We do not find over-fitting to be an issue, and we believe further training might improve overall performance. We use Adafactor for our base 64 \u00d7 64 model, because initial comparisons with Adam suggested similar performance with much smaller memory footprint for Adafactor. For superresolution models, we use Adam as we found Adafactor to hurt model quality in our initial ablations. For classifier-free guidance, we joint-train unconditionally via zeroing out the text embeddings with 10% probability for all three models. We train on a combination of internal datasets, with \u2248 460M image-text pairs, and the publicly available Laion dataset [61], with \u2248 400M image-text pairs. There are limitations in our training data, and we refer the reader to Section 6 for details. See Appendix F for more implementation details.", "publication_ref": ["b36", "b82", "b22", "b53", "b41", "b26", "b25", "b49", "b42", "b49", "b10", "b53", "b38", "b61"], "figure_ref": ["fig_2"], "table_ref": []}, {"heading": "Results on COCO", "text": "We evaluate Imagen on the COCO validation set using FID score, similar to [53,41]. Table 1 displays the results. Imagen achieves state of the art zero-shot FID on COCO at 7.27, outperforming the concurrent work of DALL-E 2 [54] and even models trained on COCO. Table 2 reports the human evaluation to test image quality and alignment on the COCO validation set. We report results on the original COCO validation set, as well as a filtered version in which all reference data with people have been removed. For photorealism, Imagen achieves 39.2% preference rate indicating high image quality generation. On the set with no people, there is a boost in preference rate of Imagen to 43.6%, indicating Imagen's limited ability to generate photorealistic people. On caption similarity, Imagen's score is on-par with the original reference images, suggesting Imagen's ability to generate images that align well with COCO captions.", "publication_ref": ["b53", "b41", "b54"], "figure_ref": [], "table_ref": ["tab_2", "tab_3"]}, {"heading": "Results on DrawBench", "text": "Using DrawBench, we compare Imagen with DALL-E 2 (the public version) [54], GLIDE [41], Latent Diffusion [57], and CLIP-guided VQ-GAN [12]. Fig. 3 shows the human evaluation results for pairwise comparison of Imagen with each of the three models. We report the percentage of time raters prefer Model A, Model B, or are indifferent for both image fidelity and image-text alignment. We aggregate the scores across all the categories and raters. We find the human raters to exceedingly prefer Imagen over all others models in both image-text alignment and image fidelity. We refer the reader to Appendix E for a more detailed category wise comparison and qualitative comparison.", "publication_ref": ["b54", "b41", "b57", "b12"], "figure_ref": ["fig_4"], "table_ref": []}, {"heading": "Analysis of Imagen", "text": "For a detailed analysis of Imagen see Appendix D. Key findings are discussed in Fig. 4 and below.\nScaling text encoder size is extremely effective. We observe that scaling the size of the text encoder leads to consistent improvement in both image-text alignment and image fidelity. Imagen trained with our largest text encoder, T5-XXL (4.6B parameters), yields the best results (Fig. 4a). , GLIDE [41], VQ-GAN+CLIP [12] and Latent Diffusion [57] on DrawBench: User preference rates (with 95% confidence intervals) for image-text alignment and image fidelity.  Scaling text encoder size is more important than U-Net size. While scaling the size of the diffusion model U-Net improves sample quality, we found scaling the text encoder size to be significantly more impactful than the U-Net size (Fig. 4b).\nDynamic thresholding is critical. We show that dynamic thresholding results in samples with significantly better photorealism and alignment with text, over static or no thresholding, especially under the presence of large classifier-free guidance weights (Fig. 4c).\nHuman raters prefer T5-XXL over CLIP on DrawBench. The models trained with T5-XXL and CLIP text encoders perform similarly on the COCO validation set in terms of CLIP and FID scores. However, we find that human raters prefer T5-XXL over CLIP on DrawBench across all 11 categories.\nNoise conditioning augmentation is critical. We show that training the super-resolution models with noise conditioning augmentation leads to better CLIP and FID scores. We also show that noise conditioning augmentation enables stronger text conditioning for the super-resolution model, resulting in improved CLIP and FID scores at higher guidance weights. Adding noise to the low-res image during inference along with the use of large guidance weights allows the super-resolution models to generate diverse upsampled outputs while removing artifacts from the low-res image.\nText conditioning method is critical. We observe that conditioning over the sequence of text embeddings with cross attention significantly outperforms simple mean or attention based pooling in both sample fidelity as well as image-text alignment.\nEfficient U-Net is critical. Our Efficient U-Net implementation uses less memory, converges faster, and has better sample quality with faster inference.", "publication_ref": ["b41", "b12", "b57"], "figure_ref": ["fig_6", "fig_6", "fig_6", "fig_6"], "table_ref": []}, {"heading": "Related Work", "text": "Diffusion models have seen wide success in image generation [28,40,59,16,29,58], outperforming GANs in fidelity and diversity, without training instability and mode collapse issues [6,16,29].\nAutoregressive models [37], GANs [76,81], VQ-VAE Transformer-based methods [53,22], and diffusion models have seen remarkable progress in text-to-image [57,41,57], including the concurrent DALL-E 2 [54], which uses a diffusion prior on CLIP text latents and cascaded diffusion models to generate high resolution 1024 \u00d7 1024 images; we believe Imagen is much simpler, as Imagen does not need to learn a latent prior, yet achieves better results in both MS-COCO FID and human evaluation on DrawBench. GLIDE [41] also uses cascaded diffusion models for text-to-image, but we use large pretrained frozen language models, which we found to be instrumental to both image fidelity and image-text alignment. XMC-GAN [81] also uses BERT as a text encoder, but we scale to much larger text encoders and demonstrate the effectiveness thereof. The use of cascaded models is also popular throughout the literature [14,39] and has been used with success in diffusion models to generate high resolution images [16,29].", "publication_ref": ["b28", "b40", "b59", "b16", "b29", "b58", "b5", "b16", "b29", "b37", "b76", "b81", "b53", "b22", "b57", "b41", "b57", "b54", "b41", "b81", "b14", "b39", "b16", "b29"], "figure_ref": [], "table_ref": []}, {"heading": "Conclusions, Limitations and Societal Impact", "text": "Imagen showcases the effectiveness of frozen large pretrained language models as text encoders for the text-to-image generation using diffusion models. Our observation that scaling the size of these language models have significantly more impact than scaling the U-Net size on overall performance encourages future research directions on exploring even bigger language models as text encoders. Furthermore, through Imagen we re-emphasize the importance of classifier-free guidance, and we introduce dynamic thresholding, which allows usage of much higher guidance weights than seen in previous works. With these novel components, Imagen produces 1024 \u00d7 1024 samples with unprecedented photorealism and alignment with text.\nOur primary aim with Imagen is to advance research on generative methods, using text-to-image synthesis as a test bed. While end-user applications of generative methods remain largely out of scope, we recognize the potential downstream applications of this research are varied and may impact society in complex ways. On the one hand, generative models have a great potential to complement, extend, and augment human creativity [30]. Text-to-image generation models, in particular, have the potential to extend image-editing capabilities and lead to the development of new tools for creative practitioners. On the other hand, generative methods can be leveraged for malicious purposes, including harassment and misinformation spread [20], and raise many concerns regarding social and cultural exclusion and bias [67,62,68]. These considerations inform our decision to not to release code or a public demo. In future work we will explore a framework for responsible externalization that balances the value of external auditing with the risks of unrestricted open-access.\nAnother ethical challenge relates to the large scale data requirements of text-to-image models, which have have led researchers to rely heavily on large, mostly uncurated, web-scraped datasets. While this approach has enabled rapid algorithmic advances in recent years, datasets of this nature have been critiqued and contested along various ethical dimensions. For example, public and academic discourse regarding appropriate use of public data has raised concerns regarding data subject awareness and consent [24,18,60,43]. Dataset audits have revealed these datasets tend to reflect social stereotypes, oppressive viewpoints, and derogatory, or otherwise harmful, associations to marginalized identity groups [44,4]. Training text-to-image models on this data risks reproducing these associations and causing significant representational harm that would disproportionately impact individuals and communities already experiencing marginalization, discrimination and exclusion within society. As such, there are a multitude of data challenges that must be addressed before text-to-image models like Imagen can be safely integrated into user-facing applications. While we do not directly address these challenges in this work, an awareness of the limitations of our training data guide our decision not to release Imagen for public use. We strongly caution against the use text-to-image generation methods for any user-facing tools without close care and attention to the contents of the training dataset.\nImagen's training data was drawn from several pre-existing datasets of image and English alt-text pairs. A subset of this data was filtered to removed noise and undesirable content, such as pornographic imagery and toxic language. However, a recent audit of one of our data sources, LAION-400M [61], uncovered a wide range of inappropriate content including pornographic imagery, racist slurs, and harmful social stereotypes [4]. This finding informs our assessment that Imagen is not suitable for public use at this time and also demonstrates the value of rigorous dataset audits and comprehensive dataset documentation (e.g. [23,45]) in informing consequent decisions about the model's appropriate and safe use. Imagen also relies on text encoders trained on uncurated web-scale data, and thus inherits the social biases and limitations of large language models [5,3,50].\nWhile we leave an in-depth empirical analysis of social and cultural biases encoded by Imagen to future work, our small scale internal assessments reveal several limitations that guide our decision not to release Imagen at this time. First, all generative models, including Imagen, Imagen, may run into danger of dropping modes of the data distribution, which may further compound the social consequence of dataset bias. Second, Imagen exhibits serious limitations when generating images depicting people. Our human evaluations found Imagen obtains significantly higher preference rates when evaluated on images that do not portray people, indicating a degradation in image fidelity. Finally, our preliminary assessment also suggests Imagen encodes several social biases and stereotypes, including an overall bias towards generating images of people with lighter skin tones and a tendency for images portraying different professions to align with Western gender stereotypes. Even when we focus generations away from people, our preliminary analysis indicates Imagen encodes a range of social and cultural biases when generating images of activities, events, and objects.\nWhile there has been extensive work auditing image-to-text and image labeling models for forms of social bias (e.g. [8,9,68]), there has been comparatively less work on social bias evaluation methods for text-to-image models, with the recent exception of [10]. We believe this is a critical avenue for future research and we intend to explore benchmark evaluations for social and cultural bias in future work-for example, exploring whether it is possible to generalize the normalized pointwise mutual information metric [1] to the measurement of biases in image generation models. There is also a great need to develop a conceptual vocabulary around potential harms of text-to-image models that could guide the development of evaluation metrics and inform responsible model release. We aim to address these challenges in future work.", "publication_ref": ["b30", "b20", "b67", "b62", "b68", "b24", "b18", "b60", "b43", "b44", "b3", "b61", "b3", "b23", "b45", "b4", "b2", "b50", "b8", "b9", "b68", "b10", "b0"], "figure_ref": [], "table_ref": []}, {"heading": "Acknowledgements", "text": "We give thanks to Ben Poole for reviewing our manuscript, early discussions, and providing many helpful comments and suggestions throughout the project. A transparent sculpture of a duck made out of glass. A raccoon wearing cowboy hat and black leather jacket is behind the backyard window. Rain droplets on the window.\nA bucket bag made of blue suede. The bag is decorated with intricate golden paisley patterns. The handle of the bag is made of rubies and pearls.\nThree spheres made of glass falling into ocean. Water is splashing. Sun is setting.\nVines in the shape of text 'Imagen' with flowers and butterflies bursting out of an old TV.\nA strawberry splashing in the coffee in a mug under the starry sky. A wall in a royal castle. There are two paintings on the wall. The one on the left a detailed oil painting of the royal raccoon king. The one on the right a detailed oil painting of the royal raccoon queen.\nA group of teddy bears in suit in a corporate office celebrating the birthday of their friend. There is a pizza cake on the desk.\nA chrome-plated duck with a golden beak arguing with an angry turtle in a forest.\nA family of three houses in a meadow. The Dad house is a large blue house. The Mom house is a large pink house. The Child house is a small wooden shed.\nA cloud in the shape of two bunnies playing with a ball. The ball is made of clouds too.\nA Pomeranian is sitting on the Kings throne wearing a crown. Two tiger soldiers are standing next to the throne.\nAn angry duck doing heavy weightlifting at the gym. A dslr picture of colorful graffiti showing a hamster with a moustache.\nA photo of a person with the head of a cow, wearing a tuxedo and black bowtie. Beach wallpaper in the background. A relaxed garlic with a blindfold reading a newspaper while floating in a pool of tomato soup.\nA photo of a corgi dog wearing a wizard hat playing guitar on the top of a mountain.\nA single beam of light enter the room from the ceiling. The beam of light is illuminating an easel. On the easel there is a Rembrandt painting of a raccoon.\nA squirrel is inside a giant bright shiny crystal ball in on the surface of blue ocean. There are few clouds in the sky.\nA bald eagle made of chocolate powder, mango, and whipped cream.\nA marble statue of a Koala DJ in front of a marble statue of a turntable. The Koala has wearing large marble headphones.\nThe Toronto skyline with Google brain logo written in fireworks.\nA blue jay standing on a large basket of rainbow macarons.\nAn art gallery displaying Monet paintings. The art gallery is flooded. Robots are going around the art gallery using paddle boards. ", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A Background", "text": "Diffusion models are latent variable models with latents z = {z t | t \u2208 [0, 1]} that obey a forward process q(z|x) starting at data x \u223c p(x). This forward process is a Gaussian process that satisfies the Markovian structure: q(z t |x) = N (z t ; \u03b1 t x, \u03c3 2 t I), q(z t |z s ) = N (z t ; (\u03b1 t /\u03b1 s )z s , \u03c3 2 t|s I)\nwhere 0 \u2264 s < t \u2264 1, \u03c3 2 t|s = (1 \u2212 e \u03bbt\u2212\u03bbs )\u03c3 2 t , and \u03b1 t , \u03c3 t specify a differentiable noise schedule whose log signal-to-noise-ratio, i.e., \u03bb t = log[\u03b1 2 t /\u03c3 2 t ], decreases with t until q(z 1 ) \u2248 N (0, I). For generation, the diffusion model is learned to reverse this forward process.\nLearning to reverse the forward process can be reduced to learning to denoise z t \u223c q(z t |x) into an estimatex \u03b8 (z t , \u03bb t , c) \u2248 x for all t, where c is an optional conditioning signal (such as text embeddings or a low resolution image) drawn from the dataset jointly with x. This is accomplished trainingx \u03b8 using a weighted squared error loss\nE ,t w(\u03bb t ) x \u03b8 (z t , \u03bb t , c) \u2212 x 2 2 (4)\nwhere t \u223c U([0, 1]), \u223c N (0, I), and z t = \u03b1 t x + \u03c3 t . This reduction of generation to denoising is justified as optimizing a weighted variational lower bound on the data log likelihood under the diffusion model, or as a form of denoising score matching [72,65,28,35]. We use theprediction parameterization, defined asx \u03b8 (z t , \u03bb t , c) = (z t \u2212 \u03c3 t \u03b8 (z t , \u03bb t , c))/\u03b1 t , and we impose a squared error loss on \u03b8 in space with t sampled according to a cosine schedule [40]. This corresponds to a particular weighting w(\u03bb t ) and leads to a scaled score estimate \u03b8 (z t , \u03bb t , c) \u2248 \u2212\u03c3 t \u2207 zt log p(z t |c), where p(z t |c) is the true density of z t given c under the forward process starting at x \u223c p(x) [28,35,66]. Related model designs include the work of [70,32,33].\nTo sample from the diffusion model, we start at z 1 \u223c N (0, I) and use the discrete time ancestral sampler [28] and DDIM [64] for certain models. DDIM follows the deterministic update rule\nz s = \u03b1 sx\u03b8 (z t , \u03bb t , c) + \u03c3 s \u03c3 t (z t \u2212 \u03b1 tx\u03b8 (z t , \u03bb t , c))(5)\nwhere s < t follow a uniformly spaced sequence from 1 to 0. The ancestral sampler arises from a reversed description of the forward process; noting that q(z s |z t , x) = N (z s ;\u03bc s|t (z t , x),\u03c3 2 s|t I), where\u03bc s|t (z t , x) = e \u03bbt\u2212\u03bbs (\u03b1 s /\u03b1 t )z t + (1 \u2212 e \u03bbt\u2212\u03bbs )\u03b1 s x and\u03c3 2 s|t = (1 \u2212 e \u03bbt\u2212\u03bbs )\u03c3 2 s , it follows the stochastic update rule\nz s =\u03bc s|t (z t ,x \u03b8 (z t , \u03bb t , c)) + (\u03c3 2 s|t ) 1\u2212\u03b3 (\u03c3 2 t|s ) \u03b3 (6\n)\nwhere \u223c N (0, I), and \u03b3 controls the stochasticity of the sampler [40].", "publication_ref": ["b72", "b65", "b28", "b35", "b40", "b28", "b35", "b66", "b70", "b32", "b33", "b28", "b64", "b40"], "figure_ref": [], "table_ref": []}, {"heading": "B Architecture Details B.1 Efficient U-Net", "text": "We introduce a new architectural variant, which we term Efficient U-Net, for our super-resolution models. We find our Efficient U-Net to be simpler, converges faster, and is more memory efficient compared to some prior implementations [40], especially for high resolutions. We make several key modifications to the U-Net architecture, such as shifting of model parameters from high resolution blocks to low resolution, scaling the skip connections by 1 / \u221a 2 similar to [66,59] and reversing the order of downsampling/upsampling operations in order to improve the speed of the forward pass. Efficient U-Net makes several key modifications to the typical U-Net model used in [16,58]:\n\u2022 We shift the model parameters from the high resolution blocks to the low resolution blocks, via adding more residual blocks for the lower resolutions. Since lower resolution blocks typically have many more channels, this allows us to increase the model capacity through more model parameters, without egregious memory and computation costs. \u2022 When using large number of residual blocks at lower-resolution (e.g. we use 8 residual blocks at lower-resolutions compared to typical 2-3 residual blocks used in standard U-Net architectures [16,59]) we find that scaling the skip connections by 1 / \u221a 2 similar to [66,59] significantly improves convergence speed.\n\u2022 In a typical U-Net's downsampling block, the downsampling operation happens after the convolutions, and in an upsampling block, the upsampling operation happens prior the convolution. We reverse this order for both downsampling and upsampling blocks in order to significantly improve the speed of the forward pass of the U-Net, and find no performance degradation.\nWith these key simple modifications, Efficient U-Net is simpler, converges faster, and is more memory efficient compared to some prior U-Net implementations. ", "publication_ref": ["b40", "b66", "b59", "b16", "b58", "b16", "b59", "b66", "b59"], "figure_ref": [], "table_ref": []}, {"heading": "C DrawBench", "text": "In this section, we describe our new benchmark for fine-grained analysis of text-to-image models, namely, DrawBench. DrawBench consists of 11 categories with approximately 200 text prompts. This is large enough to test the model well, while small enough to easily perform trials with human raters. where the questions are designed to measure: 1) image fidelity, and 2) image-text alignment. For each question, the rater is asked to select from three choices:\n1. I prefer set A.\n2. I am indifferent.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "I prefer set B.", "text": "We aggregate scores from 25 raters for each category (totalling to 25 \u00d7 11 = 275 raters). We do not perform any post filtering of the data to identify unreliable raters, both for expedience and because the task was straightforward to explain and execute.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "D Imagen Detailed Abalations and Analysis", "text": "In this section, we perform ablations and provide a detailed analysis of Imagen.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "D.1 Pre-trained Text Encoders", "text": "We explore several families of pre-trained text encoders: BERT [15], T5 [52], and CLIP [49].\nThere are several key differences between these encoders. BERT is trained on a smaller text-only corpus (approximately 20 GB, Wikipedia and BooksCorpus [84]) with a masking objective, and has relatively small model variants (upto 340M parameters). T5 is trained on a much larger C4 text-only corpus (approximately 800 GB) with a denoising objective, and has larger model variants (up to 11B parameters). The CLIP model 5 is trained on an image-text corpus with an image-text contrastive objective. For T5 we use the encoder part for the contextual embeddings. For CLIP, we use the penultimate layer of the text encoder to get contextual embeddings. Note that we freeze the weights of these text encoders (i.e., we use off the shelf text encoders, without any fine-tuning on the text-to-image generation task). We explore a variety of model sizes for these text encoders.\nWe train a 64 \u00d7 64, 300M parameter diffusion model, conditioned on the text embeddings generated from BERT (base, and large), T5 (small, base, large, XL, and XXL), and CLIP (ViT-L/14). We observe that scaling the size of the language model text encoders generally results in better image-text", "publication_ref": ["b15", "b52", "b49", "b84", "b4"], "figure_ref": [], "table_ref": []}, {"heading": "Category Description Examples", "text": "Colors Ability to generate objects \"A blue colored dog.\" with specified colors.\n\"A black apple and a green backpack.\"", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Counting", "text": "Ability to generate specified \"Three cats and one dog sitting on the grass.\" number of objects.\n\"Five cars on the street.\"", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Conflicting", "text": "Ability to generate conflicting \"A horse riding an astronaut.\" interactions b/w objects.\n\"A panda making latte art.\"", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "DALL-E [53]", "text": "Subset of challenging prompts \"A triangular purple flower pot.\" from [53].\n\"A cross-section view of a brain.\" Description Ability to understand complex and long \"A small vessel propelled on water by oars, sails, or an engine.\" text prompts describing objects.\n\"A mechanical or electrical device for measuring time.\"\nMarcus et al. [38] Set of challenging prompts \"A pear cut into seven pieces arranged in a ring.\" from [38].\n\"Paying for a quarter-sized pizza with a pizza-sized quarter.\" Since guidance weights are used to control image quality and text alignment, we also report ablation results using curves that show the trade-off between CLIP and FID scores as a function of the guidance weights (see Fig.\nMisspellings\nA.5a). We observe that larger variants of T5 encoder results in both better image-text alignment, and image fidelity. This emphasizes the effectiveness of large frozen text encoders for text-to-image models. Interestingly, we also observe that the T5-XXL encoder is on-par with the CLIP encoder when measured with CLIP and FID-10K on MS-COCO.\nT5-XXL vs CLIP on DrawBench: We further compare T5-XXL and CLIP on DrawBench to perform a more comprehensive comparison of the abilities of these two text encoders. In our initial evaluations we observed that the 300M parameter models significantly underperformed on DrawBench. We believe this is primarily because DrawBench prompts are considerably more difficult than MS-COCO prompts.\nIn order to perform a meaningful comparison, we train 64\u00d764 1B parameter diffusion models with T5-XXL and CLIP text encoders for this evaluation. shows the category specific comparison between the two models. We observe that human raters prefer T5-XXL samples over CLIP samples in all 11 categories for image-text alignment demonstrating the effectiveness of large language models as text encoders for text to image generation.", "publication_ref": ["b53", "b38", "b38"], "figure_ref": [], "table_ref": []}, {"heading": "D.2 Classifier-free Guidance and the Alignment-Fidelity Trade-off", "text": "We observe that classifier-free guidance [27] is a key contributor to generating samples with strong image-text alignment, this is also consistent with the observations of [53,54]. There is typically a trade-off between image fidelity and image-text alignment, as we iterate over the guidance weight.\nWhile previous work has typically used relatively small guidance weights, Imagen uses relatively large guidance weights for all three diffusion models. We found this to yield a good balance of sample quality and alignment. However, naive use of large guidance weights often produces relatively poor  results. To enable the effective use of larger guidance we introduce several innovations, as described below.\nThresholding Techniques: First, we compare various thresholding methods used with classifier-free guidance.  the model trained with conditioning augmentation. We hypothesize that this is primarily because strong noise augmented training reduces the low-resolution image conditioning signal considerably, encouraging higher degree of dependence on conditioned text for the model.   [54] identify some of these limitations of DALL-E 2, specifically they observe that DALLE-E 2 is worse than GLIDE [41] in binding attributes to objects such as colors, and producing coherent text from the input prompt (cf. the discussion of limitations in [54]). To this end, we also perform quantitative and qualitative comparison with GLIDE [41] on DrawBench. See    Hovering cow abducting aliens.", "publication_ref": ["b27", "b53", "b54", "b54", "b41", "b54", "b41"], "figure_ref": [], "table_ref": []}, {"heading": "D.3 Impact of Model Size", "text": "Greek statue of a man tripping over a cat. A yellow book and a red vase.\nA black apple and a green backpack. A horse riding an astronaut.\nA panda making latte art. A cube made of brick. A cube with the texture of brick.  Imagen (Ours) GLIDE [41] A yellow book and a red vase.\nA black apple and a green backpack. A couple of glasses are sitting on a table.\nA cube made of brick. A cube with the texture of brick. Imagen (Ours) GLIDE [41] New York Skyline with Hello World written with fireworks on the sky.\nA storefront with Text to Image written on it.    Architecture: We adapt the architecture used in [16]. We use larger embed_dim for scaling up the architecture size. For conditioning on text, we use text cross attention at resolutions [32,16,8] as well as attention pooled text embedding.\nFigure A\nOptimizer: We use the Adafactor optimizer for training the base model. We use the default optax.adafactor parameters. We use a learning rate of 1e-4 with 10000 linear warmup steps.\nDiffusion: We use the cosine noise schedule similar to [40]. We train using continuous time steps t \u223c U(0, 1).\n# 64 X 64 model. architecture = { \"attn_resolutions\": [32,16,8], \"channel_mult\": [1, 2, 3, 4], \"dropout\": 0, \"embed_dim\": 512, \"num_res_blocks\": 3, \"per_head_channels\": 64, \"res_block_type\": \"biggan\", \"text_cross_attn_res\": [32,16,8], \"feature_pooling_type\": \"attention\", \"use_scale_shift_norm\": True, } learning_rate = optax.warmup_cosine_decay_schedule( init_value=0.0, peak_value=1e-4, warmup_steps=10000, decay_steps=2500000, end_value=2500000) optimizer = optax.adafactor(lrs=learning_rate, weight_decay=0)", "publication_ref": ["b41", "b41", "b16", "b32", "b16", "b8", "b40", "b32", "b16", "b8", "b32", "b16", "b8"], "figure_ref": [], "table_ref": []}, {"heading": "", "text": "GLIDE [41] Hovering cow abducting aliens.\nGreek statue of a man tripping over a cat. GLIDE [41] A horse riding an astronaut.\nA panda making latte art. Optimizer: We use the standard Adam optimizer with 1e-4 learning rate, and 10000 linear warmup steps.\nFigure A\nDiffusion: We use the 1000 step linear noise schedule with start and end set to 1e-4 and 0.02 respectively. We train using continuous time steps t \u223c U(0, 1).\n\"dropout\": 0.0, \"feature_pooling_type\": \"attention\", \"use_scale_shift_norm\": true, \"blocks\"=[ { \"channels\": 128, \"strides\": (2, 2), \"kernel_size\": (3, 3), \"num_res_blocks\": 2, }, { \"channels\": 256, \"strides\": (2, 2), \"kernel_size\": (3, 3), \"num_res_blocks\": 4, }, { \"channels\": 512, \"strides\": (2, 2), \"kernel_size\": (3, 3), \"num_res_blocks\": 8, }, { \"channels\": 1024, \"strides\": (2, 2), \"kernel_size\": (3, 3), \"num_res_blocks\": 8, \"text_cross_attention\": True, \"num_attention_heads\": 8 } ]", "publication_ref": ["b41", "b41"], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Measuring Model Biases in the Absence of Ground Truth", "journal": "", "year": "2021", "authors": "Ken Osman Aka; Alex Burke; Christina Bauerle; Margaret Greer;  Mitchell"}, {"ref_id": "b1", "title": "", "journal": "", "year": "2016", "authors": "Jimmy Lei Ba; Jamie Ryan Kiros; Geoffrey E Hinton"}, {"ref_id": "b2", "title": "On the dangers of stochastic parrots: Can language models be too big", "journal": "", "year": "2021", "authors": "Emily M Bender; Timnit Gebru; Angelina Mcmillan-Major; Shmargaret Shmitchell"}, {"ref_id": "b3", "title": "Multimodal datasets: misogyny, pornography, and malignant stereotypes", "journal": "", "year": "2021", "authors": "Abeba Birhane; Emmanuel Vinay Uday Prabhu;  Kahembwe"}, {"ref_id": "b4", "title": "Identifying and Reducing Gender Bias in Word-Level Language Models", "journal": "", "year": "2017", "authors": "Shikha Bordia; Samuel R Bowman"}, {"ref_id": "b5", "title": "Large scale gan training for high fidelity natural image synthesis", "journal": "", "year": "2018", "authors": "Andrew Brock; Jeff Donahue; Karen Simonyan"}, {"ref_id": "b6", "title": "", "journal": "", "year": "", "authors": "Tom B Brown; Benjamin Mann; Nick Ryder; Melanie Subbiah; Jared Kaplan; Prafulla Dhariwal; Arvind Neelakantan; Pranav Shyam; Girish Sastry; Amanda Askell; Sandhini Agarwal; Ariel Herbert-Voss; Gretchen Krueger; Tom Henighan; Rewon Child; Aditya Ramesh; M Daniel"}, {"ref_id": "b7", "title": "Ilya Sutskever, and Dario Amodei. Language Models are Few-Shot Learners", "journal": "", "year": "2020", "authors": "Jeffrey Ziegler; Clemens Wu; Christopher Winter; Mark Hesse; Eric Chen; Mateusz Sigler; Scott Litwin;  Gray"}, {"ref_id": "b8", "title": "Gender shades: Intersectional accuracy disparities in commercial gender classification", "journal": "", "year": "2018-02-24", "authors": "Joy Buolamwini; Timnit Gebru"}, {"ref_id": "b9", "title": "Women also snowboard: Overcoming bias in captioning models", "journal": "", "year": "2018", "authors": "Kaylee Burns; Lisa Hendricks; Trevor Darrell; Anna Rohrbach"}, {"ref_id": "b10", "title": "Dall-eval: Probing the reasoning skills and social biases of text-to-image generative transformers", "journal": "", "year": "2022", "authors": "Jaemin Cho; Abhay Zala; Mohit Bansal"}, {"ref_id": "b11", "title": "PaLM: Scaling Language Modeling with Pathways", "journal": "", "year": "2022", "authors": "Aakanksha Chowdhery; Sharan Narang; Jacob Devlin; Maarten Bosma; Gaurav Mishra; Adam Roberts; Paul Barham;  Hyung Won; Charles Chung; Sebastian Sutton; Parker Gehrmann; Kensen Schuh; Sasha Shi; Joshua Tsvyashchenko; Abhishek Maynez; Parker Rao; Yi Barnes; Noam Tay; Vinodkumar Shazeer; Emily Prabhakaran; Nan Reif; Ben Du; Reiner Hutchinson; James Pope; Jacob Bradbury; Michael Austin; Guy Isard; Pengcheng Gur-Ari; Toju Yin; Anselm Duke; Sanjay Levskaya; Sunipa Ghemawat; Henryk Dev; Xavier Michalewski; Vedant Garcia; Kevin Misra; Liam Robinson; Denny Fedus; Daphne Zhou; David Ippolito; Hyeontaek Luan;  Lim"}, {"ref_id": "b12", "title": "Vqgan-clip: Open domain image generation and editing with natural language guidance", "journal": "", "year": "2022", "authors": "Katherine Crowson; Stella Biderman; Daniel Kornis; Dashiell Stander; Eric Hallahan; Louis Castricato; Edward Raff"}, {"ref_id": "b13", "title": "Diffusion schr\u00f6dinger bridge with applications to score-based generative modeling", "journal": "Advances in Neural Information Processing Systems", "year": "", "authors": "James Valentin De Bortoli; Jeremy Thornton; Arnaud Heng;  Doucet"}, {"ref_id": "b14", "title": "Deep Generative Image Models using a Laplacian Pyramid of Adversarial Networks", "journal": "", "year": "2015", "authors": "Emily Denton; Soumith Chintala; Arthur Szlam; Rob Fergus"}, {"ref_id": "b15", "title": "BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding", "journal": "", "year": "2019", "authors": "Jacob Devlin; Ming-Wei Chang; Kenton Lee; Kristina Toutanova"}, {"ref_id": "b16", "title": "Diffusion models beat gans on image synthesis", "journal": "", "year": "", "authors": "Prafulla Dhariwal; Alex Nichol"}, {"ref_id": "b17", "title": "Mastering text-to-image generation via transformers", "journal": "Advances in Neural Information Processing Systems", "year": "", "authors": "Ming Ding; Zhuoyi Yang; Wenyi Hong; Wendi Zheng; Chang Zhou; Da Yin; Junyang Lin; Xu Zou; Zhou Shao; Hongxia Yang"}, {"ref_id": "b18", "title": "Issues in Computer Vision Data Collection: Bias, Consent, and Label Taxonomy", "journal": "", "year": "2020", "authors": "Chris Dulhanty"}, {"ref_id": "b19", "title": "Taming transformers for high-resolution image synthesis", "journal": "", "year": "2021", "authors": "Patrick Esser; Robin Rombach; Bjorn Ommer"}, {"ref_id": "b20", "title": "Sex, lies and videotape: deep fakes and free speech delusions", "journal": "Maryland Law Review", "year": "2019", "authors": "Anne Mary; Ari Ezra Franks;  Waldman"}, {"ref_id": "b21", "title": "", "journal": "", "year": "2021", "authors": "Tsu-Jui Fu; Xin Eric Wang; William Yang Wang"}, {"ref_id": "b22", "title": "Make-a-scene: Scene-based text-to-image generation with human priors", "journal": "", "year": "2022", "authors": "Oran Gafni; Adam Polyak; Oron Ashual; Shelly Sheynin; Devi Parikh; Yaniv Taigman"}, {"ref_id": "b23", "title": "", "journal": "Datasheets for Datasets", "year": "2020-03", "authors": "Timnit Gebru; Jamie Morgenstern; Briana Vecchione; Jennifer Wortman Vaughan; Hanna Wallach; Hal Daum\u00e9; Iii ; Kate Crawford"}, {"ref_id": "b24", "title": "MegaPixels: Origins and endpoints of biometric datasets \"In the Wild", "journal": "", "year": "2019", "authors": "Adam Harvey; Jules Laplace"}, {"ref_id": "b25", "title": "Clipscore: A reference-free evaluation metric for image captioning", "journal": "", "year": "2021", "authors": "Jack Hessel; Ari Holtzman; Maxwell Forbes; Yejin Ronan Le Bras;  Choi"}, {"ref_id": "b26", "title": "Gans trained by a two time-scale update rule converge to a local nash equilibrium", "journal": "", "year": "2017", "authors": "Martin Heusel; Hubert Ramsauer; Thomas Unterthiner; Bernhard Nessler; Sepp Hochreiter"}, {"ref_id": "b27", "title": "Classifier-free diffusion guidance", "journal": "", "year": "2021", "authors": "Jonathan Ho; Tim Salimans"}, {"ref_id": "b28", "title": "Denoising Diffusion Probabilistic Models", "journal": "NeurIPS", "year": "2020", "authors": "Jonathan Ho; Ajay Jain; Pieter Abbeel"}, {"ref_id": "b29", "title": "Cascaded diffusion models for high fidelity image generation", "journal": "JMLR", "year": "2022", "authors": "Jonathan Ho; Chitwan Saharia; William Chan; J David; Mohammad Fleet; Tim Norouzi;  Salimans"}, {"ref_id": "b30", "title": "Generative adversarial networks-enabled human-artificial intelligence collaborative applications for creative and design industries: A systematic review of current approaches and trends", "journal": "Frontiers in artificial intelligence", "year": "", "authors": "T Rowan; Liming Hughes; Tomasz Zhu;  Bednarz"}, {"ref_id": "b31", "title": "Scaling up visual and vision-language representation learning with noisy text supervision", "journal": "PMLR", "year": "2021", "authors": "Chao Jia; Yinfei Yang; Ye Xia; Yi-Ting Chen; Zarana Parekh; Hieu Pham; Quoc Le; Yun-Hsuan Sung; Zhen Li; Tom Duerig"}, {"ref_id": "b32", "title": "Solving linear inverse problems using the prior implicit in a denoiser", "journal": "", "year": "2020", "authors": "Zahra Kadkhodaie; P Eero;  Simoncelli"}, {"ref_id": "b33", "title": "Stochastic solutions for linear inverse problems using the prior implicit in a denoiser", "journal": "Advances in Neural Information Processing Systems", "year": "", "authors": "Zahra Kadkhodaie; P Eero;  Simoncelli"}, {"ref_id": "b34", "title": "Diffusionclip: Text-guided image manipulation using diffusion models", "journal": "", "year": "2021", "authors": "Gwanghyun Kim; Jong Chul Ye"}, {"ref_id": "b35", "title": "", "journal": "", "year": "2021", "authors": "P Diederik; Tim Kingma; Ben Salimans; Jonathan Poole;  Ho"}, {"ref_id": "b36", "title": "Microsoft COCO: Common Objects in Context", "journal": "", "year": "2014", "authors": "Tsung-Yi Lin; Michael Maire; Serge Belongie; Lubomir Bourdev; Ross Girshick; James Hays; Pietro Perona; Deva Ramanan; Lawrence Zitnick; Piotr Doll\u00e1r"}, {"ref_id": "b37", "title": "Generating Images from Captions with Attention", "journal": "", "year": "2016", "authors": "Elman Mansimov; Emilio Parisotto; Jimmy Lei Ba; Ruslan Salakhutdinov"}, {"ref_id": "b38", "title": "A very preliminary analysis of DALL-E 2", "journal": "", "year": "2022", "authors": "Gary Marcus; Ernest Davis; Scott Aaronson"}, {"ref_id": "b39", "title": "Generating High Fidelity Images with Subscale Pixel Networks and Multidimensional Upscaling", "journal": "", "year": "2019", "authors": "Jacob Menick; Nal Kalchbrenner"}, {"ref_id": "b40", "title": "Improved denoising diffusion probabilistic models", "journal": "", "year": "2021", "authors": "Alex Nichol; Prafulla Dhariwal"}, {"ref_id": "b41", "title": "GLIDE: Towards Photorealistic Image Generation and Editing with Text-Guided Diffusion Models", "journal": "", "year": "2021", "authors": "Alex Nichol; Prafulla Dhariwal; Aditya Ramesh; Pranav Shyam; Bob Mcgrew Pamela Mishkin; Ilya Sutskever; Mark Chen"}, {"ref_id": "b42", "title": "On Aliased Resizing and Surprising Subtleties in GAN Evaluation", "journal": "", "year": "", "authors": "Gaurav Parmar; Richard Zhang; Jun-Yan Zhu"}, {"ref_id": "b43", "title": "Data and its (dis)contents: A survey of dataset development and use in machine learning research", "journal": "Patterns", "year": "2021", "authors": "Amandalynne Paullada; Deborah Inioluwa; Emily M Raji; Emily Bender; Alex Denton;  Hanna"}, {"ref_id": "b44", "title": "Large image datasets: A pyrrhic win for computer vision?", "journal": "", "year": "2020", "authors": "Uday Vinay; Abeba Prabhu;  Birhane"}, {"ref_id": "b45", "title": "Data cards: Purposeful and transparent dataset documentation for responsible ai", "journal": "", "year": "2022", "authors": "Mahima Pushkarna; Andrew Zaldivar; Oddur Kjartansson"}, {"ref_id": "b46", "title": "Learning to Generate Reviews and Discovering Sentiment", "journal": "", "year": "2017", "authors": "Alec Radford; Rafal Jozefowicz; Ilya Sutskever"}, {"ref_id": "b47", "title": "Improving Language Understanding by Generative Pre-Training", "journal": "", "year": "2018", "authors": "Alec Radford; Karthik Narasimhan; Tim Salimans; Ilya Sutskever"}, {"ref_id": "b48", "title": "Language Models are Unsupervised Multitask Learners", "journal": "", "year": "2019", "authors": "Alec Radford; Jeffrey Wu; Rewon Child; David Luan; Dario Amodei; Ilya Sutskever"}, {"ref_id": "b49", "title": "Learning Transferable Visual Models From Natural Language Supervision", "journal": "", "year": "", "authors": "Alec Radford; Jong Wook Kim; Chris Hallacy; Aditya Ramesh; Gabriel Goh; Sandhini Agarwal; Girish Sastry; Amanda Askell; Pamela Mishkin; Jack Clark; Gretchen Krueger; Ilya Sutskever"}, {"ref_id": "b50", "title": "Po-Sen Huang, and Geoffrey Irving. Scaling language models: Methods, analysis & insights from training gopher", "journal": "", "year": "2021", "authors": "Jack Rae; Sebastian Borgeaud; Trevor Cai; Katie Millican; Jordan Hoffmann; Francis Song; John Aslanides; Sarah Henderson; Roman Ring; Susannah Young; Eliza Rutherford; Tom Hennigan"}, {"ref_id": "b51", "title": "Online and Linear-Time Attention by Enforcing Monotonic Alignments", "journal": "", "year": "2017", "authors": "Colin Raffel; Minh-Thang Luong; Peter J Liu; Ron J Weiss; Douglas Eck"}, {"ref_id": "b52", "title": "Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer", "journal": "JMLR", "year": "", "authors": "Colin Raffel; Noam Shazeer; Adam Roberts; Katherine Lee; Sharan Narang; Michael Matena; Yanqi Zhou; Wei Li; Peter J Liu"}, {"ref_id": "b53", "title": "Zero-Shot Text-to-Image Generation", "journal": "", "year": "", "authors": "Aditya Ramesh; Mikhail Pavlov; Gabriel Goh; Scott Gray; Chelsea Voss; Alec Radford; Mark Chen; Ilya Sutskever"}, {"ref_id": "b54", "title": "Hierarchical Text-Conditional Image Generation with CLIP Latents", "journal": "", "year": "", "authors": "Aditya Ramesh; Prafulla Dhariwal; Alex Nichol; Casey Chu; Mark Chen"}, {"ref_id": "b55", "title": "Generating diverse high-fidelity images with vq-vae-2", "journal": "", "year": "2019", "authors": "Ali Razavi; Aaron Van Den Oord; Oriol Vinyals"}, {"ref_id": "b56", "title": "Generative adversarial text to image synthesis", "journal": "PMLR", "year": "2016", "authors": "Scott Reed; Zeynep Akata; Xinchen Yan; Lajanugen Logeswaran; Bernt Schiele; Honglak Lee"}, {"ref_id": "b57", "title": "High-Resolution Image Synthesis with Latent Diffusion Models", "journal": "", "year": "", "authors": "Robin Rombach; Andreas Blattmann; Dominik Lorenz; Patrick Esser; Bj\u00f6rn Ommer"}, {"ref_id": "b58", "title": "Palette: Image-to-Image Diffusion Models", "journal": "", "year": "2021", "authors": "Chitwan Saharia; William Chan; Huiwen Chang; Chris A Lee; Jonathan Ho; Tim Salimans; David J Fleet; Mohammad Norouzi"}, {"ref_id": "b59", "title": "Image super-resolution via iterative refinement", "journal": "", "year": "2021", "authors": "Chitwan Saharia; Jonathan Ho; William Chan; Tim Salimans; J David; Mohammad Fleet;  Norouzi"}, {"ref_id": "b60", "title": "Do datasets have politics? disciplinary values in computer vision dataset development", "journal": "Proceedings of the ACM on Human-Computer Interaction", "year": "2021", "authors": "Emily L Morgan Klaus Scheuerman; A Denton;  Hanna"}, {"ref_id": "b61", "title": "Laion-400m: Open dataset of clip-filtered 400 million image-text pairs", "journal": "", "year": "2021", "authors": "Christoph Schuhmann; Richard Vencu; Romain Beaumont; Robert Kaczmarczyk; Clayton Mullis; Aarush Katta; Theo Coombes; Jenia Jitsev; Aran Komatsuzaki"}, {"ref_id": "b62", "title": "Which faces can AI generate? Normativity, whiteness and lack of diversity in This Person Does Not Exist", "journal": "", "year": "2021", "authors": "Lucas Sequeira; Bruno Moreschi; Amanda Jurno; Vinicius Arruda Dos Santos"}, {"ref_id": "b63", "title": "Deep unsupervised learning using nonequilibrium thermodynamics", "journal": "PMLR", "year": "2015", "authors": "Jascha Sohl-Dickstein; Eric Weiss; Niru Maheswaranathan; Surya Ganguli"}, {"ref_id": "b64", "title": "", "journal": "", "year": "2020", "authors": "Jiaming Song; Chenlin Meng; Stefano Ermon"}, {"ref_id": "b65", "title": "Generative Modeling by Estimating Gradients of the Data Distribution", "journal": "NeurIPS", "year": "2019", "authors": "Yang Song; Stefano Ermon"}, {"ref_id": "b66", "title": "Score-based generative modeling through stochastic differential equations", "journal": "", "year": "", "authors": "Yang Song; Jascha Sohl-Dickstein; P Diederik; Abhishek Kingma; Stefano Kumar; Ben Ermon;  Poole"}, {"ref_id": "b67", "title": "Biases in generative art: A causal look from the lens of art history", "journal": "", "year": "2021", "authors": "Ramya Srinivasan; Kanji Uchino"}, {"ref_id": "b68", "title": "Image representations learned with unsupervised pre-training contain human-like biases", "journal": "Association for Computing Machinery", "year": "2021", "authors": "Ryan Steed; Aylin Caliskan"}, {"ref_id": "b69", "title": "Deep fusion generative adversarial networks for text-to-image synthesis", "journal": "", "year": "2020", "authors": "Ming Tao; Hao Tang; Songsong Wu; Nicu Sebe; Xiao-Yuan Jing; Fei Wu; Bingkun Bao"}, {"ref_id": "b70", "title": "Neural Stochastic Differential Equations: Deep Latent Gaussian Models in the Diffusion Limit", "journal": "", "year": "2019", "authors": "Belinda Tzen; Maxim Raginsky"}, {"ref_id": "b71", "title": "Neural discrete representation learning. Advances in neural information processing systems", "journal": "", "year": "2017", "authors": "Aaron Van Den Oord; Oriol Vinyals"}, {"ref_id": "b72", "title": "A connection between score matching and denoising autoencoders", "journal": "Neural Computation", "year": "2011", "authors": "Pascal Vincent"}, {"ref_id": "b73", "title": "High-resolution image synthesis and semantic manipulation with conditional gans", "journal": "", "year": "2018", "authors": "Ting-Chun Wang; Ming-Yu Liu; Jun-Yan Zhu; Andrew Tao; Jan Kautz; Bryan Catanzaro"}, {"ref_id": "b74", "title": "Wsabie: Scaling up to large vocabulary image annotation", "journal": "", "year": "2011", "authors": "Jason Weston; Samy Bengio; Nicolas Usunier"}, {"ref_id": "b75", "title": "Deblurring via stochastic refinement", "journal": "", "year": "2021", "authors": "Jay Whang; Mauricio Delbracio; Hossein Talebi; Chitwan Saharia; G Alexandros; Peyman Dimakis;  Milanfar"}, {"ref_id": "b76", "title": "AttnGAN: Fine-Grained Text to Image Generation with Attentional Generative Adversarial Networks", "journal": "", "year": "2018", "authors": "Tao Xu; Pengchuan Zhang; Qiuyuan Huang; Han Zhang; Zhe Gan; Xiaolei Huang; Xiaodong He"}, {"ref_id": "b77", "title": "Attngan: Fine-grained text to image generation with attentional generative adversarial networks", "journal": "", "year": "2018", "authors": "Tao Xu; Pengchuan Zhang; Qiuyuan Huang; Han Zhang; Zhe Gan; Xiaolei Huang; Xiaodong He"}, {"ref_id": "b78", "title": "Improving text-to-image synthesis using contrastive learning", "journal": "", "year": "2021", "authors": "Hui Ye; Xiulong Yang; Martin Takac; Rajshekhar Sunderraman; Shihao Ji"}, {"ref_id": "b79", "title": "Vector-quantized image modeling with improved vqgan", "journal": "", "year": "2021", "authors": "Jiahui Yu; Xin Li; Jing Yu Koh; Han Zhang; Ruoming Pang; James Qin; Alexander Ku; Yuanzhong Xu; Jason Baldridge; Yonghui Wu"}, {"ref_id": "b80", "title": "Coca: Contrastive captioners are image-text foundation models", "journal": "", "year": "2022", "authors": "Jiahui Yu; Zirui Wang; Vijay Vasudevan; Legg Yeung; Mojtaba Seyedhosseini; Yonghui Wu"}, {"ref_id": "b81", "title": "Cross-Modal Contrastive Learning for Text-to-Image Generation", "journal": "", "year": "", "authors": "Han Zhang; Jing Yu Koh; Jason Baldridge; Honglak Lee; Yinfei Yang"}, {"ref_id": "b82", "title": "Towards language-free training for text-to-image generation", "journal": "", "year": "2021", "authors": "Yufan Zhou; Ruiyi Zhang; Changyou Chen; Chunyuan Li; Chris Tensmeyer; Tong Yu; Jiuxiang Gu; Jinhui Xu; Tong Sun;  Lafite"}, {"ref_id": "b83", "title": "Dm-gan: Dynamic memory generative adversarial networks for text-to-image synthesis", "journal": "", "year": "2019", "authors": "Minfeng Zhu; Pingbo Pan; Wei Chen; Yi Yang"}, {"ref_id": "b84", "title": "Aligning books and movies: Towards story-like visual explanations by watching movies and reading books", "journal": "", "year": "2015", "authors": "Yukun Zhu; Ryan Kiros; Rich Zemel; Ruslan Salakhutdinov; Raquel Urtasun; Antonio Torralba; Sanja Fidler"}], "figures": [{"figure_label": "1", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Figure 1 :1Figure 1: Select 1024 \u00d7 1024 Imagen samples for various text inputs. We only include photorealistic images in this figure and leave artistic content to the Appendix, since generating photorealistic images is more challenging from a technical point of view. Figs. A.1 to A.3 show more samples.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Fig. A.31 for reference implementation of the techniques and Appendix Fig. A.9 for visualizations of their effects.", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "Figure 2 :2Figure 2: Non-cherry picked Imagen samples for different categories of prompts from DrawBench.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Model A and one from Model B, each of which has 8 samples. Human raters are asked to compare Model A and Model B on sample fidelity and image-text alignment. They respond with one of three choices: Prefer Model A; Indifferent; or Prefer Model B.", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "Figure 3 :3Figure 3: Comparison between Imagen and DALL-E 2[54], GLIDE[41], VQ-GAN+CLIP[12] and Latent Diffusion[57] on DrawBench: User preference rates (with 95% confidence intervals) for image-text alignment and image fidelity.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_5", "figure_caption": "Impact of thresholding.", "figure_data": ""}, {"figure_label": "4", "figure_type": "figure", "figure_id": "fig_6", "figure_caption": "Figure 4 :4Figure 4: Summary of some of the critical findings of Imagen with pareto curves sweeping over different guidance values. See Appendix D for more details.", "figure_data": ""}, {"figure_label": "1", "figure_type": "figure", "figure_id": "fig_7", "figure_caption": "Figure A. 1 :1Figure A.1: Select 1024 \u00d7 1024 Imagen samples for various text inputs.", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_8", "figure_caption": "Figure A. 2 :2Figure A.2: Select 1024 \u00d7 1024 Imagen samples for various text inputs.", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_9", "figure_caption": "Figure A. 3 :3Figure A.3: Select 1024 \u00d7 1024 Imagen samples for various text inputs.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_10", "figure_caption": "Fig. A.30 shows the full architecture of Efficient U-Net, while Figures A.28 and A.29 show detailed description of the Downsampling and Upsampling blocks of Efficient U-Net respectively. See Appendix D.3.2 for results.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_11", "figure_caption": "Fig. A.5b shows the results. We find that raters are considerably more likely to prefer the generations from the model trained with the T5-XXL encoder over the CLIP text encoder, especially for image-text alignment. This indicates that language models are better than text encoders trained on image-text contrastive objectives in encoding complex and compositional text prompts. Fig. A.7", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_12", "figure_caption": "Comparing T5-XXL and CLIP on DrawBench.", "figure_data": ""}, {"figure_label": "56", "figure_type": "figure", "figure_id": "fig_13", "figure_caption": "Figure A. 5 :Figure A. 6 :56Figure A.5: Comparison between text encoders for text-to-image generation. For Fig. A.5a, we sweep over guidance values of [1, 1.25, 1.5, 1.75, 2, 3, 4, 5, 6, 7, 8, 9, 10]", "figure_data": ""}, {"figure_label": "78", "figure_type": "figure", "figure_id": "fig_14", "figure_caption": "Figure A. 7 :Figure A. 8 :78Figure A.7: T5-XXL vs. CLIP text encoder on DrawBench a) image-text alignment, and b) image fidelity.", "figure_data": ""}, {"figure_label": "9", "figure_type": "figure", "figure_id": "fig_15", "figure_caption": "Figure A. 9 :9Figure A.9: Thresholding techniques on 256 \u00d7 256 samples for \"A photo of an astronaut riding a horse.\" Guidance weights increase from 1 to 5 as we go from top to bottom. No thresholding results in poor images with high guidance weights. Static thresholding is an improvement but still leads to oversaturated samples. Our dynamic thresholding leads to the highest quality images. See Fig. A.10 for more qualitative comparison.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_16", "figure_caption": "Fig. A.Fig. A.13b plots the CLIP-FID score trade-off curves for various model sizes of the 64 \u00d7 64 text-toimage U-Net model. We train each of the models with a batch size of 2048, and 400K training steps.As we scale from 300M parameters to 2B parameters for the U-Net model, we obtain better trade-off curves with increasing model capacity. Interestingly, scaling the frozen text encoder model size yields more improvement in model quality over scaling the U-Net model size. Scaling with a frozen text encoder is also easier since the text embeddings can be computed and stored offline during training.D.3.1 Impact of Text Conditioning SchemasWe ablate various schemas for conditioning the frozen text embeddings in the base 64 \u00d7 64 textto-image diffusion model. Fig. A.13a compares the CLIP-FID pareto curves for mean pooling, attention pooling, and cross attention. We find using any pooled embedding configuration (mean or attention pooling) performs noticeably worse compared to attending over the sequence of contextual embeddings in the attention layers. We implement the cross attention by concatenating the text", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_17", "figure_caption": "Fig. A.16 for category wise human evaluation comparison between Imagen and GLIDE. See Figures A.22 to A.26 for qualitative comparisons. Imagen outperforms GLIDE on 8 out of 11 categories on image-text alignment, and 10out of 11 categories on image fidelity. We observe that GLIDE is considerably better than DALL-E 2 in binding attributes to objects corroborating the observation by[54]. Comparison between different model sizes.", "figure_data": ""}, {"figure_label": "1314", "figure_type": "figure", "figure_id": "fig_18", "figure_caption": "Figure A. 13 :Figure A. 14 :1314Figure A.13: CLIP vs FID-10K pareto curves for different ablation studies for the base 64 \u00d7 64 model. For each study, we sweep over guidance values of [1, 1.25, 1.5, 1.75, 2, 3, 4, 5, 6, 7, 8, 9, 10]", "figure_data": ""}, {"figure_label": "15", "figure_type": "figure", "figure_id": "fig_19", "figure_caption": "Figure A. 15 :15Figure A.15: Imagen vs DALL-E 2 on DrawBench a) image-text alignment, and b) image fidelity.", "figure_data": ""}, {"figure_label": "16", "figure_type": "figure", "figure_id": "fig_20", "figure_caption": "Figure A. 16 :16Figure A.16: Imagen vs GLIDE on DrawBench a) image-text alignment, and b) image fidelity.", "figure_data": ""}, {"figure_label": "17", "figure_type": "figure", "figure_id": "fig_21", "figure_caption": "Figure A. 17 :17Figure A.17: Example qualitative comparisons between Imagen and DALL-E 2 [54] on DrawBench prompts from Reddit category.", "figure_data": ""}, {"figure_label": "18", "figure_type": "figure", "figure_id": "fig_22", "figure_caption": "Figure A. 18 :18Figure A.18: Example qualitative comparisons between Imagen and DALL-E 2[54] on DrawBench prompts from Colors category. We observe that DALL-E 2 generally struggles with correctly assigning the colors to the objects especially for prompts with more than one object.", "figure_data": ""}, {"figure_label": "19", "figure_type": "figure", "figure_id": "fig_23", "figure_caption": "Figure A. 19 :19Figure A.19: Example qualitative comparisons between Imagen and DALL-E 2[54] on DrawBench prompts from Conflicting category. We observe that both DALL-E 2 and Imagen struggle generating well aligned images for this category. However, Imagen often generates some well aligned samples, e.g. \"A panda making latte art.\".", "figure_data": ""}, {"figure_label": "20", "figure_type": "figure", "figure_id": "fig_24", "figure_caption": "Figure A. 20 :20Figure A.20: Example qualitative comparisons between Imagen and DALL-E 2 [54] on DrawBench prompts from DALL-E category.", "figure_data": ""}, {"figure_label": "21", "figure_type": "figure", "figure_id": "fig_25", "figure_caption": "Figure A. 21 :21Figure A.21: Example qualitative comparisons between Imagen and DALL-E 2 [54] on DrawBench prompts from Text category. Imagen is significantly better than DALL-E 2 in prompts with quoted text.", "figure_data": ""}, {"figure_label": "23", "figure_type": "figure", "figure_id": "fig_26", "figure_caption": "Figure A. 23 :23Figure A.23: Example qualitative comparisons between Imagen and GLIDE[41] on DrawBench prompts from Colors category. We observe that GLIDE is better than DALL-E 2 in assigning the colors to the objects.", "figure_data": ""}, {"figure_label": "25", "figure_type": "figure", "figure_id": "fig_27", "figure_caption": "Figure A. 25 :25Figure A.25: Example qualitative comparisons between Imagen and GLIDE [41] on DrawBench prompts from DALL-E category.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_28", "figure_caption": "(a) Implementation for static thresholding. def sample(p: float): for t in reversed(range(T)): # Forward pass to get x0_t from z_t. x0_t = nn(z_t, t) # Dynamic thresholding (ours). s = jnp.percentile( jnp.abs(x0_t), p, axis=tuple(range(1, x0_t.ndim))) s = jnp.max(s, 1.0) x0_t = jnp.clip(x0_t, -s, s) / s # Sampler step. z_tm1 = sampler_step(x0_t, z_t, t) z_t = z_tm1 return x0_t (b) Implementation for dynamic thresholding.", "figure_data": ""}, {"figure_label": "31", "figure_type": "figure", "figure_id": "fig_29", "figure_caption": "Figure A. 31 :31Figure A.31: Pseudo code implementation comparing static thresholding and dynamic thresholding. def train_step( x_lr: jnp.ndarray, x_hr: jnp.ndarray): # Add augmentation to the low-resolution image. aug_level = jnp.random.uniform(0.0, 1.0) x_lr = apply_aug(x_lr, aug_level) # Diffusion forward process. t = jnp.random.uniform(0.0, 1.0) z_t = forward_process(x_hr, t) Optimize loss(x_hr, nn(z_t, x_lr, t, aug_level)) (a) Training using conditioning augmentation.", "figure_data": ""}, {"figure_label": "32", "figure_type": "figure", "figure_id": "fig_30", "figure_caption": "Figure A. 32 :32Figure A.32: Pseudo-code implementation for training and sampling using conditioning augmentation. Text conditioning has not been shown for brevity.", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_0", "figure_caption": "). We call this variant Efficient U-Net (See Appendix B.1 for more details and comparisons). Our 256 \u00d7 256 \u2192 1024 \u00d7 1024 super-resolution model trains on 64 \u00d7 64 \u2192 256 \u00d7 256 crops of the 1024 \u00d7 1024 image. To facilitate this, we remove the self-attention layers, however we keep the text cross-attention layers which we found to be critical. During inference, the model receives the full 256 \u00d7 256 low-resolution images as inputs, and returns upsampled 1024 \u00d7 1024 images as outputs. Note that we use text cross attention for both our super-resolution models.", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_1", "figure_caption": "ExperimentsSection 4.1 describes training details, Sections 4.2 and 4.3 analyze results on MS-COCO and DrawBench, and Section 4.4 summarizes our ablation studies and key findings. For all experiments below, the images are fair random samples from Imagen with no post-processing or re-ranking.", "figure_data": ""}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "MS-COCO 256 \u00d7 256 FID-30K. We use a guidance weight of 1.35 for our 64 \u00d7 64 model, and a guidance weight of 8.0 for our super-resolution model.", "figure_data": "ModelFID-30KZero-shot FID-30KAttnGAN [76]35.49DM-GAN [83]32.64DF-GAN [69]21.42DM-GAN + CL [78]20.79XMC-GAN [81]9.33LAFITE [82]8.12Make-A-Scene [22]7.55DALL-E [53]17.89LAFITE [82]26.94GLIDE [41]12.24DALL-E 2 [54]10.39Imagen (Our Work)7.27"}, {"figure_label": "2", "figure_type": "table", "figure_id": "tab_3", "figure_caption": "COCO 256 \u00d7 256 human evaluation comparing model outputs and original images. For the bottom part (no people), we filter out prompts containing one of man, men, woman, women, person, people, child, adult, adults, boy, boys, girl, girls, guy, lady, ladies, someone, toddler, (sport) player, workers, spectators.", "figure_data": "ModelPhotorealism \u2191 Alignment \u2191OriginalOriginal50.0%91.9 \u00b1 0.42Imagen 39.5 \u00b1 0.75% 91.4 \u00b1 0.44No peopleOriginal50.0%92.2 \u00b1 0.54Imagen 43.9 \u00b1 1.01% 92.1 \u00b1 0.55"}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_5", "figure_caption": "Table A.1 enumerates these categories along with description and few examples. We release the full set of samples here.", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_7", "figure_caption": "11: CLIP vs FID-10K pareto curves showing the impact of noise augmentation on our 64 \u00d7 64 \u2192 256\u00d7256 model. For each study, we sweep over guidance values of[1,3,5,7,8,10,12,15,18] embedding sequence to the key-value pairs of each self-attention layer in the base 64 \u00d7 64 and 64 \u00d7 64 \u2192 256 \u00d7 256 models. For our 256 \u00d7 256 \u2192 1024 \u00d7 1024 model, since we have no selfattention layers, we simply added explicit cross-attention layers to attend over the text embeddings. We found this to improve both fidelity and image-text alignment with minimal computational costs.D.3.2 Comparison of U-Net vs Efficient U-NetWe compare the performance of U-Net with our new Efficient U-Net on the task of 64 \u00d7 64 \u2192 256 \u00d7 256 super-resolution task.Fig. A.14 compares the training convergence of the two architectures. We observe that Efficient U-Net converges significantly faster than U-Net, and obtains better performance overall. Our Efficient U-Net is also \u00d72 \u2212 3 faster at sampling. Super-resolution variations for some 64 \u00d7 64 generated images. We first generate the 64\u00d764 image using \"A photo of ... .\". Given generated 64 \u00d7 64 images, we condition both the super-resolution models on different prompts in order to generate different upsampled variations. e.g. for oil painting we condition the super-resolution models on the prompt \"An oil painting of ... .\". Through a combination of large guidance weights and aug_level = 0.3 for both super-res models we can generate different styles based on the style query through text. to A.21 show few qualitative comparisons between Imagen and DALL-E 2 samples used for this human evaluation study. Some of the categories where Imagen has a considerably larger preference over DALL-E 2 include Colors, Positional, Text, DALL-E and Descriptions. The authors in", "figure_data": "InputUnmodifiedOil PaintingIllustrationFigure A.12:"}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_8", "figure_caption": ".26: Example qualitative comparisons between Imagen and GLIDE[41] on DrawBench prompts from Text category. Imagen is significantly better than GLIDE too in prompts with quoted text.Figure A.27: Efficient U-Net ResNetBlock. The ResNetBlock is used both by the DBlock and UBlock. Hyperparameter of the ResNetBlock is the number of channels channels: int. Efficient UNet DBlock. Hyperparameters of DBlock are: the stride of the block if there is downsampling stride: Optional[Tuple[int, int]], number of ResNetBlock per DBlock numResNetBlocksPerBlock: int, and number of channels channels: int. The dashed lined blocks are optional, e.g., not every DBlock needs to downsample or needs self-attention.Figure A.29: Efficient U-Net UBlock. Hyperparameters of UBlock are: the stride of the block if there is upsampling stride: Optional[Tuple[int, int]], number of ResNetBlock per DBlock numResNetBlocksPerBlock: int, and number of channels channels: int. The dashed lined blocks are optional, e.g., not every UBlock needs to upsample or needs self-attention.", "figure_data": "def sample():for t in reversed(range(T)):# Forward pass to get x0_t from z_t.x0_t = nn(z_t, t)# Static thresholding.x0_t = jnp.clip(x0_t, -1.0, 1.0)GroupNormswish# Sampler step.Conv z_tm1 = sampler_step(x0_t, z_t, t)z_t = z_tm1 return x0_tkernel_size=3\u00d73 channels=channelsConvkernel_size=1\u00d71GroupNormchannels=channelsswishConv kernel_size=3\u00d73 channels=channels Conditional Embeddings (e.g., Time, Pooled Text Embeddings) Full Contextual Text Embeddings Skip Connection from DBlock CombineEmbs Previous DBlock Conv kernel_size=3\u00d73 strides=stride channels=channels CombineEmbs ResNetBlock channels=channels SelfAttention attention_heads=8 hidden_size=2\u00d7channels output_size=channels + + Conditional Embeddings ResNetBlock channels=channels \u00d7 numResNetBlocksPerBlock \u00d7 numResNetBlocksPerBlock SelfAttention Conv kernel_size=3\u00d73 strides=stride Figure A.28: Previous UBlock channels=channels"}], "formulas": [{"formula_id": "formula_0", "formula_text": "E x,c, ,t w t x \u03b8 (\u03b1 t x + \u03c3 t , c) \u2212 x 2 2 (1)", "formula_coordinates": [4.0, 230.31, 213.06, 273.69, 12.69]}, {"formula_id": "formula_1", "formula_text": "\u03b8 (z t , c) = w \u03b8 (z t , c) + (1 \u2212 w) \u03b8 (z t ).(2)", "formula_coordinates": [4.0, 228.82, 381.71, 275.18, 9.68]}, {"formula_id": "formula_3", "formula_text": "E ,t w(\u03bb t ) x \u03b8 (z t , \u03bb t , c) \u2212 x 2 2 (4)", "formula_coordinates": [20.0, 240.04, 240.4, 263.97, 12.69]}, {"formula_id": "formula_4", "formula_text": "z s = \u03b1 sx\u03b8 (z t , \u03bb t , c) + \u03c3 s \u03c3 t (z t \u2212 \u03b1 tx\u03b8 (z t , \u03bb t , c))(5)", "formula_coordinates": [20.0, 207.74, 374.22, 296.26, 23.23]}, {"formula_id": "formula_5", "formula_text": "z s =\u03bc s|t (z t ,x \u03b8 (z t , \u03bb t , c)) + (\u03c3 2 s|t ) 1\u2212\u03b3 (\u03c3 2 t|s ) \u03b3 (6", "formula_coordinates": [20.0, 203.27, 457.21, 296.86, 12.94]}, {"formula_id": "formula_6", "formula_text": ")", "formula_coordinates": [20.0, 500.13, 458.92, 3.87, 8.64]}], "doi": ""}