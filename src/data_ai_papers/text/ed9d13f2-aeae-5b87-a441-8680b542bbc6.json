{"title": "Compositional Morphology for Word Representations and Language Modelling", "authors": "Jan A Botha", "pub_date": "2014-05-16", "abstract": "This paper presents a scalable method for integrating compositional morphological representations into a vector-based probabilistic language model. Our approach is evaluated in the context of log-bilinear language models, rendered suitably efficient for implementation inside a machine translation decoder by factoring the vocabulary. We perform both intrinsic and extrinsic evaluations, presenting results on a range of languages which demonstrate that our model learns morphological representations that both perform well on word similarity tasks and lead to substantial reductions in perplexity. When used for translation into morphologically rich languages with large vocabularies, our models obtain improvements of up to 1.2 BLEU points relative to a baseline system using back-off n-gram models.", "sections": [{"heading": "Introduction", "text": "The proliferation of word forms in morphologically rich languages presents challenges to the statistical language models (LMs) that play a key role in machine translation and speech recognition. Conventional back-off n-gram LMs (Chen & Goodman, 1998) and the increasingly popular vector-based LMs (Bengio et al., 2003;Schwenk et al., 2006;Mikolov et al., 2010) use parametrisations that do not explicitly encode morphological regularities among related forms, like abstract, abstraction and abstracted. Such models suffer from data sparsity arising from morphological processes and lack a coherent method of assigning probabilities or representations to unseen word forms. This work focuses on continuous space language models (CSLMs), an umbrella term for the LMs that represent words with real-valued vectors. Such word representations have been found to capture some morphological regularity (Mikolov et al., 2013b), but we contend that there is a case for building a priori morphological awareness into The method we propose strikes a balance between probabilistic language modelling and morphology-based representation learning. Word vectors are composed as a linear function of arbitrary sub-elements of the word, e.g. surface form, stem, affixes, or other latent information. The effect is to tie together the representations of morphologically related words, directly combating data sparsity. This is executed in the context of a log-bilinear (LBL) LM (Mnih & Hinton, 2007), which is sped up sufficiently by the use of word classing so that we can integrate the model into an open source machine translation decoder 1 and evaluate its impact on translation into 6 languages, including the morphologically complex Czech, German and Russian.\nIn word similarity rating tasks, our morpheme vectors help improve correlation with human ratings in multiple languages. Fine-grained analysis is used to determine the origin of our perplexity reductions, while scaling experiments demonstrate tractability on vocabularies of 900k types using 100m+ tokens.", "publication_ref": ["b5", "b1", "b38", "b26", "b29", "b30"], "figure_ref": [], "table_ref": []}, {"heading": "Additive Word Representations", "text": "A generic CSLM associates with each word type v in the vocabulary V a d-dimensional feature vector r v \u2208 R d . Regularities among words are captured in an opaque way through the interaction of these feature values and a set of transformation weights. This leverages linguistic intuitions only in an extremely rudimentary way, in contrast to handengineered linguistic features that target very specific phenomena, as often used in supervised-learning settings.\nWe seek a compromise that retains the unsupervised nature of CSLM feature vectors, but also incorporates a priori linguistic knowledge in a flexible and efficient manner. In particular, morphologically related words should share statistical strength in spite of differences in surface form.\nTo achieve this, we define a mapping \u00b5 : V \u2192 F + of a surface word into a variable-length sequence of factors, i.e. \u00b5(v) = (f 1 , . . . , f K ), where v \u2208 V and f i \u2208 F. Each factor f has an associated factor feature vector r f \u2208 R d . We thereby factorise a word into its surface morphemes, although the approach could also incorporate other information, e.g. lemma, part of speech.\nThe vector representationr v of a word v is computed as a function \u03c9 \u00b5 (v) of its factor vectors. We use addition as composition function:r v = \u03c9 \u00b5 (v) = f \u2208\u00b5(v) r f . The vectors of morphologically related words become linked through shared factor vectors (notation:\n\u2212 \u2212\u2212 \u2192 word, \u2212\u2212\u2212\u2192 factor ), \u2212 \u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212 \u2192 imperfection = \u2212 \u2192 im + \u2212 \u2212\u2212\u2212 \u2192 perfect + \u2212 \u2192 ion \u2212 \u2212\u2212\u2212\u2212\u2212 \u2192 perfectly = \u2212 \u2212\u2212\u2212 \u2192 perfect + \u2212 \u2192 ly .\nFurthermore, representations for out-of-vocabulary (OOV) words can be constructed using their available morpheme vectors.\nWe include the surface form of a word as a factor itself. This accounts for noncompositional constructions\n( \u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 greenhouse = \u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 greenhouse + \u2212 \u2212\u2212 \u2192 green + \u2212 \u2212\u2212 \u2192 house)\n, and makes the approach more robust to noisy morphological segmentation. This strategy also overcomes the order-invariance of additive composition (\n\u2212 \u2212\u2212\u2212\u2212\u2212 \u2192 hangover = \u2212 \u2212\u2212\u2212\u2212\u2212 \u2192 overhang).\nThe number of factors per word is free to vary over the vocabulary, making the approach applicable across the spectrum of more fusional languages (e.g. Czech, Russian) to more agglutinative languages (e.g. Turkish). This is in contrast to factored language models (Alexandrescu & Kirchhoff, 2006), which assume a fixed number of factors per word. Their method of concatenating factor vectors to obtain a single representation vector for a word can be seen as enforcing a partition on the feature space. Our method of addition avoids such a partitioning and better reflects the absence of a strong intuition about what an appropriate partitioning might be. A limitation of our method compared to theirs is that the deterministic mapping \u00b5 currently enforces a single factorisation per word type, which sacrifices information obtainable from context-disambiguated morphological analyses.\nOur additive composition function can be regarded as an instantiation of the weighted addition strategy that performed well in a distributional compositional approach to derivational morphology (Lazaridou et al., 2013). Unlike the recursive neural-network method of Luong et al. (2013), we do not impose a single tree structure over a word, which would ignore the ambiguity inherent in words like un [[lock]able] vs. [un[lock]]able. In contrast to these two previous approaches to morphological modelling, our additive representations are readily implementable in a probabilistic language model suitable for use in a decoder.", "publication_ref": ["b0", "b23", "b25"], "figure_ref": [], "table_ref": []}, {"heading": "Log-Bilinear Language Models", "text": "Log-bilinear (LBL) models (Mnih & Hinton, 2007) are an instance of CSLMs that make the same Markov assumption as n-gram language models. The probability of a sentence w is decomposed over its words, each conditioned on the n-1 preceding words: P (w) \u2248 i P w i |w i\u22121 i\u2212n+1 . These distributions are modelled by a smooth scoring function \u03bd(\u2022) over vector representations of words. In contrast, discrete n-gram models are estimated by smoothing and backing off over empirical distributions (Kneser & Ney, 1995;Chen & Goodman, 1998).\nThe LBL predicts the vector p for the next word as a function of the context vectors q j \u2208 R d of the preceding words,\np = n\u22121 j=1 q j C j ,(1)\nwhere C j \u2208 R d\u00d7d are position-specific transformations.\n\u03bd(w) expresses how well the observed word w fits that prediction and is defined as \u03bd(w) = p \u2022 r w + b w , where b w is a bias term encoding the prior probability of a word type. Softmax then yields the word probability as\nP w i |w i\u22121 i\u2212n+1 = exp (\u03bd(w i ))\nv\u2208V exp (\u03bd(v))\n.\n(\n)2\nThis model is subsequently denoted as LBL with parameters \u0398 LBL = (C j , Q, R, b), where Q, R \u2208 R |V|\u00d7d contain the word representation vectors as rows, and b \u2208 R |V| . Q and R imply that separate representations are used for conditioning and output.", "publication_ref": ["b30", "b22", "b5"], "figure_ref": [], "table_ref": []}, {"heading": "Additive Log-Bilinear Model", "text": "We introduce a variant of the LBL that makes use of additive representations ( \u00a72) by associating the composed word vectorsr andq j with the target and context words, respectively. The representation matrices Q (f ) , R (f ) \u2208 R |F |\u00d7d thus contain a vector for each factor type. This model is designated LBL++ and has parameters \u0398 LBL++ = C j , Q (f ) , R (f ) , b . Words sharing factors are tied together, which is expected to improve performance on rare word forms.\nRepresenting the mapping \u00b5 with a sparse transformation matrix M \u2208 Z\nV\u00d7|F | +\n, where a row vector m v has some non-zero elements to select factor vectors, establishes the relation between word and factor representation matrices as R = M R (f ) and Q = M Q (f ) . In practice, we exploit this for test-time efficiency-word vectors are compiled offline so that the computational cost of LBL++ probability lookups is the same as for the LBL.\nWe consider two obvious variations of the LBL++ to evaluate the extent to which interactions between context and target factors affect the model: LBL+o only factorises output words and retains simple word vectors for the context (i.e. Q \u2261 Q (f ) ), while LBL+c does the reverse, only factorising context words. 2 Both reduce to the LBL when setting \u00b5 to be the identity function, such that V \u2261 F.\nThe factorisation permits an approach to unknown context words that is less harsh than the standard method of replacing them with a global unknown symbol-instead, a vector can be constructed from the known factors of the word (e.g. the observed stem of an unobserved inflected form). A similar scheme can be used for scoring unknown target words, but requires changing the event space of the probabilistic model. We use this vocabulary stretching capability in our word similarity experiments, but leave the extensions for test-time language model predictions as future work.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Class-based Model Decomposition", "text": "The key obstacle to using CSLMs in a decoder is the expensive normalisation over the vocabulary. Our approach to reducing the computational cost of normalisation is to use a class-based decomposition of the probabilistic model (Goodman, 2001;Mikolov et al., 2011). Using Brownclustering (Brown et al., 1992), 3 we partition the vocabulary into |C| classes, denoting as C c the set of vocabulary items in class c, such that\nV = C 1 \u222a \u2022 \u2022 \u2022 \u222a C |C| .\nIn this model, the probability of a word conditioned on the history h of n \u2212 1 preceding words is decomposed as P (w|h) = P (c|h)P (w|h, c).\n(\n)3\nThis class-based model, CLBL, extends over the LBL by associating a representation vector s c and bias parameter t c to each class c, such that \u0398 CLBL = (C j , Q, R, S, b, t).\nThe same prediction vector p is used to compute both class score \u03c4 (c) = p \u2022 s c + t c and word score \u03bd(w), which are normalised separately:\nP (c|h) = exp (\u03c4 (c)) |C| c =1 exp (\u03c4 (c ))(4)\nP (w|h, c) = exp (\u03bd(w)) v \u2208Cc exp (\u03bd(v )) .(5)\nWe favour this flat vocabulary partitioning for its computational adequacy, simplicity and robustness. Computational adequacy is obtained by using |C| \u2248 |V| 0.5 , thereby reducing the O(|V|) normalisation operation of the LBL to two O(|V| 0.5 ) operations in the CLBL.\nOther methods for achieving more drastic complexity reductions exist in the form of frequency-based truncation, shortlists (Schwenk, 2004), or casting the vocabulary as a full hierarchy (Mnih & Hinton, 2008) or partial hierarchy (Le et al., 2011). We expect these approaches could have adverse effects in the rich morphology setting, where much of the vocabulary is in the long tail of the word distribution.", "publication_ref": ["b13", "b27", "b3", "b36", "b31", "b24"], "figure_ref": [], "table_ref": []}, {"heading": "Training & Initialisation", "text": "Model parameters \u0398 are estimated by optimising an L2regularised log likelihood objective. Training the CLBL and its additive variants directly against this objective is fast because normalisation of model scores, which is required in computing gradients, is over a small number of events.\nFor the classless LBLs we use noise-contrastive estimation (NCE) (Gutmann & Hyv\u00e4rinen, 2012;Mnih & Teh, 2012) to avoid normalisation during training. This leaves the expensive test-time normalisation of LBLs unchanged, precluding their usage during decoding. We apply AdaGrad (Duchi et al., 2011) and tune the stepsize \u03be on development data. 4 We halt training once the perplexity on the development data starts to increase.", "publication_ref": ["b15", "b32", "b9"], "figure_ref": [], "table_ref": []}, {"heading": "Experiments", "text": "The overarching aim of our evaluation is to investigate the effect of using the proposed additive representations across languages with a range of morphological complexity. Our intrinsic language model evaluation has two parts. We first perform a model selection experiment on small data to consider the relative merits of using additive representations for context words, target words, or both, and to validate the use of the class-based decomposition.\nThen we consider class-based additive models trained on tens of millions of tokens and large vocabularies. These larger language models are applied in two extrinsic tasks: i) a word-similarity rating experiment on multiple languages, aiming to gauge the quality of the induced word and morpheme representation vectors; ii) a machine translation experiment, where we are specifically interested in testing the impact of an LBL LM feature when translating into morphologically rich languages.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Data & Methods", "text": "We make use of data from the 2013 ACL Workshop on Machine Translation. 5 We first describe data used for translation experiments, since the monolingual datasets used for language model training were derived from that. The language pairs are English\u2192{German, French, Spanish, Rus-sian} and English\u2194Czech. Our parallel data comprised the Europarl-v7 and news-commentary corpora, except for English-Russian where we used news-commentary and the Yandex parallel corpus. 6 Pre-processing involved lowercasing, tokenising and filtering to exclude sentences of more than 80 tokens or substantially different lengths. Language Model Vocabularies. Additive representations that link morphologically related words specifically aim to improve modelling of the long tail of the lexicon, so we do not want to prune away all rare words, as is common practice in language modelling and word embedding learning. We define a singleton pruning rate \u03ba, and randomly replace that fraction of words occurring only once in the training data with a global UNK symbol. \u03ba = 1 would imply a unigram count cut-off threshold of 1. Instead, we use low pruning rates 8 and thus model large vocabularies. 9\nWord Factorisation \u00b5. We obtain labelled morphological segmentations from the unsupervised segmentor Morfessor Cat-MAP (Creutz & Lagus, 2007). The mapping \u00b5 of a word is taken as its surface form and the morphemes identified by Morfessor. Keeping the morpheme labels allows the model to learn separate vectors for, say, in stem the preposition and in prefix occurring as in\u2022appropriate. By not post-processing segmentations in a more sophisticated way, we keep the overall method more language independent.", "publication_ref": ["b8"], "figure_ref": [], "table_ref": []}, {"heading": "Intrinsic Language Model Evaluation", "text": "Results on DATA-1M. The use of morphology-based, additive representations for both context and output words (models++) yielded perplexity reductions on all 6 languages when using 1m training tokens. Furthermore, these double-additive models consistently outperform the ones that factorise only context (+c) or only output (+o) words, indicating that context and output contribute complementary information and supporting our hypothesis that is it beneficial to model morphological dependencies across words. The results are summarised in Figure 2.\nFor lack of space we do not present numbers for individual languages, but report that the impact of CLBL++ varies by language, correlating with vocabulary size: Russian benefited most, followed by Czech and German. Even on English, often regarded as having simple morphology, the relative improvement is 4%.\nThe relative merits of the +c and +o schemes depend on which model is used as starting point. With LBL, the output-additive scheme (LBL+o) gives larger improvements than the context-additive scheme (LBL+c). The reverse is true for CLBL, indicating the class decomposition dampens the effectiveness of using morphological information in output words.\nThe use of classes increases perplexity slightly compared to the LBLs, but this is in exchange for much faster computation of language model probabilities, allowing the CLBLs to be used in a machine translation decoder ( \u00a74.4).\nResults on DATA-MAIN. Based on the outcomes of the small-scale evaluation, we focus our main language model evaluation on the additive class-based model CLBL++ in comparison to CLBL and MKN baselines, using the larger training dataset, with vocabularies of up to 500k types.\nThe overall trend that morphology-based additive representations yield lower perplexity carries over to this larger data setting, again with the biggest impact being on Czech and Russian (Table 2, top). Improvements are in the 2%-6% range, slightly lower than the corresponding differences on the small data.\nOur hypothesis is that the much of the improvement is due to the additive representations being especially beneficial for modelling rare words. We test this by repeating the experiment under the condition where all word types occurring only once are excluded from the vocabulary (\u03ba=1).\nIf the additive representations were not beneficial to rare words, the outcome should remain the same. Instead, we find the relative improvements become a lot smaller (Table 2, bottom) than when only excluding some singletons (\u03ba=0.05), which supports that hypothesis.\nAnalysis. Model perplexity on a whole dataset is a convenient summary of its intrinsic performance, but such a global view does not give much insight into how one model outperforms another. We now partition the test data into subsets of interest and measure PPL over these subsets.\nWe first partition on token frequency, as computed on the training data. Figure 3 provides further evidence that the additive models have most impact on rare words generally, and not only on singletons. Czech, German and Russian see relative PPL reductions of 8%-21% for words occurring fewer than 100 times in the training data. Reductions become negligible for the high-frequency tokens. These tend to be punctuation and closed-class words, where any putative relevance of morphology is overwhelmed by the fact that the predictive uncertainty is very low to begin with (absolute PPL<10 for the highest frequency subset). For the morphologically simpler Spanish case, PPL reductions are generally smaller across frequency scales.\nWe also break down PPL reductions by part of speech tags, focusing on German. We used the decision tree-based tagger of Schmid & Laws (2008). Aside from unseen tokens, the biggest improvements are on nouns and adjectives (Figure 4), suggesting our segmentation-based representations help abstract over German's productive compounding. German noun phrases require agreement in gender, case and number, which are marked overtly with fusional morphemes, and we see large gains on such test n-grams: 15% improvement on adjective-noun sequences, and 21% when considering the more specific case of adjective-adjectivenoun sequences. An example of the latter kind is der ehemalig\u2022e sozial\u2022ist\u2022isch\u2022e bildung\u2022s\u2022minister ('the former socialist minister of education'), where the morphological agreement surfaces in the repeated e-suffix.\nWe conducted a final scaling experiment on Czech by training models on increasing amounts of data from the monolingual news corpora. Improvements over the MKN baseline decrease, but remain substantial at 14% for the largest setting when allowing the vocabulary to grow with the data. Maintaining a constant advantage over MKN requires also increasing the dimensionality d of representations (Mikolov et al., 2013a), but this was outside the scope of our experiment. Although gains from the additive representations over the CLBL diminish down to 2%-3% at the scale of 128m training tokens (Figure 5), these results demonstrate the tractability of our approach on very large vocabularies of nearly 1m types.", "publication_ref": ["b35", "b28"], "figure_ref": ["fig_1", "fig_2", "fig_3"], "table_ref": ["tab_3"]}, {"heading": "Task 1: Word Similarity Rating", "text": "In the previous section, we established the positive role that morphological awareness played in building continuousspace language models that better predict unseen text. Here we focus on the quality of the word representations learnt in the process. We evaluate on a standard word similarity rating task, where one measures the correlation between cosine-similarity scores for pairs of word vectors and a set of human similarity ratings. An important aspect of our evaluation is to measure performance on multiple languages using a single unsupervised, model-based approach.\nMorpheme vectors from the CLBL++ enable handling OOV test words in a more nuanced way than using the global unknown word vector. In general, we compose a vector u v = [q v ;r v ] for a word v according to a post hoc word In the first setting, the vocabulary was held fixed as data size increased(|V|); in the second it varied freely across sizes (|Vvar|). map \u00b5 by summing and concatenating the factor vectors r f and q f , where f \u2208 \u00b5 (v) \u2229 F. This ignores unknown morphemes occurring in OOV words, and uses [q UNK ; r UNK ] for u UNK only if all morphemes are unknown.\nTo see whether the morphological representations improve the quality of vectors for known words, we also report the correlations obtained when using the CLBL++ word vectors directly, resorting to\u0169 UNK for all OOV words v / \u2208 V (denoted \"\u2212compose\" in the results). This is also the strategy that the baseline CLBL model is forced to follow for OOVs.\nWe evaluate first using the English rare-word dataset (RW) created by Luong et al. (2013). Its 2034 word pairs contain more morphological complexity than other well-established word similarity datasets, e.g. crudenessimpoliteness. We compare against their context-sensitive morphological recursive neural network (csmRNN), using Spearman's rank correlation coefficient, \u03c1. Table 3 shows our model obtaining a \u03c1-value slightly below the best csm-RNN result, but outperforming the csmRNN that used an alternative set of embeddings for initialisation. This is a strong result given that our vectors come from a simple linear probabilistic model that is also suitable for integration directly into a decoder for translation ( \u00a74.4) or speech recognition, which is not the case for csmRNNs. Moreover, the csmRNNs were initialised with high-quality, publicly available word embeddings trained over weeks on much larger corpora of 630-990m words (Collobert & Weston, 2008;Huang et al., 2012), in contrast to ours that are trained from scratch on much less data. This renders our method directly applicable to languages which may not yet have those resources.\nRelative to the CLBL baseline, our method performs well on Table 3. Word-pair similarity task. Spearman's \u03c1\u00d7100 for the correlation between model scores and human ratings on the English RW dataset. The csmRNNs benefit from initialisation with high quality pre-existing word embeddings, while our models used random initialisation. (Luong et al., 2013) Our datasets across four languages. For the English RW, which was designed with morphology in mind, the gain is 64%. But also on the standard English WS353 dataset (Finkelstein et al., 2002), we get a 26% better correlation with the human ratings. On German, the CLBL++ obtains correlations up to three times stronger than the baseline, and 39% better for French (Table 4).\nA visualisation of the English morpheme vectors (Figure 6) suggests the model captured non-trivial morphological regularities: noun suffixes relating to persons (writer, humanists) lie close together, while being separated according to number; negation prefixes share a region (un-, in-, mis-, dis-); and relational prefixes are grouped (surpa-, super-, multi-, intra-), with a potential explanation for their separation from inter-being that the latter is more strongly bound up in lexicalisations (international, intersection).", "publication_ref": ["b25", "b7", "b19", "b25", "b12"], "figure_ref": [], "table_ref": []}, {"heading": "Task 2: Machine Translation", "text": "The final aspect of our evaluation focuses on the integration of class-decomposed log-bilinear models into a machine translation system. To the best of our knowledge, this 10 ES WS353 (Hassan & Mihalcea, 2009); Gur350 (Gurevych, 2005); RG65 (Rubenstein & Goodenough, 1965) with FR (Joubarne & Inkpen, 2011); ZG222 (Zesch & Gurevych, 2006).\nTable 4. Word-pair similarity task (multi-language), showing Spearman's \u03c1\u00d7100 and the number of word pairs in each dataset. As benchmarks, we include the best results from Luong et al. (2013), who relied on more training data and pre-existing embeddings not available in all languages. In the penultimate row our model's ability to compose vectors for OOV words is suppressed. is the first study to investigate large vocabulary normalised CSLMs inside a decoder when translating into a range of morphologically rich languages. We consider 5 language pairs, translating from English into Czech, German, Russian, Spanish and French.\nAside from the choice of language pairs, this evaluation diverges from Vaswani et al. (2013) by using normalised probabilities, a process made tractable by the class-based decomposition and caching of context-specific normaliser terms. Vaswani et al. (2013) relied on unnormalised model scores for efficiency, but do not report on the performance impact of this assumption. In our preliminary experiments, there was high variance in the performance of unnormalised models. They are difficult to reason about as a feature function that must help the translation model discriminate between alternative hypotheses.\nWe use cdec (Dyer et al., 2010; to build symmetric word-alignments and extract rules for hierarchical phrasebased translation (Chiang, 2007). Our baseline system uses a standard set of features in a log-linear translation model. This includes a baseline 4-gram MKN language model, trained with SRILM (Stolcke, 2002) and queried efficiently using KenLM (Heafield, 2011). The CSLMs are integrated directly into the decoder as an additional feature function, thus exercising a stronger influence on the search than in n-best list rescoring. 11 Translation model feature weights are tuned with MERT (Och, 2003) on newstest2012.  ", "publication_ref": ["b16", "b14", "b34", "b20", "b43", "b25", "b10", "b6", "b40", "b17", "b33"], "figure_ref": [], "table_ref": []}, {"heading": "MKN CLBL CLBL++", "text": "EN\u2192CS 12.6 (0.2) 13.2 (0.1) 13.6 (0.0) DE 15.7 (0.1) 15.9 (0.2) 15.8 (0.4) ES 24.7 (0.4) 25.5 (0.5) 25.7 (0.3) FR 24.1 (0.2) 24.6 (0.2) 24.8 (0.5) RU 15.9 (0.2) 16.9 (0.3) 17.1 (0.1) CS\u2192EN 19.8 (0.4) 20.4 (0.4) 20.4 (0.5) that system is more of a limitation than the performance of the language models.\nOn the other languages, the CLBL adds 0.5 to 1 BLEU points over the baseline, whereas additional improvement from the additive representations lies within MERT variance except for EN\u2192CS.\nThe impact of our morphology-aware language model is limited by the translation system's inability to generate unseen inflections. A future task is thus to combine it with a system that can do so (Chahuneau et al., 2013).", "publication_ref": ["b4"], "figure_ref": [], "table_ref": []}, {"heading": "Related Work", "text": "Factored language models (FLMs) have been used to integrate morphological information into both discrete n-gram LMs (Bilmes & Kirchhoff, 2003) and CSLMs (Alexandrescu & Kirchhoff, 2006) by viewing a word as a set of factors. Alexandrescu & Kirchhoff (2006) demonstrated how factorising the representations of context-words can help deal with out-of-vocabulary words, but they did not evaluate the effect of factorising output words and did not conduct an extrinsic evaluation.\nA variety of strategies have been explored for bringing CSLMs to bear on machine translation. Rescoring lattices with a CSLM proved to be beneficial for ASR (Schwenk, 2004) and was subsequently applied to translation (Schwenk et al., 2006;Schwenk & Koehn, 2008), reaching training sizes of up to 500m words (Schwenk et al., 2012). For efficiency, this line of work relied heavily on small \"shortlists\" of common words, by-passing the CSLM and using a back-off n-gram model for the remainder of the vocabulary. Using unnormalised CSLMs during first-pass decoding has generated improvements in BLEU score for translation into English (Vaswani et al., 2013).\nRecent work has moved beyond monolingual vector-space modelling, incorporating phrase similarity ratings based on bilingual word embeddings as a translation model feature (Zou et al., 2013), or formulating translation purely in terms of continuous-space models (Kalchbrenner & Blunsom, 2013). Accounting for linguistically derived infor-mation such as morphology (Luong et al., 2013;Lazaridou et al., 2013) or syntax (Hermann & Blunsom, 2013) has recently proved beneficial to learning vector representations of words. Our contribution is to create morphological awareness in a probabilistic language model.", "publication_ref": ["b2", "b0", "b0", "b36", "b38", "b37", "b39", "b44", "b21", "b25", "b23", "b18"], "figure_ref": [], "table_ref": []}, {"heading": "Conclusion", "text": "We introduced a method for integrating morphology into probabilistic continuous-space language models. Our method has the flexibility to be used for morphologically rich languages (MRLs) across a range of linguistic typologies. Our empirical evaluation focused on multiple MRLs and different tasks. The primary outcomes are that (i) our morphology-guided CSLMs improve intrinsic language model performance when compared to baseline CSLMs and n-gram MKN models; (ii) word and morpheme representations learnt in the process compare favourably in terms of a word similarity task to a recent more complex model that used more data, while obtaining large gains on some languages; (iii) machine translation quality as measured by BLEU was improved consistently across six language pairs when using CSLMs during decoding, although the morphology-based representations led to further improvements beyond the level of optimiser variance only for English\u2192Czech. By demonstrating that the class decomposition enables full integration of a normalised CSLM into a decoder, we open up many other possibilities in this active modelling space.", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Factored Neural Language Models", "journal": "", "year": "2006", "authors": "A Alexandrescu; K Kirchhoff"}, {"ref_id": "b1", "title": "", "journal": "A Neural Probabilistic Language Model. JMLR", "year": "2003", "authors": "Y Bengio; R Ducharme; P Vincent; C Jauvin"}, {"ref_id": "b2", "title": "Factored Language Models and Generalized Parallel Backoff", "journal": "", "year": "2003", "authors": "J A Bilmes; K Kirchhoff"}, {"ref_id": "b3", "title": "Class-Based n-gram Models of Natural Language", "journal": "Comp. Ling", "year": "1992", "authors": "P F Brown; P V Desouza; R L Mercer; V J Della Pietra; J C Lai"}, {"ref_id": "b4", "title": "Translating into Morphologically Rich Languages with Synthetic Phrases", "journal": "ACL", "year": "2013", "authors": "V Chahuneau; E Schlinger; N A Smith; C Dyer"}, {"ref_id": "b5", "title": "An Empirical Study of Smoothing Techniques for Language Modeling", "journal": "", "year": "1998", "authors": "S F Chen; J Goodman"}, {"ref_id": "b6", "title": "Hierarchical Phrase-Based Translation", "journal": "Comp. Ling", "year": "2007", "authors": "D Chiang"}, {"ref_id": "b7", "title": "A Unified Architecture for Natural Language Processing: Deep Neural Networks with Multitask Learning", "journal": "", "year": "2008", "authors": "R Collobert; J Weston"}, {"ref_id": "b8", "title": "Unsupervised Models for Morpheme Segmentation and Morphology Learning", "journal": "ACM Trans. on Speech and Language Processing", "year": "2007", "authors": "M Creutz; K Lagus"}, {"ref_id": "b9", "title": "Adaptive Subgradient Methods for Online Learning and Stochastic Optimization", "journal": "JMLR", "year": "2011", "authors": "J Duchi; E Hazan; Y Singer"}, {"ref_id": "b10", "title": "cdec: A Decoder, Alignment, and Learning Framework for Finite-State and Context-Free Translation Models", "journal": "ACL", "year": "2010", "authors": "C Dyer; A Lopez; J Ganitkevitch; J Weese; F Ture; P Blunsom; H Setiawan; V Eidelman; P Resnik"}, {"ref_id": "b11", "title": "Fast, and Effective Reparameterization of IBM Model 2", "journal": "ACL", "year": "2013", "authors": "C Dyer; V Chahuneau; N A Smith;  Simple"}, {"ref_id": "b12", "title": "Placing Search in Context: The Concept Revisited", "journal": "ACM Trans. on Information Systems", "year": "2002", "authors": "L Finkelstein; E Gabrilovich; Y Matias; E Rivlin; Z Solan; G Wolfman; E Ruppin"}, {"ref_id": "b13", "title": "Classes for Fast Maximum Entropy Training", "journal": "IEEE", "year": "2001", "authors": "J Goodman"}, {"ref_id": "b14", "title": "Using the Structure of a Conceptual Network in Computing Semantic Relatedness", "journal": "", "year": "2005", "authors": "I Gurevych"}, {"ref_id": "b15", "title": "Noise-Contrastive Estimation of Unnormalized Statistical Models , with Applications to Natural Image Statistics", "journal": "JMLR", "year": "2012", "authors": "M U Gutmann; A Hyv\u00e4rinen"}, {"ref_id": "b16", "title": "Cross-lingual Semantic Relatedness Using Encyclopedic Knowledge", "journal": "ACL", "year": "2009", "authors": "S Hassan; R Mihalcea"}, {"ref_id": "b17", "title": "Faster and Smaller Language Model Queries", "journal": "ACL", "year": "2011", "authors": "K Heafield;  Kenlm"}, {"ref_id": "b18", "title": "The Role of Syntax in Vector Space Models of Compositional Semantics", "journal": "", "year": "2013", "authors": "K M Hermann; P Blunsom"}, {"ref_id": "b19", "title": "Improving Word Representations via Global Context and Multiple Word Prototypes", "journal": "ACL", "year": "2012", "authors": "E H Huang; R Socher; C D Manning; A Y Ng"}, {"ref_id": "b20", "title": "Comparison of Semantic Similarity for Different Languages Using the Google N-gram Corpus and Second-Order Co-occurrence Measures", "journal": "Springer-Verlag", "year": "2011", "authors": "C Joubarne; D Inkpen"}, {"ref_id": "b21", "title": "Recurrent Continuous Translation Models", "journal": "ACL", "year": "2013", "authors": "N Kalchbrenner; P Blunsom"}, {"ref_id": "b22", "title": "Improved Backing-off for m-gram Language Modelling", "journal": "", "year": "1995", "authors": "R Kneser; H Ney"}, {"ref_id": "b23", "title": "Compositional-ly Derived Representations of Morphologically Complex Words in Distributional Semantics", "journal": "ACL", "year": "2013", "authors": "A Lazaridou; M Marelli; R Zamparelli; M Baroni"}, {"ref_id": "b24", "title": "Structured Output Layer Neural Network Language Model", "journal": "IEEE", "year": "2011", "authors": "H.-S Le; I Oparin; A Allauzen; J.-L Gauvain; F Yvon"}, {"ref_id": "b25", "title": "Better Word Representations with Recursive Neural Networks for Morphology", "journal": "", "year": "2013", "authors": "M.-T Luong; R Socher; C D Manning"}, {"ref_id": "b26", "title": "Recurrent neural network based language model", "journal": "", "year": "2010", "authors": "T Mikolov; M Karafi\u00e1t; L Burget; J \u010cernock\u00fd; S Khudanpur"}, {"ref_id": "b27", "title": "Extensions of Recurrent Neural Network Language Model", "journal": "", "year": "2011", "authors": "T Mikolov; S Kombrink; L Burget; J \u010cernock\u00fd; S Khudanpur"}, {"ref_id": "b28", "title": "Efficient Estimation of Word Representations in Vector Space", "journal": "", "year": "2013", "authors": "T Mikolov; K Chen; G Corrado; J Dean"}, {"ref_id": "b29", "title": "Linguistic Regularities in Continuous Space Word Representations", "journal": "", "year": "2013", "authors": "T Mikolov; W.-T Yih; G Zweig"}, {"ref_id": "b30", "title": "Three New Graphical Models for Statistical Language Modelling", "journal": "ACM", "year": "2007", "authors": "A Mnih; G Hinton"}, {"ref_id": "b31", "title": "A Scalable Hierarchical Distributed Language Model", "journal": "", "year": "2008", "authors": "A Mnih; G Hinton"}, {"ref_id": "b32", "title": "A fast and simple algorithm for training neural probabilistic language models", "journal": "", "year": "2012", "authors": "A Mnih; Y W Teh"}, {"ref_id": "b33", "title": "Minimum Error Rate Training in Statistical Machine Translation", "journal": "", "year": "2003", "authors": "F J Och"}, {"ref_id": "b34", "title": "Contextual Correlates of Synonymy", "journal": "Commun. ACM", "year": "1965-10", "authors": "H Rubenstein; J B Goodenough"}, {"ref_id": "b35", "title": "Estimation of Conditional Probabilities With Decision Trees and an Application to Fine-Grained POS Tagging", "journal": "ACL", "year": "2008", "authors": "H Schmid; F Laws"}, {"ref_id": "b36", "title": "Efficient Training of Large Neural Networks for Language Modeling", "journal": "IEEE", "year": "2004", "authors": "H Schwenk"}, {"ref_id": "b37", "title": "Large and Diverse Language Models for Statistical Machine Translation", "journal": "", "year": "2008", "authors": "H Schwenk; P Koehn"}, {"ref_id": "b38", "title": "Continuous Space Language Models for Statistical Machine Translation", "journal": "ACL", "year": "2006", "authors": "H Schwenk; D Dchelotte; J.-L Gauvain"}, {"ref_id": "b39", "title": "Pruned or Continuous Space Language Models on a GPU for Statistical Machine Translation", "journal": "ACL", "year": "2012", "authors": "H Schwenk; A Rousseau; M Attik;  Large"}, {"ref_id": "b40", "title": "SRILM -An extensible language modeling toolkit", "journal": "", "year": "2002", "authors": "A Stolcke"}, {"ref_id": "b41", "title": "Visualizing Data using t-SNE", "journal": "JMLR", "year": "2008", "authors": "L Van Der Maaten; G Hinton"}, {"ref_id": "b42", "title": "Decoding with Large-Scale Neural Language Models Improves Translation", "journal": "", "year": "", "authors": "A Vaswani; Y Zhao; V Fossum; D Chiang"}, {"ref_id": "b43", "title": "Automatically creating datasets for measures of semantic relatedness", "journal": "ACL", "year": "2006", "authors": "T Zesch; I Gurevych"}, {"ref_id": "b44", "title": "Bilingual Word Embeddings for Phrase-Based Machine Translation", "journal": "ACL", "year": "2013", "authors": "W Y Zou; R Socher; D Cer; C D Manning"}], "figures": [{"figure_label": "1", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Figure 1 .1Figure 1. Model diagram. Illustration of how a 3-gram CLBL++ model treats the Czech phrase pro novou\u0161kolu ('for the new school'), assuming the target word\u0161kolu is clustered into word class 17 by the method described in \u00a73.2.", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Figure 3 .3Figure 3. Perplexity reductions by token frequency, CLBL++ relative to CLBL. Dotted bars extending further down are better. A bin labelled with a number x contains those test tokens that occur y \u2208 [10 x , 10 x+1 ) times in the training data. Striped bars show percentage of test-set covered by each bin.", "figure_data": ""}, {"figure_label": "4", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "Figure 4 .4Figure 4. Perplexity reductions by part of speech, CLBL++ relative to CLBL on German. Dotted bars extending further down are better. Tokens tagged as foreign words or other opaque symbols resort under \"Rest\". Striped bars as in Figure 3", "figure_data": ""}, {"figure_label": "5", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Figure 5 .5Figure 5. Scaling experiment. Relative perplexity reductions obtained when varying the Czech training data size (16m-128m).In the first setting, the vocabulary was held fixed as data size increased(|V|); in the second it varied freely across sizes (|Vvar|).", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_0", "figure_caption": "Bias terms b (resp. t) are initialised to the log unigram probabilities of words (resp. classes) in the training corpus, with Laplace smoothing, while all other parameters are initialised randomly according to sharp, zero-mean Gaussians. Representations are thus learnt from scratch and not based on publicly available embeddings, meaning our approach can easily be applied to many languages.Optimisation is performed by stochastic gradient descent with updates after each mini-batch of L training examples.", "figure_data": ""}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_1", "figure_caption": "Corpus statistics. The number of sentence pairs for a row X refers to the English\u2192X parallel data (but row EN has Czech as source language).", "figure_data": "CS DE EN ES FR RUDATA-1M Toks. |V| 1m 46k 16.8m 206k DATA-MAIN Toks. Sent. Pairs |V| 0.7m 1m 36k 50.9m 339k 1.9m 1m 17k 19.5m 60k 0.7m 1m 27k 56.2m 152k 2.0m 1m 25k 57.4m 137k 2.0m 1m 62k 25.1m 497k 1.5m"}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "4-gram language models were trained on the target data in two batches: DATA-1M consists of the first million tokens only, while DATA-MAIN is the full target-side data. Statistics are given in Table1. newstest2011 was used as development data 7 for tuning language model hyperparameters, while intrinsic LM evaluation was done on newstest2012. As metric, we use model perplexity (PPL) exp(\u2212 1 N N i=1 ln P (w i )), where N is the number of test tokens. In addition to contrasting the LBL variants, we also use modified Kneser-Ney n-gram models (MKNs)(Chen & Goodman, 1998) as baselines. Model selection results. Box-plots show the spread, across 6 languages, of relative perplexity reductions obtained by each type of additive model against its non-additive baseline, for which median absolute perplexity is given in parentheses; for MKN, that is 348. Each box-plot summarises the behaviour of a model across languages. Circles give sample means, while crosses show outliers beyond 3\u00d7 the inter-quartile range.", "figure_data": "Perplexity reduction (%)\u221214 \u221212 \u221210 \u22128 \u22126 \u22124 \u22122 0 2+c+o LBL (308)+++c CLBL (309) +o ++Figure 2."}, {"figure_label": "2", "figure_type": "table", "figure_id": "tab_3", "figure_caption": "Test-set perplexities on DATA-MAIN using two vocabulary pruning settings. Percentage reductions are relative to the preceding model, e.g. the first Czech CLBL improves over MKN by 20.8% (Rel.1); the CLBL++ improves over that CLBL by a further 5.9% (Rel.2).", "figure_data": "MKNCLBLCLBL++PPL PPLRel.1PPLRel.2\u03ba=0.05 CS DE EN ES FR RU862 463 291 219 243 390683 -20.8% 422 -8.9% 281 -3.4% 207 -5.7% 232 -4.9% 313 -19.7%643 -5.9% 404 -4.2% 273 -2.8% 203 -1.9% 227 -1.9% 300 -4.2%\u03ba=1.0CS DE EN ES FR RU634 379 254 195 218 347477 -24.8% 331 -12.6% 234 -7.6% 180 -7.7% 201 -7.7% 271 -21.8%462 -3.1% 329 -0.9% 233 -0.7% 180 0.02% 198 -1.3% 262 -3.4%"}, {"figure_label": "5", "figure_type": "table", "figure_id": "tab_6", "figure_caption": "summarises our translation results. Inclusion of the CLBL++ language model feature outperforms the MKNonly baseline systems by 1.2 BLEU points for translation into Russian, and by 1 point into Czech and Spanish. The EN\u2192DE system benefits least from the additional CSLM feature, despite the perplexity reductions achieved in the intrinsic evaluation. In light of German's productive compounding, it is conceivable that the bilingual coverage of", "figure_data": ""}, {"figure_label": "5", "figure_type": "table", "figure_id": "tab_7", "figure_caption": "Translation results. Case-insensitive BLEU scores on newstest2013, with standard deviation over 3 runs given in parentheses. The two right-most columns use the listed CSLM as a feature in addition to the MKN feature, i.e. these MT systems have at most 2 LMs. Language models are fromTable 2 (top).", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "\u2212 \u2212\u2212 \u2192 word, \u2212\u2212\u2212\u2192 factor ), \u2212 \u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212 \u2192 imperfection = \u2212 \u2192 im + \u2212 \u2212\u2212\u2212 \u2192 perfect + \u2212 \u2192 ion \u2212 \u2212\u2212\u2212\u2212\u2212 \u2192 perfectly = \u2212 \u2212\u2212\u2212 \u2192 perfect + \u2212 \u2192 ly .", "formula_coordinates": [2.0, 89.39, 198.05, 185.12, 62.84]}, {"formula_id": "formula_1", "formula_text": "( \u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 greenhouse = \u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 greenhouse + \u2212 \u2212\u2212 \u2192 green + \u2212 \u2212\u2212 \u2192 house)", "formula_coordinates": [2.0, 55.44, 338.44, 184.98, 17.44]}, {"formula_id": "formula_2", "formula_text": "\u2212 \u2212\u2212\u2212\u2212\u2212 \u2192 hangover = \u2212 \u2212\u2212\u2212\u2212\u2212 \u2192 overhang).", "formula_coordinates": [2.0, 155.49, 375.36, 97.33, 17.29]}, {"formula_id": "formula_3", "formula_text": "p = n\u22121 j=1 q j C j ,(1)", "formula_coordinates": [2.0, 394.06, 245.9, 147.38, 30.32]}, {"formula_id": "formula_4", "formula_text": "P w i |w i\u22121 i\u2212n+1 = exp (\u03bd(w i ))", "formula_coordinates": [2.0, 347.98, 360.0, 137.65, 23.78]}, {"formula_id": "formula_5", "formula_text": ")2", "formula_coordinates": [2.0, 533.7, 365.0, 7.74, 12.0]}, {"formula_id": "formula_6", "formula_text": "V\u00d7|F | +", "formula_coordinates": [2.0, 371.49, 606.37, 22.97, 14.16]}, {"formula_id": "formula_7", "formula_text": "V = C 1 \u222a \u2022 \u2022 \u2022 \u222a C |C| .", "formula_coordinates": [3.0, 159.1, 545.73, 81.32, 18.77]}, {"formula_id": "formula_8", "formula_text": ")3", "formula_coordinates": [3.0, 281.7, 598.42, 7.74, 12.0]}, {"formula_id": "formula_9", "formula_text": "P (c|h) = exp (\u03c4 (c)) |C| c =1 exp (\u03c4 (c ))(4)", "formula_coordinates": [3.0, 367.49, 103.76, 173.95, 28.19]}, {"formula_id": "formula_10", "formula_text": "P (w|h, c) = exp (\u03bd(w)) v \u2208Cc exp (\u03bd(v )) .(5)", "formula_coordinates": [3.0, 355.66, 134.19, 185.78, 25.39]}], "doi": ""}