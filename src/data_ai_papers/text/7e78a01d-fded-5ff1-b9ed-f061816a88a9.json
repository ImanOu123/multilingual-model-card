{"title": "Lost Relatives of the Gumbel Trick", "authors": "Matej Balog; Nilesh Tripuraneni; Zoubin Ghahramani; Adrian Weller", "pub_date": "", "abstract": "The Gumbel trick is a method to sample from a discrete probability distribution, or to estimate its normalizing partition function. The method relies on repeatedly applying a random perturbation to the distribution in a particular way, each time solving for the most likely configuration. We derive an entire family of related methods, of which the Gumbel trick is one member, and show that the new methods have superior properties in several settings with minimal additional computational cost. In particular, for the Gumbel trick to yield computational benefits for discrete graphical models, Gumbel perturbations on all configurations are typically replaced with socalled low-rank perturbations. We show how a subfamily of our new methods adapts to this setting, proving new upper and lower bounds on the log partition function and deriving a family of sequential samplers for the Gibbs distribution. Finally, we balance the discussion by showing how the simpler analytical form of the Gumbel trick enables additional theoretical results.", "sections": [{"heading": "Introduction", "text": "In this work we are concerned with the fundamental problem of sampling from a discrete probability distribution and evaluating its normalizing constant. A probability distribution p on a discrete sample space X is provided in terms of its potential function \u03c6 : X \u2192 [\u2212\u221e, \u221e), corresponding to log-unnormalized probabilities via p(x) = e \u03c6(x) /Z, where the normalizing constant Z is the partition function. In this context, p is the Gibbs distribution on X associated with the potential function \u03c6. The challenges of sampling from such a discrete probability distribution and estimating the partition function are fundamental problems with ubiq-uitous applications in machine learning, classical statistics and statistical physics (see, e.g., Lauritzen, 1996).\nPerturb-and-MAP methods (Papandreou & Yuille, 2010) constitute a class of randomized algorithms for estimating partition functions and sampling from Gibbs distributions, which operate by randomly perturbing the corresponding potential functions and employing maximum a posteriori (MAP) solvers on the perturbed models to find a maximum probability configuration. This MAP problem is NP-hard in general; however, substantial research effort has led to the development of solvers which can efficiently compute or estimate the MAP solution on many problems that occur in practice (e.g., Boykov et al., 2001;Kolmogorov, 2006;Darbon, 2009). Evaluating the partition function is a harder problem, containing for instance #P-hard counting problems. The general aim of perturb-and-MAP methods is to reduce the problem of partition function evaluation, or the problem of sampling from the Gibbs distribution, to repeated instances of the MAP problem (where each instance is on a different random perturbation of the original model).\nThe Gumbel trick (Papandreou & Yuille, 2011) relies on adding Gumbel-distributed noise to each configuration's potential \u03c6(x). We derive a wider family of perturb-and-MAP methods that can be seen as perturbing the model in different ways -in particular using the Weibull and Fr\u00e9chet distributions alongside the Gumbel. We show that the new methods can be implemented with essentially no additional computational cost by simply averaging existing Gumbel MAP perturbations in different spaces, and that they can lead to more accurate estimators of the partition function.\nEvaluating or perturbing each configuration's potential with i.i.d. Gumbel noise can be computationally expensive. One way to mitigate this is to cleverly prune computation in regions where the maximum perturbed potential is unlikely to be found (Maddison et al., 2014;Chen & Ghahramani, 2016). Another approach exploits the product structure of the sample space in discrete graphical models, replacing i.i.d. Gumbel noise with a \"low-rank\" approximation. Hazan & Jaakkola (2012); Hazan et al. (2013) showed that from such an approximation, upper and lower bounds on the partition function and a sequential sampler for the Gibbs distribution can still be recovered. We show that a subfamily of our new methods, consisting of Fr\u00e9chet, Exponential and Weibull tricks, can also be used with low-arXiv:1706.04161v1 [stat.ML] 13 Jun 2017 rank perturbations, and use these tricks to derive new upper and lower bounds on the partition function, and to construct new sequential samplers for the Gibbs distribution.\nOur main contributions are as follows:\n1. A family of tricks that can be implemented by simply averaging Gumbel perturbations in different spaces, and which can lead to more accurate or more sample efficient estimators of Z (Section 2). 2. New upper and lower bounds on the partition function of a discrete graphical model computable using low-rank perturbations, and a corresponding family of sequential samplers for the Gibbs distribution (Section 3). 3. Discussion of advantages of the simpler analytical form of the Gumbel trick including new links between the errors of estimating Z, sampling, and entropy estimation using low-rank Gumbel perturbations (Section 4).", "publication_ref": ["b15", "b21", "b2", "b13", "b6", "b22", "b17", "b4", "b9", "b10"], "figure_ref": [], "table_ref": []}, {"heading": "Background and Related work", "text": "The idea of perturbing the potential function of a discrete graphical model in order to sample from its associated Gibbs distribution was introduced by Papandreou & Yuille (2011), inspired by their previous work on reducing the sampling problem for Gaussian Markov random fields to the problem of finding the mean, using independent local perturbations of each Gaussian factor (Papandreou & Yuille, 2010). Tarlow et al. (2012) extended this perturb-and-MAP approach to sampling, in particular by considering more general structured prediction problems. Hazan & Jaakkola (2012) pointed out that MAP perturbations are useful not only for sampling the Gibbs distribution (considering the argmax of the perturbed model), but also for bounding and approximating the partition function (by considering the value of the max).\nAfterwards, Hazan et al. (2013) derived new lower bounds on the partition function and proposed a new sampler for the Gibbs distribution that samples variables of a discrete graphical model sequentially, using expected values of lowrank MAP perturbations to construct the conditional probabilities. Due to the low-rank approximation, this algorithm has the option to reject a sample. Orabona et al. (2014) and Hazan et al. (2016) subsequently derived measure concentration results for the Gumbel distribution that can be used to control the rejection probability. Maji et al. (2014) derived an uncertainty measure from random MAP perturbations, using it within a Bayesian active learning framework for interactive image boundary annotation.\nPerturb-and-MAP was famously generalized to continuous spaces by Maddison et al. (2014), replacing the Gumbel distribution with a Gumbel process and calling the resulting algorithm A* sampling. Maddison (2016) cast this work into a unified framework together with adaptive rejection sampling techniques, based on the notion of exponential races. This recent view generally brings together perturb-and-MAP and accept-reject samplers, exploiting the connection between the Gumbel distribution and competing exponential clocks that we also discuss in Section 2.1.\nInspired by A* sampling, Kim et al. (2016) proposed an exact sampler for discrete graphical models based on lazilyinstantiated random perturbations, which uses linear programming relaxations to prune the optimization space. Further recent applications of perturb-and-MAP include structured prediction in computer vision (Bertasius et al., 2017) and turning the discrete sampling problem into an optimization task that can be cast as a multi-armed bandit problem (Chen & Ghahramani, 2016), see Section 5.2 below.\nIn addition to perturb-and-MAP methods, we are aware of three other approaches to estimate the partition function of a discrete graphical model via MAP solver calls. The WISH method (weighted-integrals-and-sums-by-hashing, Ermon et al., 2013) relies on repeated MAP inference calls applied to the model after subjecting it to random hash constraints. The Frank-Wolfe method may be applied by iteratively updating marginals using a constrained MAP solver and line search (Belanger et al., 2013;Krishnan et al., 2015). Weller & Jebara (2014a) instead use just one MAP call over a discretized mesh of marginals to approximate the Bethe partition function, which itself is an estimate (which often performs well) of the true partition function.", "publication_ref": ["b22", "b21", "b23", "b9", "b10", "b20", "b11", "b18", "b17", "b16", "b12", "b1", "b4", "b7", "b0", "b14", "b26"], "figure_ref": [], "table_ref": []}, {"heading": "Relatives of the Gumbel Trick", "text": "In this section, we review the Gumbel trick and state the mechanism by which it can be generalized into an entire family of tricks. We show how these tricks can equivalently be viewed as averaging standard Gumbel perturbations in different spaces, instantiate several examples, and compare the various tricks' properties.\nNotation Throughout this paper, let X be a finite sample space of size N := |X |. Letp : X \u2192 [0, \u221e) be an unnormalized mass function over X and let Z := x\u2208Xp (x) be its normalizing partition function. Write p(x) :=p(x)/Z for the normalized version ofp, and \u03c6(x) := lnp(x) for the log-unnormalized probabilities, i.e. the potential function.\nWe write Exp(\u03bb) for the exponential distribution with rate (inverse mean) \u03bb and Gumbel(\u00b5) for the Gumbel distribution with location \u00b5 and scale 1. The latter has mean \u00b5 + c, where c \u2248 0.5772 is the Euler-Mascheroni constant.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "The Gumbel Trick", "text": "Similarly to the connection between the Gumbel trick and the Poisson process established by Maddison (2016), we introduce the Gumbel trick for discrete probability distributions using a simple and elegant construction via competing exponential clocks. Consider N independent clocks, Table 1: New tricks for constructing unbiased estimators of different transformations f (Z) of the partition function.\nTrick g(x) Mean f (Z) Variance of g(T ) Asymptotic var. of\u1e90 Gumbel \u2212 ln x \u2212 c ln Z \u03c0 2 6 \u03c0 2 6 Z 2 Exponential x 1 Z 1 Z 2 Z 2 Weibull \u03b1 x \u03b1 , \u03b1 > 0 Z \u2212\u03b1 \u0393(1 + \u03b1) \u0393(1+2\u03b1)\u2212\u0393(1+\u03b1) 2 Z 2\u03b1 1 \u03b1 2 \u0393(1+2\u03b1) \u0393(1+\u03b1) 2 \u2212 1 Z 2 Fr\u00e9chet \u03b1 x \u03b1 , \u03b1 \u2208 (\u22121, 0) Z \u2212\u03b1 \u0393(1 + \u03b1) \u0393(1+2\u03b1)\u2212\u0393(1+\u03b1) 2 Z 2\u03b1 for \u03b1 > \u2212 1 2 1 \u03b1 2 \u0393(1+2\u03b1) \u0393(1+\u03b1) 2 \u2212 1 Z 2 Pareto e x Z Z\u22121 for Z > 1 a Z (Z\u22121) 2 (Z\u22122) for Z > 2 Z 2 (Z\u22122) 2 Tail t 1 {x>t} e \u2212tZ e \u2212tZ (1 \u2212 e \u2212tZ ) (1\u2212e \u2212tZ ) 2 t 2\nstarted simultaneously, such that the j-th clock rings after a random time T j \u223c Exp(\u03bb j ). Then it is easy to show that (1) the time until some clock rings has Exp( N j=1 \u03bb j ) distribution, and (2) the probability of the j-th clock ringing first is proportional to its rate \u03bb j . These properties are also widely used in survival analysis (Cox & Oakes, 1984).\nConsider N competing exponential clocks {T x } x\u2208X , indexed by elements of X , with respective rates \u03bb x =p(x). Property (1) of competing exponential clocks tells us that\nmin x\u2208X {T x } \u223c Exp(Z).\n(1)\nProperty (2) says that the random variable argmin x T x , taking values in X , is distributed according to p:\nargmin x\u2208X {T x } \u223c p. (2\n)\nThe Gumbel trick is obtained by applying the function g(x) = \u2212 ln x \u2212 c to the equalities in distribution ( 1) and (2). When g is applied to an Exp(\u03bb) random variable, the result follows the Gumbel(\u2212c + ln \u03bb) distribution, which can also be represented as ln \u03bb + \u03b3, where\n\u03b3 \u223c Gumbel(\u2212c). Defining {\u03b3(x)} x\u2208X i.i.d.\n\u223c Gumbel(\u2212c) and noting that g is strictly decreasing, applying the function g to equalities in distribution (1) and (2), we obtain: ) where we have recalled that \u03c6(x) = ln \u03bb x = lnp(x). The distribution Gumbel(\u2212c + ln Z) has mean ln Z, and thus the log partition function can be estimated by averaging samples (Hazan & Jaakkola, 2012).\nmax x\u2208X {\u03c6(x) + \u03b3(x)} \u223c Gumbel(\u2212c + ln Z), (1') argmax x\u2208X {\u03c6(x) + \u03b3(x)} \u223c p, (2'", "publication_ref": ["b16", "b5", "b9"], "figure_ref": [], "table_ref": []}, {"heading": "Constructing New Tricks", "text": "Given the equality in distribution (1), we can treat the problem of estimating the partition function Z as a parameter estimation problem for the exponential distribution. Applying the function g(x) = \u2212 ln x \u2212 c as in the Gumbel trick to obtain a Gumbel(\u2212c + ln Z) random variable, and estimating its mean to obtain an unbiased estimator of ln Z, is just one way of inferring information about Z.\nWe consider applying different functions g to (1); particularly those functions g that transform the exponential distribution to another distribution with known mean. As the original exponential distribution has rate Z, the transformed distribution will have mean f (Z), where f will in general no longer be the logarithm function. Since we often are interested in estimating various transformations f (Z) of Z, this provides us a with a collection of unbiased estimators from which to choose. Moreover, further transforming these estimators yields a collection of (biased) estimators for other transformations of Z, including Z itself. Example 1 (Weibull tricks). For any \u03b1 > 0, applying the function g(x) = x \u03b1 to an Exp(\u03bb) random variable yields a random variable with the Weibull(\u03bb \u2212\u03b1 , \u03b1 \u22121 ) distribution with scale \u03bb \u2212\u03b1 and shape \u03b1 \u22121 , which has mean \u03bb \u2212\u03b1 \u0393(1 + \u03b1) and can be also represented as \u03bb \u2212\u03b1 W , where\nW \u223c Weibull(1, \u03b1 \u22121 ). Defining {W (x)} x\u2208X i.i.d. \u223c Weibull(1, \u03b1 \u22121 )\nand noting that g is increasing, applying g to the equality in distribution (1) gives\nmin x\u2208X {p \u2212\u03b1 W (x)} \u223c Weibull(Z \u2212\u03b1 , \u03b1 \u22121 ).\n(1\")\nEstimating the mean of Weibull(Z \u2212\u03b1 , \u03b1 \u22121 ) yields an unbiased estimator of Z \u2212\u03b1 \u0393(1 + \u03b1). The special case \u03b1 = 1 corresponds to the identity function g(x) = x; we call the resulting trick the Exponential trick.\nTable 1 lists several examples of tricks derived this way.\nAs Example 1 shows, these tricks may not involve additive perturbation of the potential function \u03c6(x); the Weibull tricks multiplicatively perturb exponentiated unnormalized probabilitiesp \u2212\u03b1 with Weibull noise. As models of interest are often specified in terms of potential functions, to be able to reuse existing MAP solvers in a black-box manner with the new tricks, we seek an equivalent formulation in terms of the potential function. The following Proposition shows that by not passing the function g through the minimization in equation ( 1), the new tricks can be equivalently formulated as averaging additive Gumbel perturbations of the potential function in different spaces. Proposition 2 shows that the new tricks can be implemented by solving the same MAP problems max x {\u03c6(x)+\u03b3(x)} as in the Gumbel trick, and then merely passing the solutions through the function x \u2192 g(e \u2212c exp(x)) before averaging them to approximate the expectation.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Comparing Tricks", "text": "", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "ASYMPTOTIC EFFICIENCY", "text": "The Delta method (Casella & Berger, 2002) is a simple technique for assessing the asymptotic variance of estimators that are obtained by a differentiable transformation of an estimator with known variance. The last column in Table 1 lists asymptotic variances of corresponding tricks when unbiased estimators of f (Z) are passed through the function f \u22121 to yield (biased, but consistent and non-negative) estimators of Z itself. It is interesting to examine the constants that multiply Z 2 in some of the obtained asymptotic variance expressions for the different tricks. For example, it can be shown using Gurland's ratio (Gurland, 1956) that this constant is at least 1 for the Weibull and Fr\u00e9chet tricks, which is precisely the value achieved by the Exponential trick (which corresponds to \u03b1 = 1). Moreover, the Gumbel trick constant \u03c0 2 /6 can be shown to be the limit as \u03b1 \u2192 0 of the Weibull and Fr\u00e9chet trick constants. In particular, the constant of the Exponential trick is strictly better than that of the standard Gumbel trick: 1 < \u03c0 2 /6 \u2248 1.65. This motivates us to compare the Gumbel and Exponential tricks in more detail. ming from Fr\u00e9chet (\u2212 1 2 < \u03b1 < 0), Gumbel (\u03b1 = 0) and Weibull tricks (\u03b1 > 0). See Section 2.3.2 for details.", "publication_ref": ["b3", "b8"], "figure_ref": [], "table_ref": []}, {"heading": "MEAN SQUARED ERROR (MSE)", "text": "For estimators Y , their MSE(Y ) = var(Y ) + bias(Y ) 2 is a commonly used comparison metric. When the Gumbel or Exponential tricks are used to estimate either Z or ln Z, the biases, variances, and MSEs of the estimators can be computed analytically using standard methods (Appendix A).\nFor example, the unbiased estimator of ln Z from the Gumbel trick can be turned into a consistent non-negative estimator of Z by exponentiation:\nY = exp( 1 M M m=1 X m ), where X 1 , . . . , X M i.i.d.\n\u223c Gumbel(\u2212c + ln Z) are obtained using equation (1'). The bias and variance of Y can be computed using independence and the moment generating functions of the X m 's, see Appendix A for details.\nPerhaps surprisingly, all estimator properties only depend on the true value of Z and not on the structure of the model (distribution p), since the estimators rely only on i.i.d. samples of a Gumbel(\u2212c + ln Z) random variable. Figure 1 shows the analytically computed estimator variances and MSEs. For estimating Z itself (left), the Exponential trick outperforms the Gumbel trick in terms of MSE for all sample sizes M \u2265 3 (for M \u2208 {1, 2}, both estimators have infinite variance and MSE). The ratio of MSEs quickly approaches \u03c0 2 /6, and in this regime the Exponential trick requires 1 \u2212 6/\u03c0 2 \u2248 39% fewer samples than the Gumbel trick to reach the same MSE. Also, for estimating ln Z, (Figure 1, right), the Exponential trick provides a lower MSE estimator for sample sizes M \u2265 2; only for M = 1 the Gumbel trick provides a better estimator.\nNote that as biases are available analytically, the estimators can be easily debiased (by subtracting their bias). One then obtain estimators with MSEs equal to the variances of the original estimators, shown dashed in Figure 1. The Exponential trick would then always outperform the Gumbel trick when estimating ln Z, even with sample size M = 1.\nFor Weibull tricks with \u03b1 = 1 and Fr\u00e9chet tricks, we estimated the biases and variances of estimators of Z and ln Z by constructing K = 100, 000 estimators in each case and evaluating their bias and variance. Figure 2 shows the results for varying \u03b1 and several sample sizes M . We plot the analytically computed value for the Gumbel trick at \u03b1 = 0, as we observe that the Weibull trick interpolates between the Gumbel trick and the Exponential trick as \u03b1 increases from 0 to 1. We note that the minimum MSE estimator is obtained by choosing a value of \u03b1 that is close to 1, i.e. the Exponential trick. This agrees with the finding from Section 2.3.1 that \u03b1 = 1 is optimal as M \u2192 \u221e.", "publication_ref": [], "figure_ref": ["fig_0", "fig_0", "fig_0", "fig_1"], "table_ref": []}, {"heading": "Bayesian Perspective", "text": "A Bayesian approach exposes two choices when constructing estimators of Z, or of its transformations f (Z):\n1. A choice of prior distribution p 0 (Z), encoding prior beliefs about the value of Z before any observations. 2. A choice of how to summarize the posterior distribution p M (Z|X 1 , . . . , X M ) given M samples.\nTaking the Jeffrey's prior p 0 (Z) \u221d Z \u22121 , an improper prior that it is invariant under reparametrization, observing M samples X 1 , . . . ,\nX M i.i.d.\n\u223c Exp(Z) yields the posterior:\np M (Z|X 1 , . . . , X M ) \u221d Z M \u22121 e \u2212Z M m=1 Xm .\nRecognizing the density of a Gamma(M,\nM m=1 X m ) ran- dom variable, the posterior mean is E[Z|X 1 , . . . , X M ] = M M m=1 X m = 1 M M m=1 X m \u22121 ,\ncoinciding with the Exponential trick estimator of Z.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Low-rank Perturbations", "text": "One way of exploiting perturb-and-MAP to yield computational savings is to replace independent perturbations of each configuration's potential with an approximation. Such approximations are available e.g. in discrete graphical models, where the sampling space X has a product space structure X = X 1 \u00d7 \u2022 \u2022 \u2022 \u00d7 X n , with X i the state space of the i-th variable. Definition 3 ( (Hazan & Jaakkola, 2012)). The sum-unary perturbation MAP value is the random variable\nU := max x\u2208X \u03c6(x) + n i=1 \u03b3 i (x i ) ,\nwhere\n{\u03b3 i (x i ) | x i \u2208 X i , 1 \u2264 i \u2264 n} i.i.d \u223c Gumbel(\u2212c).", "publication_ref": ["b9"], "figure_ref": [], "table_ref": []}, {"heading": "This definition involves |X", "text": "1 |+\u2022 \u2022 \u2022+|X n | i.i.d.\nGumbel random variables, rather than |X |. (With n = 1 this coincides with full-rank perturbations and U \u223c Gumbel(\u2212c+ln Z).)\nFor n > 2 the distribution of U is not available analytically. One can similarly define the pairwise (or higher-order) perturbations, where independent Gumbel noise is added to each pairwise (or higher-order) potential.\nUnary perturbations provide the upper bound ln Z \u2264 E[U ] on the log partition function (Hazan & Jaakkola, 2012), can be used to construct a sequential sampler for the Gibbs distribution (Hazan et al., 2013), and, if the perturbations are scaled down by a factor of n, a lower bound on ln Z can also be recovered (Hazan et al., 2013). In this section we show that a subfamily of tricks introduced in Section 2, consisting of Fr\u00e9chet and Weibull (and Exponential) tricks, is applicable in the low-rank perturbation setting and use them to derive new families of upper and lower bounds on ln Z and sequential samplers for the Gibbs distribution. Please note full proofs are deferred to Appendix B and C.", "publication_ref": ["b9", "b10", "b10"], "figure_ref": [], "table_ref": []}, {"heading": "Upper Bounds on the Partition Function", "text": "The following family of upper bounds on ln Z can be derived from the Fr\u00e9chet and Weibull tricks.\nProposition 4. For any \u03b1 \u2208 (\u22121, 0) \u222a (0, \u221e), the upper bound ln Z \u2264 U(\u03b1) holds with U(\u03b1) := n ln \u0393(1 + \u03b1) \u03b1 + nc \u2212 1 \u03b1 ln E \u03b3 e \u2212\u03b1U .\nProof. (Sketch.) By induction on n, with the induction step provided by our Clamping Lemma (Lemma 7) below.\nTo evaluate these bounds in practice, E[e \u2212\u03b1U ] is estimated using samples of U . Corollary 9 of Hazan et al. (2016) can be used to show that var(e \u2212\u03b1U ) is finite for \u03b1 > \u2212 1 2 \u221a n , and so then the estimation is well-behaved.\nA natural question is how these new bounds relate to the Gumbel trick upper bound ln Z \u2264 E[U ] by Hazan & Jaakkola (2012). The following result aims to answers this: Proposition 5. The limit of U(\u03b1) as \u03b1 \u2192 0 exists and equals U(0) := E[U ], i.e. the Gumbel trick upper bound.\nThe question remains: When is it advantageous to use a value \u03b1 = 0 to obtain a tighter bound on ln Z than the Gumbel trick bound? The next result can provide guidance: Proposition 6. The function U(\u03b1) is differentiable at \u03b1 = 0 and the derivative equals\nd d\u03b1 U(\u03b1) \u03b1=0 = 1 2 n \u03c0 2 6 \u2212 var(U ) .\nWhile the variance of U is generally not tractable, in practice one obtains samples from U to estimate the expectation in U(\u03b1) and these samples can be reused to assess var(U ). Interestingly, var(U ) equals n\u03c0 2 /6 for both the uniform distribution and the distribution concentrated on a single configuration, and in our empirical investigations always var(U ) \u2264 n\u03c0 2 /6. Then the derivative at 0 is non-negative and Fr\u00e9chet tricks provide tighter bounds on ln Z. However, as U(\u03b1) is estimated with samples, the question of estimator variance arises. We investigate the trade-off between tightness of the bound ln Z \u2264 U(\u03b1) and the variance incurred in estimating U(\u03b1) empirically in Section 5.3.", "publication_ref": ["b11", "b9"], "figure_ref": [], "table_ref": []}, {"heading": "Clamping", "text": "Consider the partial sum-unary perturbation MAP values, where the values of the first j \u2212 1 variables have been fixed, and only the rest are perturbed:\nU j (x 1 , . . . , x j\u22121 ) := max xj ,...,xn \uf8f1 \uf8f2 \uf8f3 \u03c6(x) + n i=j \u03b3 i (x i ) \uf8fc \uf8fd \uf8fe .\nThe following lemma involving the U j 's serves three purposes: (I.) it provides the induction step for Proposition 4, (II.) it shows that clamping never hurts partition function estimation with Fr\u00e9chet and Weibull tricks, and (III.) it will be used to show that a sequential sampler constructed in Section 3.3 below is well-defined.\nLemma 7 (Clamping Lemma). For any j \u2208 {1, . . . , n} and (x 1 , . . . , x j\u22121 ) \u2208 X 1 \u00d7 \u2022 \u2022 \u2022 \u00d7 X j\u22121 , the following inequality holds with any \u03b1 \u2208 (\u22121, 0) \u222a (0, \u221e):\nxj \u2208Xj\nE \u03b3 e \u2212(n\u2212j) ln \u0393(1+\u03b1)\u2212\u03b1(n\u2212j)c) e \u2212\u03b1Uj+1 \u22121/\u03b1 \u2264 E \u03b3 e \u2212(n\u2212(j\u22121)) ln \u0393(1+\u03b1)\u2212\u03b1(n\u2212(j\u22121))c) e \u2212\u03b1Uj \u22121/\u03b1\nProof. This follows directly from the Fr\u00e9chet trick (\u03b1 \u2208 (\u22121, 0)) or the Weibull trick (\u03b1 > 0) and representing the Fr\u00e9chet resp. Weibull random variables in terms of Gumbel random variables. See Appendix B.1 for more details.\nCorollary 8. Clamping never hurts ln Z estimation using any of the Fr\u00e9chet or Weibull upper bounds U(\u03b1).\nProof. Applying the function x \u2192 ln(x) to both sides of the Clamping Lemma 7 with j = 1, the right-hand side equals U(\u03b1), while the left-hand side is the estimate of ln Z after clamping variable x 1 .\nThis was shown previously in restricted settings (Hazan et al., 2013;Zhao et al., 2016). Similar results showing that clamping improves partition function estimation have been obtained for the mean field and TRW approximations (Weller & Domke, 2016), and in certain settings for the Bethe approximation (Weller & Jebara, 2014b) and L-FIELD (Zhao et al., 2016).", "publication_ref": ["b10", "b29", "b25", "b27", "b29"], "figure_ref": [], "table_ref": []}, {"heading": "Sequential Sampling", "text": "Hazan et al. ( 2013) derived a sequential sampling procedure for the Gibbs distribution by exploiting the U(0) Gumbel trick upper bound on ln Z. In the same spirit, one can derive sequential sampling procedures from the Fr\u00e9chet and Weibull tricks, leading to the following algorithm.\nAlgorithm 1 Sequential sampler for Gibbs distribution Input: \u03b1 \u2208 (\u22121, 0) \u222a (0, \u221e), potential function \u03c6 on X Output: a sample x from the Gibbs distribution \u221d e \u03c6(x) 1: for j = 1 to n do 2:\nfor x j \u2208 X j do 3:\np j (x j ) \u2190 e \u2212c \u0393(1+\u03b1) 1/\u03b1 E\u03b3 [e \u2212\u03b1U j+1 (x 1 ,...,x j ) ] \u22121/\u03b1 E\u03b3 [e \u2212\u03b1U j (x 1 ,...,x j\u22121 ) ] \u22121/\u03b1 4: p j (reject) \u2190 1 \u2212 xj \u2208Xj p j (x j ) 5:\nx j \u2190 sample according to p j 6: if x j == reject then\n7: RESTART (goto 1)\nThis algorithm is well-defined if p j (reject) \u2265 0 for all j, which can be shown by canceling terms in the Clamping Lemma 7. We discuss correctness in Appendix B.2. As for the Gumbel sequential sampler of Hazan et al. (2013), the expected number of restarts (and hence the running time) only depend on the quality of the upper bound (U(\u03b1) \u2212 ln Z), and not on the ordering of variables.", "publication_ref": ["b10"], "figure_ref": [], "table_ref": []}, {"heading": "Lower Bounds on the Partition Function", "text": "Similarly as in the Gumbel trick case (Hazan et al., 2013), one can derive lower bounds on ln Z by perturbing an arbitrary subset S of variables. Proposition 9. Let X = X 1 \u00d7 \u2022 \u2022 \u2022 X n be a product space and \u03c6 a potential function on X . Let \u03b1 \u2208 (\u22121, 0) \u222a (0, \u221e). For any subset S \u2286 {1, . . . , n} of the variables x 1 , . . . , x n we have ln Z \u2265\nc + ln \u0393(1 + \u03b1) \u03b1 \u2212 1 \u03b1 ln E e \u2212\u03b1 maxx{\u03c6(x)+\u03b3 S (x S )} ,\nwhere x S := {x i : i \u2208 S} and \u03b3 S (x S ) \u223c Gumbel(\u2212c) independently for each setting of x S .\nBy averaging n such lower bounds corresponding to singleton sets S = {i} together, we obtain a lower bound on ln Z that involves the average-unary perturbation MAP value\nL := max x\u2208X \u03c6(x) + 1 n n i=1 \u03b3 i (x i ) .\nCorollary 10. For any \u03b1 \u2208 (\u22121, 0) \u222a (0, \u221e), we have the lower bound ln Z \u2265 L(\u03b1), where\nL(\u03b1) := c + ln \u0393(1 + \u03b1) \u03b1 \u2212 1 n\u03b1 ln E [exp (\u2212n\u03b1L)] .\nAgain, L(0) := E[L] can be defined by continuity, where E[L] \u2264 ln Z is the Gumbel trick lower bound by Hazan et al. (2013).", "publication_ref": ["b10", "b10"], "figure_ref": [], "table_ref": []}, {"heading": "Advantages of the Gumbel Trick", "text": "We have seen how the Gumbel trick can be embedded into a continuous family of tricks, consisting of Fr\u00e9chet, Exponential, and Weibull tricks. We showed that the new tricks can provide more efficient estimators of the partition function in the full-rank perturbation setting (Section 2), and in the low-rank perturbation setting lead to sequential samplers and new bounds on ln Z, which can be also more efficient, as we investigate in Section 5.3. To balance the discussion of merits of different tricks, in this section we briefly highlight advantages of the Gumbel trick that stem from its simpler analytical form.\nFirst, by consulting Table 1 we see that the function g(x) = \u2212 ln x \u2212 c has the property that the variance of the resulting estimator (of ln Z) does not depend on the value of Z; the function g is a variance stabilizing transformation for the Exponential distribution.\nSecond, exploiting the fact that the logarithm function leads to additive perturbations, Maji et al. (2014) showed that the entropy of x * , the configuration with maximum potential after sum-unary perturbation in the sense of Definition 3, can be bounded as\nH(x * ) \u2264 B(p) := n i=1 E \u03b3i [\u03b3 i (x * i )]\n. We extend this result to show how the errors of bounding ln Z, sampling, and entropy estimation are related: Proposition 11. Writing p for the Gibbs distribution and B(p\n) := E \u03b3i [\u03b3 i (x * i )]\nfor the entropy bound, we have\n(U(0) \u2212 ln Z) error in ln Z bound + KL(x * p) sampling error = B(p) \u2212 H(x * ) error in entropy estimation .\nThird, the additive character of the Gumbel perturbations can also be used to derive a new result relating the error of the lower bound L(0) and of sampling x * * as the configuration achieving the maximum average-unary perturbation value L, instead of sampling from the Gibbs distribution p: Proposition 12. Writing p for the Gibbs distribution,\nln Z \u2212 L(0) error in ln Z bound \u2265 KL(x * * p) sampling error \u2265 0.\nRemark. While we knew from Hazan et al. (2013) that ln Z \u2212 L(0) \u2265 0, this is a stronger result showing that the size of the gap is an upper bound on the KL divergence between the approximate sampling distribution of x * * and the Gibbs distribution p.\nProofs of the new results appear in Appendix B.3 and C.2.\nFourth, viewed as a function of the Gumbel perturbations \u03b3, the random variable U has a bounded gradient, allowing earlier measure concentration results (Orabona et al., 2014;Hazan et al., 2016). Proving similar measure concentration results for the expectations E[e \u2212\u03b1U ] appearing in U(\u03b1) for \u03b1 = 0 may be more challenging.", "publication_ref": ["b18", "b10", "b20", "b11"], "figure_ref": [], "table_ref": []}, {"heading": "Experiments", "text": "We conducted experiments with the following aims:\n1. To show that the higher efficiency of the Exponential trick in the full-rank perturbation setting is useful in practice, we compared it to the Gumbel trick in A* sampling (Maddison et al., 2014) (Section 5.1) and in the large-scale discrete sampling setting of Chen & Ghahramani (2016) (Section 5.2). 2. To show that non-zero values of \u03b1 can lead to better estimators of ln Z in the low-rank perturbation setting as well, we compare the Fr\u00e9chet and Weibull trick bounds U(\u03b1) to the Gumbel trick bound U(0) on a common discrete graphical model with different coupling strengths; see Section 5.3.", "publication_ref": ["b17"], "figure_ref": [], "table_ref": []}, {"heading": "A* Sampling", "text": "A* sampling (Maddison et al., 2014) is a sampling algorithm for continuous distributions that perturbs the logunnormalized density \u03c6 with a continuous generalization of the Gumbel trick, called the Gumbel process, and uses a variant of A* search to find the location of the maximum of the perturbed \u03c6. Returning the location yields an exact sample from the original distribution, as in the discrete Gumbel trick. Moreover, the corresponding maximum value also has the Gumbel(\u2212c + ln Z) distribution (Maddison et al., 2014). Our analysis in Section 2.3 tells us that the Exponential trick yields an estimator with lower MSE than the Gumbel trick; we briefly verified this on the Robust Bayesian Regression experiment of Maddison et al. (2014). We constructed estimators of ln Z from the Gumbel and Exponential tricks (debiased version, see Section 2.3.2), and assessed their variances by constructing each estimator K = 1000 times and looking at the sample variance. Figure 3a shows that the Exponential trick requires up to 40% fewer samples to reach a given MSE.", "publication_ref": ["b17", "b17", "b17"], "figure_ref": ["fig_2"], "table_ref": []}, {"heading": "Scalable Partition Function Estimation", "text": "Chen & Ghahramani (2016) considered sampling from a discrete distribution of the form p(x) \u221d f 0 (x) S s=1 f s (x) when the number of factors S is large relative to the sample space size |X |. Computing i.i.d. Gumbel perturbations \u03b3(x) for each x \u2208 X is then relatively cheap compared to evaluating all potentials \u03c6(x) = f 0 (x) + S s=1 ln f s (x). Chen & Ghahramani (2016) observed that each (perturbed) potential can be estimated by subsampling the factors, and potentials that appear unlikely to yield the MAP value can be pruned off from the search early on. The authors formalized the problem as a Multi-armed bandit problem with a finite reward population and derived approximate algorithms for efficiently finding the maximum perturbed potential with a probabilistic guarantee. Gumbel and Exponential trick estimators of ln Z, using samples from A * sampling (see Section 5.1) on a Robust Bayesian Regression task. The Exponential trick is more efficient, requiring up to 40% fewer samples to reach a given MSE. (b) MSE of ln Z estimators for different values of \u03b1, using M = 100 samples from the approximate MAP algorithm discussed in Section 5.2, with different error bounds \u03b4. For small \u03b4, the Exponential trick is close to optimal, matching the analysis of Section 2.3.2. For larger \u03b4, the Weibull trick interpolation between the Gumbel and Exponential tricks can provide an estimator with lower MSE.\nWhile Chen & Ghahramani (2016) considered sampling, by modifying their procedure to return the value of the maximum perturbed potential rather than the argmax (cf equations ( 1) and ( 2)), we can estimate the partition function instead. However, the approximate algorithm only guarantees to find the MAP configuration with a probability 1 \u2212 \u03b4. Figure 3b shows the results of running the Racing-Normal algorithm of Chen & Ghahramani (2016) on the synthetic dataset considered by the authors with the \"very hard\" noise setting \u03c3 = 0.1. For low error bounds \u03b4 the Exponential trick remained close to optimal, but for a larger error bound the Weibull trick interpolation between the Gumbel and Exponential tricks proved useful to provide an estimator with lower MSE.", "publication_ref": ["b4"], "figure_ref": ["fig_2"], "table_ref": []}, {"heading": "Low-rank Perturbation Bounds on ln Z", "text": "Hazan & Jaakkola (2012) evaluated tightness of the Gumbel trick upper bound U(0) \u2265 ln Z on 10 \u00d7 10 binary spin glass models. We show one can obtain more accurate estimates of ln Z on such models by choosing \u03b1 = 0. To account for the fact that in practice an expectation in U(\u03b1) is replaced with a sample average, we treat U(\u03b1) as an estimator of ln Z with asymptotic bias equal to the bound gap (U(\u03b1) \u2212 ln Z), and estimate its MSE.\nFigure 4 shows the MSEs of U(\u03b1) as estimators of ln Z on 10 \u00d7 10 (n = 100) binary pairwise grid models with unary potentials sampled uniformly from [\u22121, 1] and pairwise potentials from [0, C] (attractive models) or from [\u2212C, C] (mixed models), for varying coupling strengths C. We replaced the expectations in U (\u03b1)'s with sample averages of size M = 100, using libDAI (Mooij, 2010) to solve the MAP problems yielding these samples. We constructed each estimator 1000 times to assess its variance. 3). We also show the percentage of samples saved by using the best \u03b1 in place of the Gumbel trick estimator U(0), assuming the asymptotic regime.\nFor this we only considered \u03b1 > \u22121/(2 \u221a n) = \u22120.05, where variance is provably finite, see Section 3.1. The MAP problems were solved using the exact junction tree algorithm (JCT, left and right), or approximate belief propagation (BP, middle). In all cases, when coupling is very low, \u03b1 close to 0 is optimal. This also holds for BP when coupling is high. In other regimes, upper bounds for the Fr\u00e9chet trick, i.e. \u03b1 < 0, provide more accurate estimators.", "publication_ref": ["b19"], "figure_ref": ["fig_3"], "table_ref": []}, {"heading": "Discussion", "text": "By casting partition function evaluation as a parameter estimation problem for the exponential distribution, we derived a family of methods of which the Gumbel trick is a special case. These methods can be equivalently seen as ( 1) perturbing models using different distributions, or as (2) averaging standard Gumbel perturbations in different spaces, allowing implementations with little additional cost.\nWe showed that in the full-rank perturbation setting, the new Exponential trick provides an estimator with lower MSE, or instead allows using up to 40% fewer samples than the Gumbel trick estimator to reach the same MSE.\nIn the low-rank perturbation setting, we used our Fr\u00e9chet, Exponential and Weibull tricks to derive new bounds on ln Z and sequential samplers for the Gibbs distribution, and showed that these can also behave better than the corresponding Gumbel trick results. However, the optimal trick to use (as specified by \u03b1) depends on the model, sample size, and MAP solver used (if approximate). Since in practice the dominant computational cost is carried by solving repeated instances of the MAP problem, one can try and assess different values of \u03b1 on the problem at hand. That said, we believe that investigating when different tricks yield better results is an interesting avenue for future work.\nFinally, we balanced the discussion by pointing out that the Gumbel trick has a simpler analytical form which can be exploited to derive more interesting theoretical statements in the low-rank perturbation setting. Beyond existing results, we derived new connections between errors of different procedures using low-rank Gumbel perturbations.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "APPENDIX: Lost Relatives of the Gumbel Trick", "text": "Here we provide proofs for the results stated in the main text, together with additional supporting lemmas required for these proofs.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A. Comparison of Gumbel and Exponential tricks", "text": "In Section 2.3.1 we analyzed the asymptotic efficiency of different estimators of Z by measuring their asymptotic variance. (As all our estimators in the full-rank perturbation setting are consistent, their bias is 0 in the limit of infinite data, and so this asymptotic variance equals the asymptotic MSE.) In the non-asymptotic regime, where an estimator\u1e90 is constructed from a finite set of M samples, we can analyze both the variance var(\u1e90) and the bias (E[\u1e90] \u2212 Z) of the estimator. While in most cases these cannot be obtained analytically and there we can resort to an empirical evaluation, for the estimators stemming from the Gumbel and Exponential tricks analytical treatment turns out to be possible using standard methods.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A.1. Estimating Z", "text": "Gumbel trick The Gumbel trick yields an unbiased estimator for ln Z, and we can turn it into a consistent estimator of Z by exponentiating it:\nZ := exp 1 M M m=1 X m where X 1 , . . . , X M iid \u223c Gumbel(\u2212c + ln Z).\nRecalling that the moment generating function of a Gumbel(\u00b5) distribution is G(t) = \u0393(1 \u2212 t)e \u00b5t , we can obtain by using independence of the samples:\nE[\u1e90] = M m=1 E[e Xm/M ] = \u0393(1 \u2212 1/M )e (ln Z\u2212c)/M M = \u0393(1 \u2212 1/M ) M e \u2212c Z, E[\u1e90 2 ] = M m=1 E[e 2Xm/M ] = \u0393(1 \u2212 2/M )e 2(ln Z\u2212c)/M M = \u0393(1 \u2212 2/M ) M e \u22122c Z 2 .\nTherefore the squared bias, variance and MSE of the estimator\u1e90 are, respectively:\nbias(\u1e90) 2 = (E[\u1e90] \u2212 Z) 2 = Z 2 \u0393(1 \u2212 1/M ) M e \u2212c \u2212 1 , var(\u1e90) = E[\u1e90 2 ] \u2212 E[\u1e90] 2 = Z 2 \u0393(1 \u2212 2/M ) M e \u22122c \u2212 \u0393(1 \u2212 1/M ) 2M e \u22122c , MSE(\u1e90) = bias(\u1e90) 2 + var(\u1e90) = Z 2 \u0393(1 \u2212 2/M ) M e \u22122c \u2212 2\u0393(1 \u2212 1/M ) M e \u2212c + 1 .\nThese formulas hold for M > 2 where the moment generating functions are defined. For M = 1 the estimator has infinite bias (and infinite variance), and for M = 2 it has infinite variance. Figure 1 (left) shows the functional dependence of MSE(\u1e90) on the number of samples M \u2265 3, in units of Z 2 .", "publication_ref": [], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "Exponential trick", "text": "The Exponential trick yields an unbiased estimator of 1/Z, and we can turn it into a consistent estimator of Z by inverting it:\nZ := 1 M M m=1 X m \u22121 where X 1 , . . . , X M iid \u223c Exp(Z).\nAs X 1 , . . . , X M are independent and exponentially distributed with identical rates Z, their sum follows the Gamma distribution with shape M and rate Z. Therefore the estimator\u1e90 can be written as\u1e90 = M Y , where Y \u223c InvGamma(M, Z).\nRecalling the mean and variance of the Inverse-Gamma distribution, we obtain:\nbias(\u1e90) 2 = (E[\u1e90] \u2212 Z) 2 = Z 2 M M \u2212 1 \u2212 1 = Z 2 1 M \u2212 1 , var(\u1e90) = Z 2 M 2 1 (M \u2212 1) 2 (M \u2212 2) , MSE(\u1e90) = bias(\u1e90) 2 + var(\u1e90) = Z 2 M \u2212 2 + M 2 (M \u2212 1) 2 (M \u2212 2) = Z 2 M + 2 (M \u2212 1)(M \u2212 2)\n.\nAgain these formulas hold for M > 2 where the relevant expectations are defined: for M = 1 the estimator has infinite bias, and for M \u2208 {1, 2} it has infinite variance. Figure 1 (left) shows the functional dependence of MSE(\u1e90) on the number of samples M \u2265 3, in units of Z 2 . By inspecting the curves we observe that the Gumbel trick estimator requires roughly 45% more samples to yield the same MSE as the Exponential trick estimator.", "publication_ref": [], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "A.2. Estimating ln Z", "text": "A similar analysis can be performed for estimating ln Z rather than Z. In that case the Gumbel trick estimator of ln Z is unbiased and has variance (and thus MSE) equal to 1 M \u03c0 2\n6 . On the other hand, the Exponential trick estimator is\nln Z = \u2212 ln 1 M M m=1 X m where X 1 , . . . , X M iid \u223c Exp(Z). Again M m=1 X m \u223c Gamma(M, Z)\nand by reference to properties of the Gamma distribution,\nbias( ln Z) 2 = (E[\u1e90] \u2212 Z) 2 = (ln M \u2212 (\u03c8(M ) \u2212 ln Z) \u2212 ln Z) 2 = (ln M \u2212 \u03c8(M )) 2 , var( ln Z) = \u03c8 1 (M ), MSE( ln Z) = bias( ln Z) 2 + var( ln Z) = (ln M \u2212 \u03c8(M )) 2 + \u03c8 1 (M ),\nwhere \u03c8(\u2022) is the digamma function and \u03c8 1 (\u2022) is the trigamma function. Note that the estimator can be debiased by subtracting its bias (ln M \u2212 \u03c8(M )). Figure 1 (right) compares the MSE of the Gumbel and Exponential trick estimators of ln Z. We observe that the Gumbel trick estimator performs better only for M = 1, and even in that case the Exponential trick estimator is better when debiased.", "publication_ref": [], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "B. Sum-unary perturbations", "text": "Recall that sum-unary perturbations refer to the setting where each variable's unary potentials are perturbed with Gumbel noise, and the perturbed potential of a configuration sums the perturbations from all variables (see Definition 3 in the main text). Using sum-unary perturbations we can derive a family U(\u03b1) of upper bounds on the log partition function (Proposition 4) and construct sequential samplers for the Gibbs distribution (Algorithm 1). Here we provide proofs for the related results stated in Sections 3.1 and 3.2.\nNotation We will write pow \u03b2 x for x \u03b2 , where x, \u03b2 \u2208 R, when we find this increases clarity of our exposition.\nLemma 13 (Weibull and Fr\u00e9chet tricks). For any finite set Y and any function h, we have\npow \u2212\u03b1 y\u2208Y pow \u22121/\u03b1 h(y) = E W min y h(y) W (y) \u0393(1 + \u03b1)\nwhere {W (y)} y\u2208Y\ni.i.d. \u223c Weibull(1, \u03b1 \u22121 ) for \u03b1 \u2208 (0, \u221e), pow \u2212\u03b1 y\u2208Y pow \u22121/\u03b1 h(y) = E F max y h(y) F (y) \u0393(1 + \u03b1)\nwhere {F (y)} y\u2208Y\ni.i.d. \u223c Fr\u00e9chet(1, \u2212\u03b1 \u22121 ) for \u03b1 \u2208 (\u22121, 0).\nProof. This follows from setting up competing exponential clocks with rates \u03bb y = h(y) \u22121/\u03b1 and then applying the function g(x) = x \u03b1 as in Example 1 for the case of the Weibull trick. The case of the Fr\u00e9chet trick is similar, except that g is strictly decreasing for \u03b1 \u2208 (\u22121, 0), hence the maximization in place of the minimization.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "B.1. Upper bounds on the partition function", "text": "Proposition 4. For any \u03b1 \u2208 (\u22121, 0) \u222a (0, \u221e), the upper bound ln Z \u2264 U(\u03b1) holds with\nU(\u03b1) := n ln \u0393(1 + \u03b1) \u03b1 + nc \u2212 1 \u03b1 ln E \u03b3 e \u2212\u03b1U .\nProof. We show the result for \u03b1 \u2208 (0, \u221e) using the Weibull trick; the case of \u03b1 \u2208 (\u22121, 0) can be proved similarly using the Fr\u00e9chet trick. The idea is to prove by induction on n that Z \u2212\u03b1 \u2265 e \u2212\u03b1U (\u03b1) , so that the claimed result follows by applying the monotonically decreasing function x \u2192 \u2212 ln(x)/\u03b1.\nThe base case n = 1 is the Clamping Lemma 7 below with j = n = 1. Now assume the claim for n \u2212 1 \u2265 1 and for x n \u2208 X n define\nU n\u22121 (\u03b1, x 1 ) := (n \u2212 1) ln \u0393(1 + \u03b1) \u03b1 + (n \u2212 1)c \u2212 1 \u03b1 ln E \u03b3 exp \u2212\u03b1 max x2,...,xn \u03c6(x) + n i=2 \u03b3 i (x i ) .\nWith this definition, the Clamping Lemma with j = 1 states that x1 pow \u22121/\u03b1 e \u2212\u03b1Un\u22121(\u03b1,x1) \u2264 pow \u22121/\u03b1 e \u2212\u03b1U (\u03b1) , so:\nZ \u2212\u03b1 \u2265 pow \u2212\u03b1 x1\u2208X1 pow \u22121/\u03b1 e \u2212\u03b1Un\u22121(\u03b1,x1) [inductive hypothesis] \u2265 pow \u2212\u03b1 pow \u22121/\u03b1 e \u2212\u03b1U (\u03b1) [Clamping Lemma] = e \u2212\u03b1U (\u03b1) ,\nas required to complete the inductive step.\nProposition 5. The limit of U(\u03b1) as \u03b1 \u2192 0 exists and equals U(0) := E[U ], i.e. the Gumbel trick upper bound.\nProof. Recall that U(\u03b1) = n ln \u0393(1+\u03b1)\n\u03b1 + nc \u2212 1 \u03b1 ln E e \u2212\u03b1U .\nThe first term tends to n\u03c8(1) = \u2212cn as \u03b1 \u2192 0 by L'H\u00f4pital's rule, where \u03c8 is the digamma function. The second term is constant in \u03b1. In the last term, E e \u2212\u03b1U is the moment generating function of U evaluated at \u2212\u03b1, and as such its derivative at \u03b1 = 0 exists and equals the negative of the mean of U . Hence by L'H\u00f4pital's rule,\n\u2212 lim \u03b1\u21920 1 \u03b1 ln E e \u2212\u03b1U = \u2212 lim \u03b1\u21920 \u2212E[U ] E [e \u2212\u03b1U ] = E[U ] = U(0).\nThe claimed result then follows by the Algebra of Limits, as the contributions of the first two terms cancel.\nProposition 6. The function U(\u03b1) is differentiable at \u03b1 = 0 and the derivative equals\nd d\u03b1 U(\u03b1) \u03b1=0 = n \u03c0 2 12 \u2212 var(U ) 2 .\nProof. First we show that U(\u03b1) is differentiable on (\u22121, 0) \u222a (0, \u221e), and that the limit of the derivative as \u03b1 \u2192 0 exists and equals n\u03c0 2 /12 \u2212 var(U )/2.\nThe first term of U(\u03b1) is n ln \u0393(1+\u03b1) \u03b1 , which is differentiable for \u03b1 \u2208 (\u22121, 0) \u222a (0, \u221e) by the Quotient Rule, and its derivative equals\nd d\u03b1 n ln \u0393(1 + \u03b1) \u03b1 = n \u03c8(1 + \u03b1)\u03b1 \u2212 ln \u0393(1 + \u03b1) \u03b1 2 ,\nwhere \u03c8 is the digamma function (logarithmic derivative of the gamma function). Applying L'H\u00f4pital's rule we note that\nlim \u03b1\u21920 d d\u03b1 n ln \u0393(1 + \u03b1) \u03b1 = n lim \u03b1\u21920 \u03c8(1 + \u03b1) + \u03b1\u03c8 (1) (1 + \u03b1) \u2212 \u03c8(1 + \u03b1) 2\u03b1 = n \u03c8 (1) (1) 2 = n \u03b6(2) 2 = n \u03c0 2 12 ,\nwhere \u03c8 (1) is the trigamma function (derivative of the digamma function), whose value at 1 is known to be \u03b6(2) = \u03c0 2 /6, the Riemann zeta function evaluated at 2.\nThe second term of U(\u03b1) is constant in \u03b1. The last term can be written as K(\u2212\u03b1)/(\u2212\u03b1), where K is the cumulant generating function (logarithm of the moment generating function) of the random variable U . The cumulant generating function is differentiable, and by the Quotient rule\nd d\u03b1 K(\u2212\u03b1) \u2212\u03b1 = \u2212 \u03b1K (\u2212\u03b1) \u2212 K(\u2212\u03b1) \u03b1 2 .\nApplying L'H\u00f4pital's rule we note that\nlim \u03b1\u21920 d d\u03b1 K(\u2212\u03b1) \u2212\u03b1 = lim \u03b1\u21920 K (\u2212\u03b1) + \u03b1K (\u2212\u03b1) \u2212 K (\u2212\u03b1) 2\u03b1 = K (0) 2 = var(U ) 2 ,\nwhere we have used that the second derivative of the cumulant generating function is the variance.\nAs U(\u03b1) is continuous at 0 by construction, the above implies that it has left and right derivatives at 0. As the values of these derivatives coincide, the function is differentiable at 0 and the derivative has the stated value.\nRecall that for a variable index j \u2208 {1, . . . , n} we also defined partial sum-unary perturbations\nU j (x 1 , . . . , x j\u22121 ) := max xj ,...,xn \uf8f1 \uf8f2 \uf8f3 \u03c6(x) + n i=j \u03b3 i (x i ) \uf8fc \uf8fd \uf8fe ,\nwhich fix the variables x 1 , . . . , x j\u22121 and perturb the remaining ones.\nLemma 7 (Clamping Lemma). For any j \u2208 {1, . . . , n} and any fixed partial variable assignment (x 1 , . . . , x j\u22121 ) \u2208 X 1 \u00d7 \u2022 \u2022 \u2022 \u00d7 X j\u22121 , the following inequality holds with any trick parameter \u03b1 \u2208 (\u22121, 0) \u222a (0, \u221e):\nxj \u2208Xj E \u03b3 e \u2212(n\u2212j) ln \u0393(1+\u03b1)\u2212\u03b1(n\u2212j)c) e \u2212\u03b1Uj+1(x1,...,xj ) \u22121/\u03b1 \u2264 E \u03b3 e \u2212(n\u2212(j\u22121)) ln \u0393(1+\u03b1)\u2212\u03b1(n\u2212(j\u22121))c) e \u2212\u03b1Uj (x1,...,xj\u22121) \u22121/\u03b1 .\nProof. For \u03b1 > 0, from the Weibull trick (Lemma 13), using independence of the perturbations and Jensen's inequality,\npow \u2212\u03b1 xj \u2208Xj pow \u22121/\u03b1 E W \uf8ee \uf8f0 min xj+1,...,xnp (x) \u2212\u03b1 n i=j+1 W (x i ) \u0393(1 + \u03b1) \uf8f9 \uf8fb = E W \uf8ee \uf8f0 min xj \u2208Xj \uf8f1 \uf8f2 \uf8f3 E W \uf8ee \uf8f0 min xj+1,...,xnp (x) \u2212\u03b1 n i=j+1 W (x i ) \u0393(1 + \u03b1) \uf8f9 \uf8fb W (x j ) \u0393(1 + \u03b1) \uf8fc \uf8fd \uf8fe \uf8f9 \uf8fb \u2264 E W \uf8ee \uf8f0 min xj ,...,xnp (x) \u2212\u03b1 n i=j W (x i ) \u0393(1 + \u03b1) \uf8f9 \uf8fb\nRepresenting the Weibull random variables in terms of Gumbel random variables using the transformation W = e \u2212(\u03b3+c)\u03b1 , where \u03b3 \u223c Gumbel(\u2212c), and manipulating the obtained expressions yields the claimed result.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "B.2. Sequential samplers for the Gibbs distribution", "text": "The family of sequential samplers for the Gibbs distribution presented in the main text as Algorithm 1 has the same overall structure as the sequential sampler derived by Hazan et al. (2013) from the Gumbel trick upper bound U(0), and hence correctness can be argued similarly. Conditioned on accepting the sample, the probability that x = (x 1 , . . . , x n ) is returned is\nn i=1 p i (x i ) = n i=1 e \u2212c \u0393(1 + \u03b1) 1/\u03b1 E \u03b3 e \u2212\u03b1Ui+1(x1,...,xi) \u22121/\u03b1 E \u03b3 e \u2212\u03b1Ui(x1,...,xi\u22121) \u22121/\u03b1 = e \u2212nc \u0393(1 + \u03b1) n/\u03b1 e \u2212\u03b1\u03c6(x1,...,xn) \u22121/\u03b1 E[e \u2212\u03b1U ] \u22121/\u03b1 \u221d p(x),\nas required to show that the produced samples follow the Gibbs distribution p. Note, however, that in practice one introduces an approximation by replacing expectations with sample averages.", "publication_ref": ["b10"], "figure_ref": [], "table_ref": []}, {"heading": "B.3. Relationship between errors of sum-unary Gumbel perturbations", "text": "We write x * for the (random) MAP configuration after sum-unary perturbation of the potential function, i.e.,\nx * := argmax x\u2208X \u03c6(x) + n i=1 \u03b3 i (x i ) .\nLet q sum (x) := P[x = x * ] be the probability mass function of x * .\nThe following results links together the errors acquired when using summed unary perturbations to upper bound the log partition function ln Z \u2264 U(0) using the Gumbel trick upper bound by Hazan & Jaakkola (2012), to approximately sample from the Gibbs distribution by using q sum instead, and to upper bound the entropy of the approximate distribution q sum using the bound due to Maji et al. (2014). Proposition 11. Writing p for the Gibbs distribution, we have\n(U(0) \u2212 ln Z) error in ln Z bound + KL(q sum p) sampling error = E \u03b3i [\u03b3 i (x * i )] \u2212 H(q sum )\nerror in entropy estimation .\nProof. By conditioning on the maximizing configuration x * , we can rewrite the Gumbel trick upper bound U(0) as follows:\nU(0) = E \u03b3 max x\u2208X \u03b8(x) + n i=1 \u03b3 i (x i ) = x\u2208X q sum (x) \u03b8(x) + E \u03b3 n i=1 \u03b3 i (x i ) | x = x * = x\u2208X q sum (x)\u03b8(x) + n i=1 E \u03b3i [\u03b3 i (x * i )] .\nAt the same time, the KL divergence between q sum and the Gibbs distribution p generally expands as\nKL(q sum p) = \u2212H(q sum ) \u2212 x\u2208X q sum (x) ln exp (\u03b8(x)) x\u2208X exp (\u03b8(x)) = \u2212H(q sum ) \u2212 x\u2208X q sum (x)\u03b8(x) + ln Z.\nAdding the two equations together and rearranging yields the claimed result.", "publication_ref": ["b9", "b18"], "figure_ref": [], "table_ref": []}, {"heading": "C. Averaged unary perturbations C.1. Lower bounds on the partition function", "text": "In the main text we stated the following two lower bounds on the log partition function ln Z. Proposition 9. Let \u03b1 \u2208 (\u22121, 0) \u222a (0, \u221e). For any subset S \u2286 {1, . . . , n} of the variables x 1 , . . . , x n we have ln Z \u2265\nc + ln \u0393(1 + \u03b1) \u03b1 \u2212 1 \u03b1 ln E e \u2212\u03b1 maxx{\u03c6(x)+\u03b3 S (x S )} ,\nwhere x S := {x i : i \u2208 S} and \u03b3 S (x S ) \u223c Gumbel(\u2212c) independently for each setting of x S .\nProof. LetS := {1, . . . , n} \\ S. First we handle the case \u03b1 > 0. We have trivially that xS ) .\npow \u2212\u03b1 Z = pow \u2212\u03b1 x S xS e \u03c6(x S ,xS ) \u2264 pow \u2212\u03b1 x S max xS e \u03c6(x S ,\nThe Weibull trick tells us that pow \u2212\u03b1 y pow \u22121/\u03b1 h(y\n) = E W [min y h(y) \u0393(1+\u03b1) W (y)]\nwhere {W (y)} y iid \u223c Weibull(1, \u03b1 \u22121 ). Applying this to the summation over x S on the right-hand side of the above inequality, we obtain\npow \u2212\u03b1 Z \u2264 E W min x S pow \u2212\u03b1 max xS e \u03c6(x S ,xS ) \u0393(1 + \u03b1) W (x S ) .\nExpressing the Weibull random variable W (x S ) as e \u2212\u03b1(\u03b3 S (x S )+c) with \u03b3 S (x S ) \u223c Gumbel(\u2212c), the right-hand side can be simplified as follows:\npow \u2212\u03b1 Z \u2264 1 \u0393(1 + \u03b1) E \u03b3 pow \u2212\u03b1 max x S max xS e \u03c6(x S ,xS ) e \u03b3 S (x S )+c = e \u2212\u03b1c \u0393(1 + \u03b1) E \u03b3 exp \u2212\u03b1 max x {\u03c6(x) + \u03b3 S (x S )} .\nTaking the logarithm and dividing by \u2212\u03b1 < 0 yields the claimed result for positive \u03b1. For \u03b1 \u2208 (\u22121, 0) we proceed similarly, obtaining that\npow \u2212\u03b1 Z \u2265 pow \u2212\u03b1 x S max xS e \u03c6(x S ,xS ) = E F min x S pow \u2212\u03b1 max xS e \u03c6(x S ,xS ) \u0393(1 + \u03b1) F (x S ) ,\nwhere F (x(S)) \u223c Fr\u00e9chet(1, \u2212\u03b1 \u22121 ). Representing these random variables as e \u2212\u03b1(\u03b3 S (x S )+c) with \u03b3 S (x S ) \u223c Gumbel(\u2212c), simplifying as in the previous case and finally dividing the inequality by \u2212\u03b1 > 0 yields the claimed result for \u03b1 \u2208 (\u22121, 0).\nCorollary 10. For any \u03b1 \u2208 (\u22121, 0) \u222a (0, \u221e), we have the lower bound ln Z \u2265 L(\u03b1), where\nL(\u03b1) := c + ln \u0393(1 + \u03b1) \u03b1 \u2212 1 n\u03b1 ln E [exp (\u2212n\u03b1L)] ,\nProof. Applying Proposition 9 n times with all singleton sets S = {i} and averaging the obtained lower bounds yields\nln Z \u2265 c + ln \u0393(1 + \u03b1) \u03b1 \u2212 1 n n i=1 1 \u03b1 ln E exp \u2212\u03b1 max x {\u03c6(x) + \u03b3 i (x i )} = c + ln \u0393(1 + \u03b1) \u03b1 \u2212 1 n\u03b1 ln E exp \u2212 n i=1 \u03b1 max x {\u03c6(x) + \u03b3 i (x i )} = c + ln \u0393(1 + \u03b1) \u03b1 \u2212 1 n\u03b1 ln E exp \u2212n\u03b1 1 n n i=1 max x {\u03c6(x) + \u03b3 i (x i )} ,\nwhere the first equality used the fact that the perturbations \u03b3 i (x i ) are mutually independent for different indices i to replace the product of expectations with the expectation of the product. The claimed result follows by applying Jensen's inequality to swap the summation and the convex max x function, noting that the inequality works out the right way for both positive and negative \u03b1.\nJensen's inequality can be used to relate the general lower bound L(\u03b1) to the Gumbel trick lower bound L(0), showing that the former cannot be arbitrarily worse than the latter: Proposition 14. For all \u03b1 \u2208 (\u22121, 0), the lower bound L(\u03b1) on ln Z satisfies\nL(\u03b1) \u2265 L(0) + ln \u0393(1 + \u03b1) \u03b1 + c\nProof. Apply Jensen's inequality with the convex function x \u2192 e \u2212n\u03b1 to the last term in the definition of L(\u03b1), noting that the inequality works out the stated way for \u03b1 < 0.\nNote that ln \u0393(1+\u03b1) \u03b1 + c \u2264 0 for \u03b1 \u2208 (\u22121, 0) so this result does not imply that the Fr\u00e9chet lower bounds are tighter than the Gumbel lower bound L(0); it merely says that they cannot be arbitrarily worse than L(0).", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "C.2. Relationship between errors of averaged-unary Gumbel perturbations", "text": "In this section we write x * for the (random) MAP configuration after average-unary perturbation of the potential function, i.e.,\nx * := argmax x\u2208X \u03c6(x) + 1 n n i=1 \u03b3 i (x i ) .\nwhere\n{\u03b3 i (x i ) | x i \u2208 X i , 1 \u2264 i \u2264 n} i.i.d.\n\u223c Gumbel(\u2212c). Let q avg (x) := P[x = x * ] be the probability mass function of x * . The Gumbel trick lower bound on the log partition function ln Z due to Hazan et al. (2013) is:\nln Z \u2265 L(0) = L \u03c6 (0) := E \u03b3 min x\u2208X \u03c6(x) + 1 n n i=1 \u03b3 i (x i ) . (3\n)\nWe show that the gap of this Gumbel trick lower bound on ln Z upper bounds the KL divergence between the approximate distribution q avg and the Gibbs distribution p. To this end, we first need an entropy bound for q avg analogous to Theorem 1 of (Maji et al., 2014). Theorem 15. The entropy of q avg can be lower bounded using expected values of max-perturbations as follows:\nH(q avg ) \u2265 1 n n i=1 E \u03b3i [\u03b3 i (x * i )]\nRemark. Theorem 1 of (Maji et al., 2014) and this Theorem 15 differ in three aspects: (1) the former is an upper bound and the latter is a lower bound, (2) the former sums the expectations while the latter averages them, and (3) the distributions q sum and q avg of x * in the two theorems are different.\nProof. By the duality relation between negative entropy and the log partition function (Wainwright & Jordan, 2008), the entropy H(q avg ) of the unary-avg perturb-max distribution q avg can be expressed as\nH(q avg ) = inf \u03d5 ln Z \u03d5 \u2212 x\u2208X q avg (x)\u03d5(x) ,\nwhere the variable \u03d5 ranges over all potential functions on X , and Z \u03d5 = x\u2208X exp \u03d5(x). Applying the Gumbel trick lower bound on the log partition function gives\nH(q avg ) \u2265 inf \u03d5 L \u03d5 (0) \u2212 x\u2208X q avg (x)\u03d5(x) ,\nProposition 16 in Appendix D shows that L \u03d5 (0) is a convex function of \u03d5. The expression \u2212 x\u2208X q(x)\u03d5(x) is a linear function of \u03d5, so also convex, and thus as a sum of two convex functions, the quantity L \u03d5 (0) \u2212 x\u2208X q(x)\u03d5(x) within the infimum is a convex function of \u03d5. Moreover, Proposition 17 in Appendix D tells us that the partial derivatives can be computed as\n\u2202 \u2202\u03d5(x) L \u03d5 (0) \u2212 x\u2208X q avg (x)\u03d5(x) = q \u03d5 (x) \u2212 q avg (x)\nwhere q \u03d5 (x) is the unary-avg perturb-max distribution associated with the potential function \u03d5. Proposition 18 in Appendix D confirms that these partial derivatives are continuous, so we observe that as a function of \u03d5, the expression L \u03d5 (0) \u2212 x\u2208X q avg (x)\u03d5(x) is a convex function with continuous partial derivatives, so it is a differentiable convex function. This is sufficient to establish that the point \u03d5 = \u03c6 is a global minimum of this function (Wright & Nocedal, 1999). Hence\nH(q avg ) \u2265 inf \u03d5 L \u03d5 (0) \u2212 x\u2208X q avg (x)\u03d5(x) = L \u03c6 (0) \u2212 x\u2208X q avg (x)\u03c6(x) = x\u2208X q avg (x)E \u03b3 \u03c6(x) + 1 n n i=1 \u03b3 i (x i ) | x = x * \u2212 x\u2208X q avg (x)\u03c6(x) = 1 n n i=1 E \u03b3i [\u03b3 i (x * i )]\nwhere we conditioned on the maximizing configuration x * when expanding L \u03c6 (0).\nRemark. This proof proceeded in the same way as the proof of Maji et al. (2014) for the upper bound, except that establishing the minimizing configuration of the infimum is a non-trivial step that is actually required in this case. The second revision of (Hazan et al., 2016)  Remark. While we knew from Hazan et al. (2013) that ln Z \u2212 L(0) \u2265 0 (i.e. that L(0) is a lower bound on ln Z), this is a stronger result showing that the size of the gap is an upper bound on the KL divergence between the average-unary perturbation MAP distribution q avg and the Gibbs distribution p. ", "publication_ref": ["b10", "b18", "b18", "b24", "b28", "b18", "b11", "b10"], "figure_ref": [], "table_ref": []}, {"heading": "D. Technical results", "text": "In this section we write L(\u03c6) instead of L \u03c6 (0) for the Gumbel trick lower bound on ln Z associated with the potential function \u03c6, see equation (3).\nProposition 16. The Gumbel trick lower bound L(\u03c6), viewed as a function of the potentials \u03c6, is convex.\nProof. Convexity can be proved directly from definition. Let \u03c6 1 and \u03c6 2 be two arbitrary potential functions on a discrete product space X , and let \u03bb \u2208 [0, 1]. Then\nL(\u03bb\u03c6 1 + (1 \u2212 \u03bb)\u03c6 2 ) = E \u03b3 max x\u2208X \u03bb\u03c6 1 (x) + (1 \u2212 \u03bb)\u03c6 2 (x) + 1 n n i=1 \u03b3 i (x i ) = E \u03b3 max x\u2208X \u03bb \u03c6 1 (x) + 1 n n i=1 \u03b3 i (x i ) + (1 \u2212 \u03bb) \u03c6 2 (x) + 1 n n i=1 \u03b3 i (x i ) \u2264 E \u03b3 \u03bb max x\u2208X \u03c6 1 (x) + 1 n n i=1 \u03b3 i (x i ) + (1 \u2212 \u03bb) max x\u2208X \u03c6 2 (x) + 1 n n i=1 \u03b3 i (x i ) = \u03bbL(\u03c6 1 ) + (1 \u2212 \u03bb)L(\u03c6 2 ),\nwhere we have used convexity of the max function to obtain the inequality, and linearity of expectation to arrive at the final equality.\nRemark. This convexity proof goes through for other (low-dimensional) perturbations as well, e.g. it also works for U \u03c6 (0).\nProposition 17. The Gumbel trick lower bound L(\u03c6), viewed as a function of the potentials \u03c6, has partial derivatives\n\u2202 \u2202\u03c6(x) L(\u03c6) = q \u03c6 (x)\nwhere q \u03c6 is the probability mass function of the average-unary perturbation MAP configuration's distribution associated with the potential function \u03c6.\nProof. Letx \u2208 X , so that \u03c6(x) is a general component of \u03c6, and let ex be the indicator vector ofx. For any \u03b4 \u2208 R, the change in the lower bound L due to replacing \u03c6(x) with \u03c6(x) + \u03b4 is Remark. The results above show that the Gumbel trick lower bound L(\u03c6), viewed as a function of the potentials \u03c6, is convex and has continuous partial derivatives.\nL(\u03c6 + \u03b4ex) \u2212 L(\u03c6) = E \u03b3 max x\u2208X \u03c6(x) + \u03b41{x =x} + 1 n n i=1 \u03b3 i (x i ) \u2212 E \u03b3 max x\u2208X \u03c6(x) + 1 n n i=1 \u03b3 i (x i ) = E \u03b3 max x\u2208X \u03c6(x) + \u03b41{x =x} + 1 n n i=1 \u03b3 i (x i ) \u2212 max x\u2208X \u03c6(x) + 1 n n i=1 \u03b3 i (x i ) = E \u03b3 [\u2206(\u03c6, \u03b4,x, \u03b3)]", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Acknowledgements", "text": "The authors thank Tamir Hazan for helpful discussions, and Mark Rowland, Maria Lomeli, and the anonymous reviewers for helpful comments. AW acknowledges support by the Alan Turing Institute under EPSRC grant EP/N510129/1, and by the Leverhulme Trust via the CFI.", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Marginal inference in MRFs using Frank-Wolfe", "journal": "", "year": "2013", "authors": "D Belanger; D Sheldon; A Mccallum"}, {"ref_id": "b1", "title": "Local Perturband-MAP for Structured Prediction", "journal": "", "year": "2017", "authors": "G Bertasius; Q Liu; L Torresani; J Shi"}, {"ref_id": "b2", "title": "Fast approximate energy minimization via graph cuts", "journal": "IEEE Transactions", "year": "2001", "authors": "Y Boykov; O Veksler; R Zabih"}, {"ref_id": "b3", "title": "", "journal": "", "year": "2002", "authors": "G Casella; R Berger;  Inference"}, {"ref_id": "b4", "title": "Scalable discrete sampling as a multi-armed bandit problem", "journal": "", "year": "2016", "authors": "Y Chen; Z Ghahramani"}, {"ref_id": "b5", "title": "Analysis of survival data", "journal": "CRC Press", "year": "1984", "authors": "D Cox; D Oakes"}, {"ref_id": "b6", "title": "Global optimization for first order Markov random fields with submodular priors", "journal": "Discrete Applied Mathematics", "year": "2009", "authors": "J Darbon"}, {"ref_id": "b7", "title": "Taming the curse of dimensionality: Discrete integration by hashing and optimization", "journal": "", "year": "2013", "authors": "S Ermon; A Sabharwal; B Selman"}, {"ref_id": "b8", "title": "An inequality satisfied by the Gamma function", "journal": "Scandinavian Actuarial Journal", "year": "1956", "authors": "J Gurland"}, {"ref_id": "b9", "title": "On the partition function and random maximum a-posteriori perturbations", "journal": "", "year": "2012", "authors": "T Hazan; T Jaakkola"}, {"ref_id": "b10", "title": "On sampling from the Gibbs distribution with random maximum a-posteriori perturbations", "journal": "", "year": "2013", "authors": "T Hazan; S Maji; T Jaakkola"}, {"ref_id": "b11", "title": "High dimensional inference with random maximum aposteriori perturbations", "journal": "", "year": "2016", "authors": "T Hazan; F Orabona; A Sarwate; S Maji; T Jaakkola"}, {"ref_id": "b12", "title": "Exact sampling with integer linear programs and random perturbations", "journal": "", "year": "2016", "authors": "C Kim; A Sabharwal; S Ermon"}, {"ref_id": "b13", "title": "Convergent tree-reweighted message passing for energy minimization", "journal": "", "year": "2006", "authors": "V Kolmogorov"}, {"ref_id": "b14", "title": "Barrier Frank-Wolfe for Marginal Inference", "journal": "", "year": "2015", "authors": "Rahul G Krishnan; Simon Lacoste-Julien; David Sontag"}, {"ref_id": "b15", "title": "Oxford statistical science series", "journal": "Clarendon Press", "year": "1996", "authors": "S Lauritzen"}, {"ref_id": "b16", "title": "Poisson process model for Monte Carlo", "journal": "MIT Press", "year": "2016", "authors": "C Maddison"}, {"ref_id": "b17", "title": "NIPS", "journal": "", "year": "2014", "authors": "C Maddison; D Tarlow; T Minka"}, {"ref_id": "b18", "title": "Active boundary annotation using random MAP perturbations", "journal": "", "year": "2014", "authors": "S Maji; T Hazan; T Jaakkola"}, {"ref_id": "b19", "title": "A free and open source C++ library for discrete approximate inference in graphical models", "journal": "Journal of Machine Learning Research", "year": "2010", "authors": "J Mooij;  Libdai"}, {"ref_id": "b20", "title": "On measure concentration of random maximum a-posteriori perturbations", "journal": "", "year": "2014", "authors": "F Orabona; T Hazan; A Sarwate; T Jaakkola"}, {"ref_id": "b21", "title": "Gaussian sampling by local perturbations", "journal": "", "year": "2010", "authors": "G Papandreou; A Yuille"}, {"ref_id": "b22", "title": "Perturb-and-MAP random fields: Using discrete optimization to learn and sample from energy models", "journal": "", "year": "2011-11", "authors": "G Papandreou; A Yuille"}, {"ref_id": "b23", "title": "Randomized optimum models for structured prediction", "journal": "", "year": "2012", "authors": "D Tarlow; R Adams; R Zemel"}, {"ref_id": "b24", "title": "Graphical Models, Exponential Families, and Variational Inference", "journal": "Found. Trends Mach. Learn", "year": "2008-01", "authors": "M Wainwright; M Jordan"}, {"ref_id": "b25", "title": "Clamping improves TRW and mean field approximations", "journal": "", "year": "2016", "authors": "A Weller; J Domke"}, {"ref_id": "b26", "title": "Approximating the Bethe partition function", "journal": "", "year": "2014", "authors": "A Weller; T Jebara"}, {"ref_id": "b27", "title": "Clamping variables and approximate inference", "journal": "", "year": "2014", "authors": "A Weller; T Jebara"}, {"ref_id": "b28", "title": "Numerical optimization", "journal": "Springer Science", "year": "1999", "authors": "S Wright; J Nocedal"}, {"ref_id": "b29", "title": "Variable clamping for optimization-based inference", "journal": "", "year": "2016-12", "authors": "J Zhao; J Djolonga; S Tschiatschek; A Krause"}], "figures": [{"figure_label": "1", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Figure 1 :1Figure 1: Analytically computed MSE and variance of Gumbel and Exponential trick estimators of Z (left) and ln Z (right). The MSEs are dominated by the variance, so the dashed and solid lines mostly overlap. See Section 2.3.2 for details.", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Figure 2 :2Figure 2: MSE of estimators of Z (left) and ln Z (right) stem-", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "Figure 3 :3Figure 3: (a) Sample size M required to reach a given MSE using", "figure_data": ""}, {"figure_label": "4", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Figure 4 :4Figure4: MSEs of U(\u03b1) as estimators of ln Z on 10 \u00d7 10 attractive (left, middle) and mixed (right) spin glass model with different coupling strengths C (see Section 5.3). We also show the percentage of samples saved by using the best \u03b1 in place of the Gumbel trick estimator U(0), assuming the asymptotic regime. For this we only considered \u03b1 > \u22121/(2 \u221a n) = \u22120.05, where variance is provably finite, see Section 3.1. The MAP problems were solved using the exact junction tree algorithm (JCT, left and right), or approximate belief propagation (BP, middle). In all cases, when coupling is very low, \u03b1 close to 0 is optimal. This also holds for BP when coupling is high. In other regimes, upper bounds for the Fr\u00e9chet trick, i.e. \u03b1 < 0, provide more accurate estimators.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "computes the derivative of U \u03d5 (0) \u2212 x\u2208X q sum (x)\u03d5(x), which is similar to our L \u03d5 (0) \u2212 x\u2208X q avg (x)\u03d5(x), by differentiating under the expectation. Equipped with Theorem 15, we can now show a link between the approximation \"errors\" of the averaged-unary perturbation MAP configuration distribution q avg (to the Gibbs distribution p) and estimate L(0) (to ln Z). Proposition 12. Let p be the Gibbs distribution on X . Then ln Z \u2212 L(0) error in ln Z bound \u2265 KL(q avg p) sampling error \u2265 0", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_5", "figure_caption": "Proof.The Kullback-Leibler divergence in question expands asKL(q avg p) = \u2212H(q avg ) \u2212 x\u2208X q avg (x) ln exp \u03c6(x) x\u2208X exp \u03c6(x) = \u2212H(q avg ) \u2212 x\u2208X q avg (x)\u03c6(x) + ln Z.From the proof of Theorem 15 we know that H(q avg ) \u2265 L(0) \u2212 x\u2208X q avg (x)\u03c6(x), so KL(q avg p) \u2264 \u2212L(0) + x\u2208X q avg (x)\u03c6(x) \u2212 x\u2208X q avg (x)\u03c6(x) + ln Z = ln Z \u2212 L(0).", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_6", "figure_caption": "Lby linearity of expectation, where we have denoted by \u2206(\u03c6, \u03b4,x, \u03b3) the change in maximum due to replacing the potential \u03c6(x) with \u03c6(x) + \u03b4. Let's condition on the argmax before modifying \u03c6:L(\u03c6 + \u03b4ex) \u2212 L(\u03c6) = E \u03b3 [\u2206(\u03c6, \u03b4,x, \u03b3)] = x\u2208X q \u03c6 (x)E \u03b3 [\u2206(\u03c6, \u03b4,x, \u03b3) | x is the original argmax]Now let's condition on the size of the gap G between the maximum and the runner-up:E \u03b3 [\u2206(\u03c6, \u03b4,x, \u03b3) | x is the original argmax] = P(G \u2264 |\u03b4|)E \u03b3 [\u2206(\u03c6, \u03b4,x, \u03b3) | x is the original argmax, G \u2264 |\u03b4|] + P(G > |\u03b4|)E \u03b3 [\u2206(\u03c6, \u03b4,x, \u03b3) | x is the original argmax, G > |\u03b4|]Let's examine all four terms on the right-hand side one by one:1. P(G \u2264 |\u03b4|) \u2192 P(G = 0) = 0 as \u03b4 \u2192 0 by monotonicity of measure. 2. E \u03b3 [\u2206(\u03c6, \u03b4,x, \u03b3) | x is the original argmax, G \u2264 |\u03b4|] \u2264 \u03b4 since |\u2206(\u03c6, \u03b4,x, \u03b3)| \u2264 |\u03b4| always holds. 3. P(G > |\u03b4|) \u2192 P(G \u2265 0) = 1 as \u03b4 \u2192 0 by monotonicity of measure. 4. E \u03b3 [\u2206(\u03c6, \u03b4,x, \u03b3) | x is the original argmax, G > |\u03b4|] = \u03b41{x =x} since in this case both maximizations in the definition of \u2206(\u03c6, \u03b4,x, \u03b3) are maximized at x.Therefore, as \u03b4 \u2192 0,E \u03b3 [\u2206(\u03c6, \u03b4,x, \u03b3) | x is the original argmax] = o(1)o(\u03b4) + (1 + o(1))\u03b41{x =x}Putting things together, we havelim \u03b4\u21920 \u2206(\u03c6, \u03b4,x, \u03b3) | x is the original argmax] = x\u2208X q \u03c6 (x)1{x =x} = q \u03c6 (x),which proves the stated claim directly from definition of a partial derivative.Proposition 18. The probability mass function q \u03c6 of the average-unary perturbation MAP configuration's distribution associated with a potential function \u03c6 is continuous in \u03c6.Proof. For any x * \u2208 X we have from definitionq \u03c6 (x * ) = P x * = argmax x\u2208X x i )which is continuous in \u03c6 by continuity of max, of 1 {\u2022 > \u2022} (as a function of \u03c6) and by the Bounded Convergence Theorem.", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "Trick g(x) Mean f (Z) Variance of g(T ) Asymptotic var. of\u1e90 Gumbel \u2212 ln x \u2212 c ln Z \u03c0 2 6 \u03c0 2 6 Z 2 Exponential x 1 Z 1 Z 2 Z 2 Weibull \u03b1 x \u03b1 , \u03b1 > 0 Z \u2212\u03b1 \u0393(1 + \u03b1) \u0393(1+2\u03b1)\u2212\u0393(1+\u03b1) 2 Z 2\u03b1 1 \u03b1 2 \u0393(1+2\u03b1) \u0393(1+\u03b1) 2 \u2212 1 Z 2 Fr\u00e9chet \u03b1 x \u03b1 , \u03b1 \u2208 (\u22121, 0) Z \u2212\u03b1 \u0393(1 + \u03b1) \u0393(1+2\u03b1)\u2212\u0393(1+\u03b1) 2 Z 2\u03b1 for \u03b1 > \u2212 1 2 1 \u03b1 2 \u0393(1+2\u03b1) \u0393(1+\u03b1) 2 \u2212 1 Z 2 Pareto e x Z Z\u22121 for Z > 1 a Z (Z\u22121) 2 (Z\u22122) for Z > 2 Z 2 (Z\u22122) 2 Tail t 1 {x>t} e \u2212tZ e \u2212tZ (1 \u2212 e \u2212tZ ) (1\u2212e \u2212tZ ) 2 t 2", "formula_coordinates": [3.0, 98.29, 94.93, 399.81, 98.51]}, {"formula_id": "formula_1", "formula_text": "min x\u2208X {T x } \u223c Exp(Z).", "formula_coordinates": [3.0, 129.29, 342.02, 86.3, 14.58]}, {"formula_id": "formula_2", "formula_text": "argmin x\u2208X {T x } \u223c p. (2", "formula_coordinates": [3.0, 136.27, 399.5, 149.29, 16.52]}, {"formula_id": "formula_3", "formula_text": ")", "formula_coordinates": [3.0, 285.57, 399.81, 3.87, 8.64]}, {"formula_id": "formula_4", "formula_text": "\u03b3 \u223c Gumbel(\u2212c). Defining {\u03b3(x)} x\u2208X i.i.d.", "formula_coordinates": [3.0, 55.44, 485.07, 177.04, 13.03]}, {"formula_id": "formula_5", "formula_text": "max x\u2208X {\u03c6(x) + \u03b3(x)} \u223c Gumbel(\u2212c + ln Z), (1') argmax x\u2208X {\u03c6(x) + \u03b3(x)} \u223c p, (2'", "formula_coordinates": [3.0, 68.49, 533.22, 220.95, 36.82]}, {"formula_id": "formula_6", "formula_text": "W \u223c Weibull(1, \u03b1 \u22121 ). Defining {W (x)} x\u2208X i.i.d. \u223c Weibull(1, \u03b1 \u22121 )", "formula_coordinates": [3.0, 307.44, 440.9, 234.0, 24.08]}, {"formula_id": "formula_7", "formula_text": "min x\u2208X {p \u2212\u03b1 W (x)} \u223c Weibull(Z \u2212\u03b1 , \u03b1 \u22121 ).", "formula_coordinates": [3.0, 341.59, 483.82, 165.69, 16.66]}, {"formula_id": "formula_8", "formula_text": "Y = exp( 1 M M m=1 X m ), where X 1 , . . . , X M i.i.d.", "formula_coordinates": [4.0, 307.44, 324.82, 234.0, 28.45]}, {"formula_id": "formula_9", "formula_text": "X M i.i.d.", "formula_coordinates": [5.0, 124.89, 292.55, 32.46, 13.03]}, {"formula_id": "formula_10", "formula_text": "p M (Z|X 1 , . . . , X M ) \u221d Z M \u22121 e \u2212Z M m=1 Xm .", "formula_coordinates": [5.0, 80.89, 313.78, 183.1, 13.37]}, {"formula_id": "formula_11", "formula_text": "M m=1 X m ) ran- dom variable, the posterior mean is E[Z|X 1 , . . . , X M ] = M M m=1 X m = 1 M M m=1 X m \u22121 ,", "formula_coordinates": [5.0, 55.44, 335.34, 234.0, 65.7]}, {"formula_id": "formula_12", "formula_text": "U := max x\u2208X \u03c6(x) + n i=1 \u03b3 i (x i ) ,", "formula_coordinates": [5.0, 105.75, 572.46, 133.39, 30.32]}, {"formula_id": "formula_13", "formula_text": "{\u03b3 i (x i ) | x i \u2208 X i , 1 \u2264 i \u2264 n} i.i.d \u223c Gumbel(\u2212c).", "formula_coordinates": [5.0, 82.27, 612.19, 193.57, 13.03]}, {"formula_id": "formula_14", "formula_text": "1 |+\u2022 \u2022 \u2022+|X n | i.i.d.", "formula_coordinates": [5.0, 160.68, 636.53, 76.33, 9.65]}, {"formula_id": "formula_15", "formula_text": "Proposition 4. For any \u03b1 \u2208 (\u22121, 0) \u222a (0, \u221e), the upper bound ln Z \u2264 U(\u03b1) holds with U(\u03b1) := n ln \u0393(1 + \u03b1) \u03b1 + nc \u2212 1 \u03b1 ln E \u03b3 e \u2212\u03b1U .", "formula_coordinates": [5.0, 307.44, 272.75, 233.99, 53.79]}, {"formula_id": "formula_16", "formula_text": "d d\u03b1 U(\u03b1) \u03b1=0 = 1 2 n \u03c0 2 6 \u2212 var(U ) .", "formula_coordinates": [5.0, 348.22, 572.06, 155.3, 26.43]}, {"formula_id": "formula_17", "formula_text": "U j (x 1 , . . . , x j\u22121 ) := max xj ,...,xn \uf8f1 \uf8f2 \uf8f3 \u03c6(x) + n i=j \u03b3 i (x i ) \uf8fc \uf8fd \uf8fe .", "formula_coordinates": [6.0, 65.61, 180.44, 213.66, 33.93]}, {"formula_id": "formula_18", "formula_text": "E \u03b3 e \u2212(n\u2212j) ln \u0393(1+\u03b1)\u2212\u03b1(n\u2212j)c) e \u2212\u03b1Uj+1 \u22121/\u03b1 \u2264 E \u03b3 e \u2212(n\u2212(j\u22121)) ln \u0393(1+\u03b1)\u2212\u03b1(n\u2212(j\u22121))c) e \u2212\u03b1Uj \u22121/\u03b1", "formula_coordinates": [6.0, 62.82, 345.84, 218.73, 49.68]}, {"formula_id": "formula_19", "formula_text": "p j (x j ) \u2190 e \u2212c \u0393(1+\u03b1) 1/\u03b1 E\u03b3 [e \u2212\u03b1U j+1 (x 1 ,...,x j ) ] \u22121/\u03b1 E\u03b3 [e \u2212\u03b1U j (x 1 ,...,x j\u22121 ) ] \u22121/\u03b1 4: p j (reject) \u2190 1 \u2212 xj \u2208Xj p j (x j ) 5:", "formula_coordinates": [6.0, 312.42, 167.02, 211.84, 46.36]}, {"formula_id": "formula_20", "formula_text": "7: RESTART (goto 1)", "formula_coordinates": [6.0, 312.42, 228.88, 105.18, 8.64]}, {"formula_id": "formula_21", "formula_text": "c + ln \u0393(1 + \u03b1) \u03b1 \u2212 1 \u03b1 ln E e \u2212\u03b1 maxx{\u03c6(x)+\u03b3 S (x S )} ,", "formula_coordinates": [6.0, 317.71, 472.52, 213.47, 22.31]}, {"formula_id": "formula_22", "formula_text": "L := max x\u2208X \u03c6(x) + 1 n n i=1 \u03b3 i (x i ) .", "formula_coordinates": [6.0, 351.07, 577.7, 146.74, 30.32]}, {"formula_id": "formula_23", "formula_text": "L(\u03b1) := c + ln \u0393(1 + \u03b1) \u03b1 \u2212 1 n\u03b1 ln E [exp (\u2212n\u03b1L)] .", "formula_coordinates": [6.0, 318.51, 648.3, 211.86, 22.31]}, {"formula_id": "formula_24", "formula_text": "H(x * ) \u2264 B(p) := n i=1 E \u03b3i [\u03b3 i (x * i )]", "formula_coordinates": [7.0, 132.89, 337.68, 153.51, 14.11]}, {"formula_id": "formula_25", "formula_text": ") := E \u03b3i [\u03b3 i (x * i )]", "formula_coordinates": [7.0, 71.05, 389.64, 69.43, 12.32]}, {"formula_id": "formula_26", "formula_text": "(U(0) \u2212 ln Z) error in ln Z bound + KL(x * p) sampling error = B(p) \u2212 H(x * ) error in entropy estimation .", "formula_coordinates": [7.0, 65.07, 407.95, 216.41, 25.57]}, {"formula_id": "formula_27", "formula_text": "ln Z \u2212 L(0) error in ln Z bound \u2265 KL(x * * p) sampling error \u2265 0.", "formula_coordinates": [7.0, 100.58, 527.61, 143.72, 25.57]}, {"formula_id": "formula_28", "formula_text": "Z := exp 1 M M m=1 X m where X 1 , . . . , X M iid \u223c Gumbel(\u2212c + ln Z).", "formula_coordinates": [10.0, 136.76, 291.97, 323.37, 30.2]}, {"formula_id": "formula_29", "formula_text": "E[\u1e90] = M m=1 E[e Xm/M ] = \u0393(1 \u2212 1/M )e (ln Z\u2212c)/M M = \u0393(1 \u2212 1/M ) M e \u2212c Z, E[\u1e90 2 ] = M m=1 E[e 2Xm/M ] = \u0393(1 \u2212 2/M )e 2(ln Z\u2212c)/M M = \u0393(1 \u2212 2/M ) M e \u22122c Z 2 .", "formula_coordinates": [10.0, 125.38, 378.85, 346.13, 65.03]}, {"formula_id": "formula_30", "formula_text": "bias(\u1e90) 2 = (E[\u1e90] \u2212 Z) 2 = Z 2 \u0393(1 \u2212 1/M ) M e \u2212c \u2212 1 , var(\u1e90) = E[\u1e90 2 ] \u2212 E[\u1e90] 2 = Z 2 \u0393(1 \u2212 2/M ) M e \u22122c \u2212 \u0393(1 \u2212 1/M ) 2M e \u22122c , MSE(\u1e90) = bias(\u1e90) 2 + var(\u1e90) = Z 2 \u0393(1 \u2212 2/M ) M e \u22122c \u2212 2\u0393(1 \u2212 1/M ) M e \u2212c + 1 .", "formula_coordinates": [10.0, 119.89, 489.06, 357.1, 44.83]}, {"formula_id": "formula_31", "formula_text": "Z := 1 M M m=1 X m \u22121 where X 1 , . . . , X M iid \u223c Exp(Z).", "formula_coordinates": [10.0, 165.36, 646.14, 266.17, 33.5]}, {"formula_id": "formula_32", "formula_text": "bias(\u1e90) 2 = (E[\u1e90] \u2212 Z) 2 = Z 2 M M \u2212 1 \u2212 1 = Z 2 1 M \u2212 1 , var(\u1e90) = Z 2 M 2 1 (M \u2212 1) 2 (M \u2212 2) , MSE(\u1e90) = bias(\u1e90) 2 + var(\u1e90) = Z 2 M \u2212 2 + M 2 (M \u2212 1) 2 (M \u2212 2) = Z 2 M + 2 (M \u2212 1)(M \u2212 2)", "formula_coordinates": [11.0, 131.75, 90.4, 329.42, 77.08]}, {"formula_id": "formula_33", "formula_text": "ln Z = \u2212 ln 1 M M m=1 X m where X 1 , . . . , X M iid \u223c Exp(Z). Again M m=1 X m \u223c Gamma(M, Z)", "formula_coordinates": [11.0, 55.44, 292.85, 384.02, 54.28]}, {"formula_id": "formula_34", "formula_text": "bias( ln Z) 2 = (E[\u1e90] \u2212 Z) 2 = (ln M \u2212 (\u03c8(M ) \u2212 ln Z) \u2212 ln Z) 2 = (ln M \u2212 \u03c8(M )) 2 , var( ln Z) = \u03c8 1 (M ), MSE( ln Z) = bias( ln Z) 2 + var( ln Z) = (ln M \u2212 \u03c8(M )) 2 + \u03c8 1 (M ),", "formula_coordinates": [11.0, 123.07, 356.42, 350.75, 47.97]}, {"formula_id": "formula_35", "formula_text": "pow \u2212\u03b1 y\u2208Y pow \u22121/\u03b1 h(y) = E W min y h(y) W (y) \u0393(1 + \u03b1)", "formula_coordinates": [11.0, 64.93, 607.93, 201.24, 26.8]}, {"formula_id": "formula_36", "formula_text": "i.i.d. \u223c Weibull(1, \u03b1 \u22121 ) for \u03b1 \u2208 (0, \u221e), pow \u2212\u03b1 y\u2208Y pow \u22121/\u03b1 h(y) = E F max y h(y) F (y) \u0393(1 + \u03b1)", "formula_coordinates": [11.0, 64.93, 611.16, 465.22, 56.26]}, {"formula_id": "formula_37", "formula_text": "i.i.d. \u223c Fr\u00e9chet(1, \u2212\u03b1 \u22121 ) for \u03b1 \u2208 (\u22121, 0).", "formula_coordinates": [11.0, 367.27, 643.85, 164.69, 12.25]}, {"formula_id": "formula_38", "formula_text": "U(\u03b1) := n ln \u0393(1 + \u03b1) \u03b1 + nc \u2212 1 \u03b1 ln E \u03b3 e \u2212\u03b1U .", "formula_coordinates": [12.0, 199.82, 110.32, 197.24, 22.31]}, {"formula_id": "formula_39", "formula_text": "U n\u22121 (\u03b1, x 1 ) := (n \u2212 1) ln \u0393(1 + \u03b1) \u03b1 + (n \u2212 1)c \u2212 1 \u03b1 ln E \u03b3 exp \u2212\u03b1 max x2,...,xn \u03c6(x) + n i=2 \u03b3 i (x i ) .", "formula_coordinates": [12.0, 85.67, 220.83, 425.55, 30.32]}, {"formula_id": "formula_40", "formula_text": "Z \u2212\u03b1 \u2265 pow \u2212\u03b1 x1\u2208X1 pow \u22121/\u03b1 e \u2212\u03b1Un\u22121(\u03b1,x1) [inductive hypothesis] \u2265 pow \u2212\u03b1 pow \u22121/\u03b1 e \u2212\u03b1U (\u03b1) [Clamping Lemma] = e \u2212\u03b1U (\u03b1) ,", "formula_coordinates": [12.0, 136.06, 288.38, 324.76, 62.93]}, {"formula_id": "formula_41", "formula_text": "\u03b1 + nc \u2212 1 \u03b1 ln E e \u2212\u03b1U .", "formula_coordinates": [12.0, 194.32, 412.0, 120.45, 13.47]}, {"formula_id": "formula_42", "formula_text": "\u2212 lim \u03b1\u21920 1 \u03b1 ln E e \u2212\u03b1U = \u2212 lim \u03b1\u21920 \u2212E[U ] E [e \u2212\u03b1U ] = E[U ] = U(0).", "formula_coordinates": [12.0, 179.61, 471.85, 237.65, 22.87]}, {"formula_id": "formula_43", "formula_text": "d d\u03b1 U(\u03b1) \u03b1=0 = n \u03c0 2 12 \u2212 var(U ) 2 .", "formula_coordinates": [12.0, 233.7, 547.36, 132.33, 26.43]}, {"formula_id": "formula_44", "formula_text": "d d\u03b1 n ln \u0393(1 + \u03b1) \u03b1 = n \u03c8(1 + \u03b1)\u03b1 \u2212 ln \u0393(1 + \u03b1) \u03b1 2 ,", "formula_coordinates": [12.0, 201.02, 643.62, 197.69, 22.31]}, {"formula_id": "formula_45", "formula_text": "lim \u03b1\u21920 d d\u03b1 n ln \u0393(1 + \u03b1) \u03b1 = n lim \u03b1\u21920 \u03c8(1 + \u03b1) + \u03b1\u03c8 (1) (1 + \u03b1) \u2212 \u03c8(1 + \u03b1) 2\u03b1 = n \u03c8 (1) (1) 2 = n \u03b6(2) 2 = n \u03c0 2 12 ,", "formula_coordinates": [12.0, 90.95, 692.79, 414.98, 23.89]}, {"formula_id": "formula_46", "formula_text": "d d\u03b1 K(\u2212\u03b1) \u2212\u03b1 = \u2212 \u03b1K (\u2212\u03b1) \u2212 K(\u2212\u03b1) \u03b1 2 .", "formula_coordinates": [13.0, 221.69, 144.62, 156.35, 22.31]}, {"formula_id": "formula_47", "formula_text": "lim \u03b1\u21920 d d\u03b1 K(\u2212\u03b1) \u2212\u03b1 = lim \u03b1\u21920 K (\u2212\u03b1) + \u03b1K (\u2212\u03b1) \u2212 K (\u2212\u03b1) 2\u03b1 = K (0) 2 = var(U ) 2 ,", "formula_coordinates": [13.0, 134.6, 197.39, 327.68, 22.31]}, {"formula_id": "formula_48", "formula_text": "U j (x 1 , . . . , x j\u22121 ) := max xj ,...,xn \uf8f1 \uf8f2 \uf8f3 \u03c6(x) + n i=j \u03b3 i (x i ) \uf8fc \uf8fd \uf8fe ,", "formula_coordinates": [13.0, 191.61, 304.19, 213.66, 33.93]}, {"formula_id": "formula_49", "formula_text": "pow \u2212\u03b1 xj \u2208Xj pow \u22121/\u03b1 E W \uf8ee \uf8f0 min xj+1,...,xnp (x) \u2212\u03b1 n i=j+1 W (x i ) \u0393(1 + \u03b1) \uf8f9 \uf8fb = E W \uf8ee \uf8f0 min xj \u2208Xj \uf8f1 \uf8f2 \uf8f3 E W \uf8ee \uf8f0 min xj+1,...,xnp (x) \u2212\u03b1 n i=j+1 W (x i ) \u0393(1 + \u03b1) \uf8f9 \uf8fb W (x j ) \u0393(1 + \u03b1) \uf8fc \uf8fd \uf8fe \uf8f9 \uf8fb \u2264 E W \uf8ee \uf8f0 min xj ,...,xnp (x) \u2212\u03b1 n i=j W (x i ) \u0393(1 + \u03b1) \uf8f9 \uf8fb", "formula_coordinates": [13.0, 152.64, 486.58, 293.26, 113.23]}, {"formula_id": "formula_50", "formula_text": "n i=1 p i (x i ) = n i=1 e \u2212c \u0393(1 + \u03b1) 1/\u03b1 E \u03b3 e \u2212\u03b1Ui+1(x1,...,xi) \u22121/\u03b1 E \u03b3 e \u2212\u03b1Ui(x1,...,xi\u22121) \u22121/\u03b1 = e \u2212nc \u0393(1 + \u03b1) n/\u03b1 e \u2212\u03b1\u03c6(x1,...,xn) \u22121/\u03b1 E[e \u2212\u03b1U ] \u22121/\u03b1 \u221d p(x),", "formula_coordinates": [14.0, 86.25, 143.08, 424.37, 31.63]}, {"formula_id": "formula_51", "formula_text": "x * := argmax x\u2208X \u03c6(x) + n i=1 \u03b3 i (x i ) .", "formula_coordinates": [14.0, 221.23, 262.05, 154.42, 30.32]}, {"formula_id": "formula_52", "formula_text": "(U(0) \u2212 ln Z) error in ln Z bound + KL(q sum p) sampling error = E \u03b3i [\u03b3 i (x * i )] \u2212 H(q sum )", "formula_coordinates": [14.0, 181.4, 392.24, 229.65, 25.72]}, {"formula_id": "formula_53", "formula_text": "U(0) = E \u03b3 max x\u2208X \u03b8(x) + n i=1 \u03b3 i (x i ) = x\u2208X q sum (x) \u03b8(x) + E \u03b3 n i=1 \u03b3 i (x i ) | x = x * = x\u2208X q sum (x)\u03b8(x) + n i=1 E \u03b3i [\u03b3 i (x * i )] .", "formula_coordinates": [14.0, 180.91, 454.32, 220.87, 98.51]}, {"formula_id": "formula_54", "formula_text": "KL(q sum p) = \u2212H(q sum ) \u2212 x\u2208X q sum (x) ln exp (\u03b8(x)) x\u2208X exp (\u03b8(x)) = \u2212H(q sum ) \u2212 x\u2208X q sum (x)\u03b8(x) + ln Z.", "formula_coordinates": [14.0, 170.31, 584.54, 255.06, 54.68]}, {"formula_id": "formula_55", "formula_text": "c + ln \u0393(1 + \u03b1) \u03b1 \u2212 1 \u03b1 ln E e \u2212\u03b1 maxx{\u03c6(x)+\u03b3 S (x S )} ,", "formula_coordinates": [15.0, 191.71, 140.87, 213.47, 22.31]}, {"formula_id": "formula_56", "formula_text": "pow \u2212\u03b1 Z = pow \u2212\u03b1 x S xS e \u03c6(x S ,xS ) \u2264 pow \u2212\u03b1 x S max xS e \u03c6(x S ,", "formula_coordinates": [15.0, 160.64, 212.8, 260.87, 22.3]}, {"formula_id": "formula_57", "formula_text": ") = E W [min y h(y) \u0393(1+\u03b1) W (y)]", "formula_coordinates": [15.0, 274.47, 245.49, 114.85, 14.38]}, {"formula_id": "formula_58", "formula_text": "pow \u2212\u03b1 Z \u2264 E W min x S pow \u2212\u03b1 max xS e \u03c6(x S ,xS ) \u0393(1 + \u03b1) W (x S ) .", "formula_coordinates": [15.0, 180.14, 279.83, 236.61, 24.3]}, {"formula_id": "formula_59", "formula_text": "pow \u2212\u03b1 Z \u2264 1 \u0393(1 + \u03b1) E \u03b3 pow \u2212\u03b1 max x S max xS e \u03c6(x S ,xS ) e \u03b3 S (x S )+c = e \u2212\u03b1c \u0393(1 + \u03b1) E \u03b3 exp \u2212\u03b1 max x {\u03c6(x) + \u03b3 S (x S )} .", "formula_coordinates": [15.0, 165.45, 347.1, 260.23, 50.43]}, {"formula_id": "formula_60", "formula_text": "pow \u2212\u03b1 Z \u2265 pow \u2212\u03b1 x S max xS e \u03c6(x S ,xS ) = E F min x S pow \u2212\u03b1 max xS e \u03c6(x S ,xS ) \u0393(1 + \u03b1) F (x S ) ,", "formula_coordinates": [15.0, 182.86, 436.69, 231.17, 52.52]}, {"formula_id": "formula_61", "formula_text": "L(\u03b1) := c + ln \u0393(1 + \u03b1) \u03b1 \u2212 1 n\u03b1 ln E [exp (\u2212n\u03b1L)] ,", "formula_coordinates": [15.0, 192.51, 565.84, 211.86, 22.31]}, {"formula_id": "formula_62", "formula_text": "ln Z \u2265 c + ln \u0393(1 + \u03b1) \u03b1 \u2212 1 n n i=1 1 \u03b1 ln E exp \u2212\u03b1 max x {\u03c6(x) + \u03b3 i (x i )} = c + ln \u0393(1 + \u03b1) \u03b1 \u2212 1 n\u03b1 ln E exp \u2212 n i=1 \u03b1 max x {\u03c6(x) + \u03b3 i (x i )} = c + ln \u0393(1 + \u03b1) \u03b1 \u2212 1 n\u03b1 ln E exp \u2212n\u03b1 1 n n i=1 max x {\u03c6(x) + \u03b3 i (x i )} ,", "formula_coordinates": [15.0, 136.14, 616.75, 324.6, 98.66]}, {"formula_id": "formula_63", "formula_text": "L(\u03b1) \u2265 L(0) + ln \u0393(1 + \u03b1) \u03b1 + c", "formula_coordinates": [16.0, 232.2, 176.96, 132.48, 22.31]}, {"formula_id": "formula_64", "formula_text": "x * := argmax x\u2208X \u03c6(x) + 1 n n i=1 \u03b3 i (x i ) .", "formula_coordinates": [16.0, 216.22, 327.28, 164.45, 30.32]}, {"formula_id": "formula_65", "formula_text": "{\u03b3 i (x i ) | x i \u2208 X i , 1 \u2264 i \u2264 n} i.i.d.", "formula_coordinates": [16.0, 82.31, 364.29, 136.48, 13.03]}, {"formula_id": "formula_66", "formula_text": "ln Z \u2265 L(0) = L \u03c6 (0) := E \u03b3 min x\u2208X \u03c6(x) + 1 n n i=1 \u03b3 i (x i ) . (3", "formula_coordinates": [16.0, 172.52, 397.87, 365.05, 30.32]}, {"formula_id": "formula_67", "formula_text": ")", "formula_coordinates": [16.0, 537.57, 408.6, 3.87, 8.64]}, {"formula_id": "formula_68", "formula_text": "H(q avg ) \u2265 1 n n i=1 E \u03b3i [\u03b3 i (x * i )]", "formula_coordinates": [16.0, 238.74, 500.11, 119.4, 30.32]}, {"formula_id": "formula_69", "formula_text": "H(q avg ) = inf \u03d5 ln Z \u03d5 \u2212 x\u2208X q avg (x)\u03d5(x) ,", "formula_coordinates": [16.0, 207.72, 629.24, 181.44, 20.06]}, {"formula_id": "formula_70", "formula_text": "H(q avg ) \u2265 inf \u03d5 L \u03d5 (0) \u2212 x\u2208X q avg (x)\u03d5(x) ,", "formula_coordinates": [16.0, 206.3, 699.81, 184.28, 20.06]}, {"formula_id": "formula_71", "formula_text": "\u2202 \u2202\u03d5(x) L \u03d5 (0) \u2212 x\u2208X q avg (x)\u03d5(x) = q \u03d5 (x) \u2212 q avg (x)", "formula_coordinates": [17.0, 185.08, 119.93, 227.92, 26.8]}, {"formula_id": "formula_72", "formula_text": "H(q avg ) \u2265 inf \u03d5 L \u03d5 (0) \u2212 x\u2208X q avg (x)\u03d5(x) = L \u03c6 (0) \u2212 x\u2208X q avg (x)\u03c6(x) = x\u2208X q avg (x)E \u03b3 \u03c6(x) + 1 n n i=1 \u03b3 i (x i ) | x = x * \u2212 x\u2208X q avg (x)\u03c6(x) = 1 n n i=1 E \u03b3i [\u03b3 i (x * i )]", "formula_coordinates": [17.0, 139.53, 230.88, 317.82, 116.5]}, {"formula_id": "formula_73", "formula_text": "L(\u03bb\u03c6 1 + (1 \u2212 \u03bb)\u03c6 2 ) = E \u03b3 max x\u2208X \u03bb\u03c6 1 (x) + (1 \u2212 \u03bb)\u03c6 2 (x) + 1 n n i=1 \u03b3 i (x i ) = E \u03b3 max x\u2208X \u03bb \u03c6 1 (x) + 1 n n i=1 \u03b3 i (x i ) + (1 \u2212 \u03bb) \u03c6 2 (x) + 1 n n i=1 \u03b3 i (x i ) \u2264 E \u03b3 \u03bb max x\u2208X \u03c6 1 (x) + 1 n n i=1 \u03b3 i (x i ) + (1 \u2212 \u03bb) max x\u2208X \u03c6 2 (x) + 1 n n i=1 \u03b3 i (x i ) = \u03bbL(\u03c6 1 ) + (1 \u2212 \u03bb)L(\u03c6 2 ),", "formula_coordinates": [18.0, 129.32, 177.15, 324.41, 128.1]}, {"formula_id": "formula_74", "formula_text": "\u2202 \u2202\u03c6(x) L(\u03c6) = q \u03c6 (x)", "formula_coordinates": [18.0, 256.97, 385.78, 84.14, 22.31]}, {"formula_id": "formula_75", "formula_text": "L(\u03c6 + \u03b4ex) \u2212 L(\u03c6) = E \u03b3 max x\u2208X \u03c6(x) + \u03b41{x =x} + 1 n n i=1 \u03b3 i (x i ) \u2212 E \u03b3 max x\u2208X \u03c6(x) + 1 n n i=1 \u03b3 i (x i ) = E \u03b3 max x\u2208X \u03c6(x) + \u03b41{x =x} + 1 n n i=1 \u03b3 i (x i ) \u2212 max x\u2208X \u03c6(x) + 1 n n i=1 \u03b3 i (x i ) = E \u03b3 [\u2206(\u03c6, \u03b4,x, \u03b3)]", "formula_coordinates": [18.0, 71.95, 489.88, 439.15, 79.34]}], "doi": ""}