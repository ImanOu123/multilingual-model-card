{"title": "Sources of Evidence for Vertical Selection", "authors": "Jaime Arguello; Fernando D\u00edaz; Jamie Callan; Jean-Fran\u00e7ois Crespo", "pub_date": "", "abstract": "Web search providers often include search services for domainspecific subcollections, called verticals, such as news, images, videos, job postings, company summaries, and artist profiles. We address the problem of vertical selection, predicting relevant verticals (if any) for queries issued to the search engine's main web search page. In contrast to prior query classification and resource selection tasks, vertical selection is associated with unique resources that can inform the classification decision. We focus on three sources of evidence: (1) the query string, from which features are derived independent of external resources, (2) logs of queries previously issued directly to the vertical, and (3) corpora representative of vertical content. We focus on 18 different verticals, which differ in terms of semantics, media type, size, and level of query traffic. We compare our method to prior work in federated search and retrieval effectiveness prediction. An in-depth error analysis reveals unique challenges across different verticals and provides insight into vertical selection for future work.", "sections": [{"heading": "INTRODUCTION", "text": "In recent years, major search engines have extended their services to include search on specialized subcollections or verticals focused on specific domains (e.g., news, travel, and local search) or media types (e.g., images and video). There are currently two ways through which a user can access vertical content. If the user suspects that relevant content exists in a vertical, she may issue the query directly to a vertical search engine. On the other hand, if the user is unaware of a relevant vertical or prefers a portal interface, she may issue the query directly to a portal search engine. To address this, search engines can include summaries of relevant vertical results in web results, as shown in Figure 1. In the research community, this is referred to as aggregated search and has been implemented by many major search engines [12].\nVertical selection is the task of selecting the relevant verticals, if any, in response to a user's query. We focus on single vertical selection, defined as the task of predicting a single relevant vertical, if any. Figure 1 exemplifies a common action associated with single vertical selection-embedding a short summary of the relevant vertical's results above the first web result. We are conservative in predicting at most a single vertical, as some queries have multiple relevant verticals. However, as we will see later, most queries in our evaluation set were assigned zero or one relevant vertical by human annotators.\nVertical selection is related to the task of resource selection in federated search or distributed information retrieval. Resource selection is the task of deciding which collections to search given a user's query [4]. Similar to resource selection, vertical selection can be informed by the content of each vertical. However, vertical selection has a few distinguishing properties. First, verticals specialize on identifiable domains and types of media. This enables users to possibly express interest in vertical content explicitly, using key-inauguration search", "publication_ref": ["b11", "b3"], "figure_ref": [], "table_ref": []}, {"heading": "Image Results for Inauguration Inauguration Day -Wikipedia", "text": "The swearing-in of the President of the United States occurs upon the commencement of a new term of a President of the United States. The United States Constitution mandates that the President make the following oath or... http://en.wikipedia.org/wiki/United_States_presidential_inauguration", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Joint Congressional Committee on Inaugural Ceremonies", "text": "Charged with planning and conducting the inaugural activities at the Capitol: the swearing-in ceremony and the luncheon honoring the President and Vice President. http://inaugural.senate.gov", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Inauguration Day 2009", "text": "Official site for the 2009 Inauguration of Barack Obama. Provides information about events, tickets, and inaugural balls and parades. http::inaugural.senate.gov/2009", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Inaugural Addresses of the Presidents of the United States", "text": "From George Washington's first address in 1789 to the present. Includes a note on the presidents who took the oath of office without a formal inauguration. http://www.bartleby.com/124 Figure 1: A vertical selection system determines that the images vertical is relevant to query \"inauguration\". words such as \"news\" for the news vertical or \"pictures\" for the images vertical. Therefore, a potentially useful source of evidence for vertical selection is the query string itself, independent of any other resource. Second, some verticals have a search interface through which users directly search for vertical content. Because a vertical selection system and its target verticals are operated by a common entity (e.g., search engine company), we assume access to vertical querylogs. Third, users do not always seek vertical content, but may prefer the default web results instead. In contrast to resource selection, where a resource is always selected in order to retrieve documents, in vertical selection we must decide when to not predict any vertical relevant.\nWe investigate a classification-based approach to vertical selection and exploit three feature types: (1) query string features, (2) corpus features, derived from vertical representative corpora, and (3) query-log features, derived from vertical query-logs. Corpus and query-log features enrich the query representation beyond the query string and focus on two potentially complementary sources of evidence-corpus features relate to content production (i.e., content in the vertical) and query-log features relate to content demand (i.e., content sought by users). With respect to corpus features, we make use of and compare against prior work in resource selection for federated search (i.e., scoring a collection by its expected number of relevant documents) and retrieval effectiveness prediction (i.e., scoring a collection by the predicted quality of its retrieval). We evaluate corpus features on two types of collections: collections of verticalsampled documents and surrogate collections representative of verticals constructed by sampling a non-vertical resource, the Wikipedia. 1 We evaluate several simple baselines, each focused on a single source of evidence and a supervised approach that combines our three feature types. An error analysis shows the contribution of each feature type and reveals unique challenges in vertical selection.", "publication_ref": ["b0"], "figure_ref": [], "table_ref": []}, {"heading": "RELATED WORK", "text": "If we consider verticals as external collections, we may view vertical selection analogous to resource selection in federated search. Most prior approaches to resource selection derive evidence solely from the target collections either directly or indirectly, using a sampling of documents as proxy for the collection [6,17,19,20,9]. Approaches such as CORI [6], CVV [20], and KL-divergence [19] treat collections (or their sampled documents) as \"large documents\" and adapt document scoring techniques to scoring collections. Because these techniques make no distinction between documents, they do not model the number of relevant documents in a collection [16]. Approaches such as GlOSS (and its variations) [9] as well as ReDDE [17] more explicitly model the distribution of relevant documents across resources. ReDDE issues the query to an index of documents sampled from the target collections and scores each collection proportional to the number of top-ranked documents originating from it, taking into account the difference between the size of the original collection and its sample size. Some verticals are genre-specific. Therefore, some prior work in query-classification into topical categories is relevant to vertical selection [13,14,2,1,10]. Because queries are terse, many query-classification approaches augment the query with features beyond the query string, possibly derived from query-logs or corpora of documents associated with the target classes. Bietzel et al. use a large (unlabeled) query-log and a technique known as selectional preferencethe query \"interest rates\" belongs to target category finance because \"interest\" and \"rates\" are distributionally similar to the term \"finance\" [1,2]. Shen et al. [13] and other participants of the KDD 2005 Cup [11] use corpus-based evidence. These techniques resemble ReDDE in that the query is issued to an index of documents associated with the target categories and the query's membership to a category is proportional to the number of top-ranked documents associated with the category. In later work, Shen et al. derive a soft mapping from documents to target categories using term similarity [14]. The category representation is augmented with related terms using pseudo-relevance feedback.\nThere is some prior work on vertical selection. Li et al. focus on the shopping and jobs verticals [10]. They focus on query lexical features and use a query-click graph to propagate category labels to unlabeled queries. Our work differs from that of Li el al. in that we enrich the query representation beyond query string features, focus on more verticals, and, by formulating the task as single vertical selection, we examine vertical contention resolution rather than evaluate on each vertical independently. Diaz investigates vertical selection with respect to the news vertical [8]. Diaz focuses on features derived from the news collection and from web and vertical query-logs and incorporates click-feedback into the model. We extend the work of Diaz by exploring more features, focusing on more verticals, and evaluating on human relevance judgements rather than clicks.", "publication_ref": ["b5", "b16", "b18", "b19", "b8", "b5", "b19", "b18", "b15", "b8", "b16", "b12", "b13", "b1", "b0", "b9", "b0", "b1", "b12", "b10", "b13", "b9", "b7"], "figure_ref": [], "table_ref": []}, {"heading": "PROBLEM DEFINITION", "text": "Throughout the paper, we will use the following notation.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "V", "text": "set of all verticals Q set of all queries Vq set of verticals relevant to query q vq the single vertical predicted relevant to query q vertical retrievable items autos car reviews, product descriptions directory web page directory nodes finance financial data and corporate information games hosted online games health health-related articles images online images jobs job listings local business listings maps maps and directions movies movie show times music musician profiles news news articles reference encyclopedic entries shopping product reviews and listings sports sports articles, scores, and statistics travel travel and accommodation reviews and listings tv television listings video online videos We define single vertical selection as the following problem. Given query q, the objective is to predict a single relevant vertical,\u1e7dq \u2208 Vq, if one exists, and to predict the \"no relevant vertical\" class,\u1e7dq = \u2205, otherwise. Formally, we want to maximize single vertical precision,\nP = 1 |Q| 0 @ X q\u2208Q|Vq =\u2205 I(\u1e7dq \u2208 Vq) + X q\u2208Q|Vq =\u2205 I(\u1e7dq = \u2205) 1 A , (1\n)\nwhere I is the indicator function. The first term is the number of queries for which a relevant vertical was correctly predicted. The second term is the number of queries for which the \"no relevant vertical\" class was correctly predicted. We investigated the 18 verticals described in Table 1.", "publication_ref": [], "figure_ref": [], "table_ref": ["tab_0"]}, {"heading": "FEATURES", "text": "We investigated three sources of evidence for vertical selection: the query string, vertical-representative corpora (not necessarily composed of vertical documents), and queries previously issued to the vertical.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Query String Features", "text": "Perhaps the lowest effort approach to vertical selection operates on the query string alone, disregarding hits on vertical collections or previous queries issued directly to the vertical. Query string features aim to capitalize on key phrases used in explicit requests for vertical content (e.g. \"inauguration pictures\") and a possible correlation between named entity types and a vertical (e.g., music vertical queries may mention a musician). We define two types of query string features: rule-based vertical triggers and geographic features.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Rule-based vertical triggers", "text": "Rule-based vertical triggers are based on a set of 45 classes aimed to characterize the query's vertical intent (e.g.,local phone, product, person, weather, movies, driving direction, music artist). Some of these 45 triggers map conceptually one-to-one to a target vertical (e.g., movies \u2192 movies, autos \u2192 autos). Others map many-to-one (e.g., {sports players, sports} \u2192 sports, {product review, product} \u2192 shopping). Others do not map directly to a vertical, but may provide (positive or negative) evidence in a supervised classification framework (e.g., patent, events, weather ). Each trigger class is associated with hand-crafted rules using regular expressions and dictionary lookups. A query may be associated with multiple classes, each triggered if at least one rule in its inventory matches the query.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Geographic features", "text": "Geographic features were produced using a rule-based geographic annotation tool that outputs a probability vector for a set of geographic entities possibly appearing in the query. We focused on the following geographic entities: airport, colloquial (i.e., location information associated with a named entity, such as \"North Shore Bank\"), continent, country, county, estate, historical county, historical state, historical town, island, land feature, point of interest (e.g, Eiffel Tower), sports team, suburb, supername (i.e., a region name, such as Middle East), town, and zip code. We used the probability of each entity being present in the query as a separate feature. Geographic features are intended to inform classification into verticals whose queries often mention a location name, such as local, travel, and maps.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Query-Log Features", "text": "Query-log features use evidence from the queries previously issued to the vertical, which reflect the topics in the vertical that are of interest to users. For each vertical, we compute the query likelihood given by a unigram language model constructed from the vertical's query-log. Our querylog features (one per vertical) are defined by,\nQL q (Vi) = 1 Z P (q|\u03b8 qlog V i ),(2)\nwhere \u03b8 qlog V i is vertical Vi's query-log language model and Z = P V j \u2208V P (q|\u03b8 qlog V j ). We collected a year's worth of vertical query-logs for the year preceding the gathering of our evaluation query set. In addition, to inform classification into the \"no relevant vertical\" class, we also collected Web query-logs. Since Web search sees much more traffic than vertical search, we collected only a month's worth of Web query-logs. We used the CMU-Cambridge Language Modeling Toolkit 2 to build a unigram language model from each query-log. Each language model's vocabulary was defined by its most frequent 20000 unigrams and we used Witten-Bell smoothing [18].\nQuery-log features were evaluated under two conditions: allowing and disallowing zero probabilities from out of vocabulary (OOV) terms. In the first condition, a single OOV query term results in a zero probability from the vertical. In the second condition, P (OOV|\u03b8V i ) was estimated proportional to the frequency of terms not in the top 20000 in vertical Vi's query-log. Some of our target verticals did not have query-logs predating the collection of our evaluation query set. These included autos, maps, sports, and tv.", "publication_ref": ["b17"], "figure_ref": [], "table_ref": []}, {"heading": "Corpus Features", "text": "Corpus features are derived from document rankings obtained by issuing the query to different collections. Conducting a retrieval allows us to compare, for example, the number of retrieved documents from different verticals. In practice, issuing a query to all verticals can incur unnecessary query load on the vertical retrieval system. Therefore, we construct smaller, representative corpora of vertical content local to the vertical selector.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Constructing Representative Corpora", "text": "Before discussing our corpus-based features, we will describe two methods for creating representative corpora: sampling from the vertical and using surrogate corpora.\nDirect Sampling from the Vertical.\nQuery-based sampling [5] is a technique for sampling documents from collections assumed to provide only a queryin-documents-out interface. The most general query-based sampling approach iterates over the following steps. A singleterm query is used to retrieve documents from the collection. Then, the collection's content description is updated and a new single-term sampling query is selected from the updated content description. As documents are retrieved, the evolving resource description and, indirectly, new sampling queries are derived from retrieved documents. Shakouhi et al. show that using high-frequency query-log queries for sampling can produce more effective resource descriptions than queries derived from the sampled documents [15]. We follow a similar approach. While Shakouhi et al. use the same set of queries to sample from every collection, we use queries from vertical query-logs. Sampling with query-log queries has two effects. First, it decouples the sampling query from the sampled documents. Second, the sampled documents are biased towards those more likely to be seen by users. This is important when constructing small samples of large corpora if a significant part of the corpus is not of interest to users.\nWe used the following procedure to sample documents. First, we collected the top 100 documents returned by running each of the 1000 most frequent non-stopword querylog unigrams as a query. Then, we uniformly sampled at most 25000 documents from the union of these documents. Because we used vertical query-logs to sample vertical documents, verticals without query-logs preceding our evaluation queries also lacked a vertical-sampled collection. The \"no relevant vertical\" class does not have a vertical collection for sampling. We denote the set of documents sampled from vertical Vi by S vertical i .", "publication_ref": ["b4", "b14"], "figure_ref": [], "table_ref": []}, {"heading": "Sampling from Wikipedia.", "text": "An alternative to sampling directly from the verticals is to sample from an external collection, if documents can be mapped conceptually to verticals. We sampled documents from Wikipedia, making use of Wikipedia categories to map documents to verticals using regular expressions. Each article in Wikipedia belongs to one or more categories. For instance, a sample of documents representative of the autos vertical was gathered from articles assigned a Wikipedia category containing any of the terms \"Automobile\", \"Car\", and \"Vehicle\".\nWe do not claim that our mapping of Wikipedia documents to verticals is optimal. The risk of associating documents from an external collection to a vertical is misrepresenting the vertical's contents. However, sampling from Wikipedia may provide several advantages. First, Wikipedia is rich in text. Our corpus features, discussed next, are dependent on text richness. Documents typical of some verticals (used to represent the vertical in direct vertical sampling), such as images and video, tend to be text poor.\nSecond, Wikipedia articles have a consistent format, which makes comparing rankings across collections easier. Third, Wikipedia articles are usually semantically coherent and on topic.\nFor practical reasons, some verticals were not mapped to Wikipedia content. The directory vertical and the \"no relevant vertical\" class are too broad to be sensibly characterized by a set of Wikipedia categories while the maps vertical intersects semantically with local and travel. We denote the set of Wikipedia articles mapped to vertical Vi by S wiki i .", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Corpus-Based Features", "text": "Retrieval Effectiveness Features.\nPredicting retrieval effectiveness is the task of automatically assessing the quality of a retrieval without human relevance judgements. We applied an existing approach to predicting retrieval effectiveness, Clarity [7], to vertical selection. Our motivation is that a collection's predicted retrieval effectiveness with respect to a query may correlate with the collection's relevance to the query. Clarity measures the similarity between the language of the top ranked documents and the language of the collection, estimated using the Kullback-Leibler divergence between the query and collection language model, Clarity q (C) = X w\u2208V P (w|\u03b8q) log 2 P (w|\u03b8q) P (w|\u03b8C ) ,\nwhere V is the vocabulary of collection C and P (w|\u03b8q) and P (w|\u03b8C ) are the query and collection language models, respectively. The query language model was estimated from the top 100 documents, R100, according to, P (w|\u03b8q) = 1 Z P d\u2208R 100 P (w|\u03b8 d )P (q|\u03b8 d ),\nwhere P (q|\u03b8 d ) is the query likelihood score of document d, and Z = P d\u2208R 100 P (q|\u03b8 d ). The Clarity score becomes smaller as the top ranked documents approach a random sample from the collection (i.e., an ineffective retrieval).\nWe used two sets of Clarity features: one using collections of vertical-sampled documents and one using collections of Wikipedia-sampled documents. The final Clarity score for vertical Vi is given by,\nClarity * q (Vi) = 1 Z * Clarity q (S * i ),(5)\nwhere S * i denotes either S vertical i , the set of documents sampled from Vi, or S wiki i , the set of Wikipedia documents mapped to Vi and Z * = P V j \u2208V Clarity q (S * j ).", "publication_ref": ["b6"], "figure_ref": [], "table_ref": []}, {"heading": "ReDDE Features.", "text": "As previously mentioned, in federated search, resource selection is the problem of deciding which collections to search given a query. We adapted an existing approach to resource selection, ReDDE [17], to the task of vertical selection. ReDDE scores a target collection based on its expected number documents relevant to the query. It derives this expectation from a retrieval of a index that combines documents sampled from every target collection. Given this retrieval, ReDDE accumulates a collection's score from its document scores, taking into account the difference between the size of the original collection and sampled set size. As with Clarity features, we generated two sets of ReDDE features: one using vertical-sampled documents and one using Wikipedia-sampled documents. ReDDE scores vertical Vi according to,\nReDDE * q (Vi) = |Vi| X d\u2208R 100 I(d \u2208 S * i )P (q|\u03b8 d )P (d|S * i ), (6)\nwhere,\nP (d|S * i ) = 1 |S * i | . (7\n)\nThe term |Vi| is the number of documents in vertical Vi and S * i denotes either S vertical i , the documents sampled directly from Vi, or S wiki i , the Wikipedia documents mapped to Vi. We normalize across vertical-and Wikipedia-sampled ReDDE features such that\nP V j \u2208V ReDDE * q (Vj) = 1.\nSoft.ReDDE Features.\nReDDE requires a hard assignment of documents to verticals. When sampling from verticals, this assignment is trivial-a document represents the vertical from which it originates. When sampling from non-vertical collections (e.g., Wikipedia), this assignment is not trivial, and we risk misrepresenting a vertical's contents. We experimented with a novel approach similar to ReDDE. Soft.ReDDE computes a soft membership of a document to a vertical, \u03c6(d, Vi), based the correlation between the document language model, \u03b8 d , and vertical language model, \u03b8V i , estimated using the vertical's query-log. We used the Bhattacharyya correlation [3], defined by,\nB(d, Vi) = X w p P (w|\u03b8 d )P (w|\u03b8V i ),(8)\nand normalize across verticals,\n\u03c6(d, Vi) = B(d, Vi) P V j \u2208V B(d, Vj) .(9)\nSoft.ReDDE scores a vertical by the sum of documents scores, P (q|\u03b8 d ), weighted by the document's similarity to the vertical,\nSoft.ReDDEq(Vi) = X d\u2208R 100 \u03c6(d, Vi) \u00d7 P (q|\u03b8 d ).(10)\nWe normalize Soft.ReDDE features across verticals such that\nP V j \u2208V Soft.ReDDEq(Vj) = 1.\nCompared to ReDDE, Soft.ReDDE has two potential benefits. First, every document in the ranking contributes, more or less, depending on its correlation, to a vertical's score. Second, it is not necessary to manually map documents to verticals, so external collections can be used more freely. In our implementation, we used the full English Wikipedia.\nClarity, ReDDE, and Soft.ReDDE features used the Indri IR toolkit. 3 ", "publication_ref": ["b16", "b2", "b2"], "figure_ref": [], "table_ref": []}, {"heading": "Categorical Features.", "text": "Categorical features were derived from the topical categories automatically assigned to the top 100 documents returned when issuing the query to a general Web index. Each document in the index is assigned, using a maximum entropy text classifier, at most three categories, resembling 3 http://www.lemurproject.org/indri/ nodes from the Online Directory Project (ODP) ontology (e.g., \"recreation/sports/basketball\"). Categorical features were divided into two distinct sets: general (depth one) category features (e.g., \"recreation\", \"science\", \"health\") and specific (depth two) category features, each which describes a subcategory of a general category (e.g. \"recreation/travel\", \"recreation/sports\", \"health/nutrition\"). Each category prediction on a document is associated with a confidence value. We set the value of category feature yi (of depth x) to be the sum of confidence values over all occurrences of the category in the top 100 documents, CATq(yi) = X d\u2208R 100 X y j \u2208Y d I`yi = depth x (yj)\u00b4\u00d7 P (yj|D), (11) where R100 denotes the top 100 documents, Y d denotes the categories associated with document d, P (yj|d) is the confidence of predicted category yj on document d, and function depth x (yj) returns the depth x ancestor of category yj. For example, depth 1 (\"recreation/sports\") returns \"recreation\". We focused on 14 general category features and 42 specific category features-the union of categories for the queries in our training set. In general, we expect the set of category features to depend on the queries the system is likely to encounter and the target verticals.", "publication_ref": ["b10"], "figure_ref": [], "table_ref": []}, {"heading": "VERTICAL SELECTION ALGORITHMS", "text": "", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Single Feature Runs", "text": "We evaluated 8 single-evidence baselines: The four combinations of Clarity and ReDDE with vertical-and Wikipediasampled collections, the query likelihood given the vertical's query-log language model (allowing and disallowing zero probabilities), Soft.ReDDE, and an approach that always predicts the \"no relevant vertical\" class. These vertical scoring functions were uniformly adapted for single vertical selection by normalizing across vertical scores and selecting the top vertical,\u1e7d, if its score exceeds a threshold, \u03c4 , or else predicting \"no relevant vertical\".\nv = ( argmax V i scoreq(Vi) if maxV i 1 Z scoreq(Vi) > \u03c4 \u2205 otherwise ,\nwhere Z = P V j \u2208V scoreq(Vj) and the empty set \u2205 denotes a \"no relevant vertical\" prediction. Parameter \u03c4 was set using a 500 query validation set", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Feature Combination Run", "text": "For our multiple feature approach, we trained a multiclass classifier using all features. We trained 19 one-versus-all logistic regression models (one for each of our 18 verticals and one for the \"no relevant vertical\" class) using the liblinear toolkit 4 . We complemented the \"no relevant vertical\" classifier using the confidence of the 18 binary vertical classifiers using parameter \u03c4 .\nThese classifiers were combined by predicting vertical\u1e7d according to,  where PV i (Y = 1|q) is the probability of a positive prediction from vertical Vi's classifier. If the most confident vertical classifier predicts its vertical with confidence below \u03c4 , we default to the \"no relevant vertical\" class. All features were scaled to zero minimum and unit maximum. Features associated one-to-one with a vertical (Clarity, ReDDE, the query likelihood given the vertical's query-log and Soft.ReDDE) were normalized across verticals before scaling. Supervised training/testing was done via 10-fold cross validation. Parameter \u03c4 was tuned for each training fold on the same 500 query validation set used for our single feature baselines.\nv = ( argmax V i PV i (Y = 1|q) if maxV i PV i (Y =", "publication_ref": ["b3"], "figure_ref": [], "table_ref": []}, {"heading": "DATA", "text": "Our evaluation data consisted of 25195 unique queries obtained from a commercial search engine's query-log. Human editors were instructed to assign between zero and six relevant verticals per query based on their best guess of the user's vertical intent. About 70% of queries were assigned either a single relevant vertical or no relevant vertical. About 26% of queries, mostly navigational (e.g., \"myspace\"), were assigned \"no relevant vertical\" and 44% were assigned a single relevant vertical. Some queries assigned multiple relevant verticals were ambiguous in terms vertical intent (e.g., query \"hairspray\" was assigned verticals movies, video, and shopping). Table 2 shows the vertical distribution.", "publication_ref": [], "figure_ref": [], "table_ref": ["tab_2"]}, {"heading": "EVALUATION", "text": "We evaluated single vertical selection in terms of precision, P (see Equation 1), defined as the percentage of queries for which we either correctly predict a relevant vertical or correctly predict \"no relevant vertical\". Because we make a single prediction when there are potentially multiple relevant verticals, a recall-flavored performance measure has undesirable properties. For example, if two verticals are perfectly correlated in terms of the queries for which they are relevant, then a classifier that chooses the same vertical each time maximizes our objective (i.e, it selects a correct vertical each time) but recall would be perfect for one vertical and zero for the other. We also show % coverage (% cov), defined as the percentage of queries for which a vertical was predicted (correctly or incorrectly). Significance was tested using a 2-tailed paired t-test on queries.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "RESULTS", "text": "Results for single vertical selection are shown in Table 3. The no.rel approach obtained P = 0.263 because 26.3% of queries had no true relevant vertical. Both Clarity using vertical-and Wikipedia-sampled collections performed significantly worse than no.rel. Clarity scores for a given query may not be directly comparable across collections  with different corpus statistics. In prior work, Clarity has been used to compare retrievals from different queries on the same collection, but not retrievals from the same query on different collections. Further experiments are needed to determine whether Clarity can be adapted for vertical selection. ReDDE using vertical-sampled documents outperformed ReDDE using Wikipedia-sampled documents, in spite of more verticals having a Wikipedia-sampled collection than a vertical-sampled collection. We examined the types of classification errors each algorithm performed. Both approaches performed comparably with respect to the \"no relevant vertical\" class. However, redde.wiki more often predicted a wrong vertical. Precision on queries for which a vertical was predicted was 0.382 for redde.vertical and 0.284 for redde.wiki. Our mapping of Wikipedia categories to verticals may have misrepresented one or more vertical. The query likelihood given the vertical's query-log language model was the best single-evidence predictor. This method performed better when allowing than when disallowing zero probabilities. This may have been due to the non-uniformity of P (OOV) estimates across vertical language models. Each vertical's P (OOV) estimate was based on the frequency of terms not in its top 20000, expected to be greater for verticals with a more open vocabulary. A vertical's P (OOV) estimate affects the probability estimates of within vocabulary terms through discounting. Different P (OOV) estimates across verticals may have made the query likelihood given by different vertical language models less comparable.\nFinally, our multiple-feature supervised approach (LR) outperformed all single-feature baselines by a large margin-a 58% improvement over the best single-evidence predictor, q.log. Such a performance improvement may justify the cost of producing training data in the form of vertical relevance judgements on queries. Our supervised framework has several potential advantages. First, as our results show, it can integrate multiple sources of evidence. Second, by combining vertical-specific classifiers, single-evidence scores (e.g., ReDDE or Clarity) need not be directly comparable across verticals. For example, a classifier may learn to ignore a high ReDDE score if it is unreliable, perhaps due to poor sampling. Third, by sharing all features among verticalspecific base classifiers, a classifier may benefit from another vertical's score if they are correlated.", "publication_ref": [], "figure_ref": [], "table_ref": ["tab_4"]}, {"heading": "DISCUSSION", "text": "In this section, we explore the contribution of different fea-  ture sets on precision (P). A feature set is said to contribute significantly if the classifier's performance drops significantly upon removing the feature set.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Final Prediction Precision", "text": "We analyze each feature set's contribution to final prediction precision. We divide this analysis into two parts. First, we do a \"leave one feature type out\" analysis. Second, we do a \"leave one sampled corpus out\" analysis, where we compare the contribution of corpus features using vertical-vs Wikipedia-sampled documents.\nTable 4 shows the change in precision associated with each feature type. Keep in mind that features were not evaluated in isolation. A non-significant performance drop in P does not necessarily mean the feature captures no useful evidence, as features may be correlated.\nIn terms of feature types, omitting q.log, triggers, and clarity.* features did not produce a significant drop in P. It is possible that q.log features, the best single-evidence predictor, did not contribute significantly because they are correlated with soft.redde features, which did contribute significantly. A positive trigger class was predicted only for 4367 (18%) queries, suffering from low coverage. Clarity scores for the same query may not be directly comparable across collections.\nCorpus-based features contributed the most. The largest contribution came from cat.specific features. Interestingly, categorical features are not derived from resources associated with a vertical (i.e., vertical documents or queries). The classifier learns to associate these features with a vertical from training data. The contribution of cat.specific features was significantly greater than that of cat.general features because cat.general categories were too coarse to discriminate between some verticals. For example, the general category recreation conflates recreation/sports, recreation/auto, and recreation/travel, which map conceptually to different verticals. The second and third most helpful features were soft.redde and redde.* features, respectively.\nTo evaluate the usefulness of evidence derived directly from the vertical, we omitted ReDDE and Clarity features using our vertical-sampled collections (no.vertical.corpus). Likewise, to evaluate the usefulness of evidence derived from  surrogate corpora, we omitted ReDDE and Clarity features using our Wikipedia-sampled collections (no.wiki.corpus). Removing either set of features produced a significant drop in P. Vertical-and Wikipedia-sampled collections were sampled using different techniques and have a different collection size distribution. Thus, we cannot (and did not intend to) directly compare one against the other. This result, however, shows that surrogate collections can provide evidence complementary to that derived directly from the vertical.", "publication_ref": [], "figure_ref": [], "table_ref": ["tab_6"]}, {"heading": "Per Vertical Precision", "text": "Table 5 shows precision per vertical/class using all our features, listed in descending order of precision. Column \"% true\" is the percentage of queries with the vertical as a true relevant vertical. Column \"% cov\" is the percentage of queries with the vertical as the predicted relevant vertical. Note that the \"% true\" column does not sum to one because queries may have more than one true relevant vertical. Column \"% cov\" does sum to one because a single vertical/class was predicted per query. Although \"% cov\" can be expected to be less than \"% true\", ideally they should be comparable.\nAs previously noted, some verticals lacked query-logs (+) and/or a Wikipedia-sampled surrogate corpus ( * ). Verticals autos, sports, and tv performed well in spite of lacking features derived from query-logs. Verticals video, news, and reference performed poorly in spite of having all resources. Therefore, the difference in performance across verticals cannot be attributed only to missing features.\nThe system performed best on verticals that focus on a coherent topic with identifiable vocabulary (i.e., travel, health, games, music). The vocabulary associated with these verticals may have been the least confusable with that of other verticals. Precision was higher for these verticals than verticals shopping and reference and the \"no relevant vertical\" class, which had more positive examples for training.\nThe system performed worst on the verticals images, video, news, reference, maps, and directory. The maps vertical had the fewest positive instances for training, was feature-impoverished, and probably confusable with local and travel. Verticals images and video focus on a type of media rather than a specific genre. Queries related to reference and directory characterize broad encyclopedic information needs. The news vertical tends to be highly dynamic and may require features related to bursts in content demand, possibly derived from same-day vertical query-logs.\nWith respect to the \"no relevant vertical\" class, coverage was high and precision was below 50%. Although our evaluation metric weights all false positive errors equally, in some cases a \"no relevant vertical\" false positive may be less costly than a vertical false positive. A user may be more annoyed by seeing a non-relevant vertical display than by not seeing a relevant vertical display. Of our misclassifications on queries with at least one true relevant vertical (|Vq| > 0), 57% of the time we incorrectly predicted \"no relevent vertical\" and 43% a non-relevant vertical.", "publication_ref": [], "figure_ref": [], "table_ref": ["tab_8"]}, {"heading": "CONCLUSIONS", "text": "In the context of resource selection for federated search, this work contributes several meaningful results. First, most prior work in resource selection has studied corpus-based evidence derived from the target collections. The use of collection-specific query-logs for resource selection has not been previously studied. This is in part because in an uncooperative environment, query-logs of searchable collections may be inaccessible. Our results show that in vertical selection, a type of cooperative federated search, query-logs are useful. Ranking verticals by the query likelihood given the vertical's query-log language model was the best singleevidence predictor. In our supervised model, query-logs were used successfully to sample from vertical collections and to associate non-vertical documents (i.e., Wikipedia articles) with vertical collections. Second, some verticals (e.g., video) are likely to be text-impoverished. We presented methods for successfully associating non-vertical, text-rich documents with verticals, which makes it possible to use existing techniques (e.g., ReDDE) for vertical selection. Finally, most prior work in resource selection has focused on unsupervised or weakly supervised collection ranking methods. Our classification-based approach to vertical selection allows us to combine features without manually associating them with a vertical. For example, our categorical and geographic features, which are not derived from a vertical resource, contribute significantly to prediction accuracy. This work could be extended in several directions. Our corpus and query-log features are derived from external resources. Although the proposed approach requires training data, it may not be necessary to retrain the model frequently, as long as the external resources used to compute these features reflect changes in the vertical's relevance to a topic. Models that use only query string features may have to be retrained more frequently. Future work might empirically evaluate the robustness of non-lexical features derived from external resources in a dynamic environment. Also, some verticals are bound to be resource-impoverished (e.g., lack query-logs or text-rich documents) and may require incorporating user feedback into the selection model.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "ACKNOWLEDGMENTS", "text": "We would like to thank Jean Fran\u00e7ois Beaumont, Daniel Boies, Hugues Bouchard, Deborah Donato, Rosie Jones, Remi Kwan, Vanessa Murdock, Jian-Yun Nie, Jean Fran\u00e7ois Paiement, and Alexandre Rochette for helpful discussions and feedback. This work was supported in part by the NSF grant IIS-0841275 and a generous gift from Yahoo!. Any opinions, findings, conclusions, and recommendations expressed in this paper are the authors' and do not necessarily reflect those of the sponsors.", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Improving automatic query classification via semi-supervised learning", "journal": "", "year": "2005", "authors": "S M Beitzel; E C Jensen; O Frieder; D D Lewis; A Chowdhury; A Kolcz"}, {"ref_id": "b1", "title": "Automatic classification of web queries using very large unlabeled query logs", "journal": "TOIS", "year": "2007", "authors": "S M Beitzel; E C Jensen; D D Lewis; A Chowdhury; O Frieder"}, {"ref_id": "b2", "title": "On a measure of divergence between two statistical populations defined by probability distributions", "journal": "Bull. Calcutta Math. Soc", "year": "1943", "authors": "A Bhattacharyya"}, {"ref_id": "b3", "title": "Distributed information retrieval", "journal": "Kluwer Academic Publishers", "year": "2000", "authors": "J Callan"}, {"ref_id": "b4", "title": "Query-based sampling of text databases", "journal": "TOIS", "year": "2001", "authors": "J Callan; M Connell"}, {"ref_id": "b5", "title": "Searching distributed collections with inference networks", "journal": "", "year": "1995", "authors": "J P Callan; Z Lu; W B Croft"}, {"ref_id": "b6", "title": "Predicting query performance", "journal": "", "year": "2002", "authors": "S Cronen-Townsend; Y Zhou; W B Croft"}, {"ref_id": "b7", "title": "Integration of News Content Into Web Results", "journal": "", "year": "2009", "authors": "F Diaz"}, {"ref_id": "b8", "title": "Gloss: Text-source discovery over the internet", "journal": "Transactions on Database Systems", "year": "1999", "authors": "L Gravano; H Garca-Molina; A Tomasic; I Rocquencourt; N L Gravano"}, {"ref_id": "b9", "title": "Learning query intent from regularized click graphs", "journal": "", "year": "2008", "authors": "X Li; Y.-Y. Wang; A Acero"}, {"ref_id": "b10", "title": "Kdd cup-2005 report: facing a great challenge", "journal": "SIGKDD Explor. Newsl", "year": "2005", "authors": "Y Li; Z Zheng; H K Dai"}, {"ref_id": "b11", "title": "SIGIR 2008 Workshop on Aggregated Search", "journal": "", "year": "2008", "authors": "V Murdock; M Lalmas"}, {"ref_id": "b12", "title": "Q2c@ust: our winning solution to query classification in kddcup", "journal": "SIGKDD Explor. Newsl", "year": "2005", "authors": "D Shen; R Pan; J.-T Sun; J J Pan; K Wu; J Yin; Q Yang"}, {"ref_id": "b13", "title": "Building bridges for web query classification", "journal": "", "year": "2006", "authors": "D Shen; J.-T Sun; Q Yang; Z Chen"}, {"ref_id": "b14", "title": "Using query logs to establish vocabularies in distributed information retrieval", "journal": "Inf. Process. Manage", "year": "2007", "authors": "M Shokouhi; J Zobel; S Tahaghoghi; F Scholer"}, {"ref_id": "b15", "title": "Federated Search of Text Search Engines in Uncooperative Environments", "journal": "", "year": "2006", "authors": "L Si"}, {"ref_id": "b16", "title": "Relevant document distribution estimation method for resource selection", "journal": "", "year": "2003", "authors": "L Si; J Callan"}, {"ref_id": "b17", "title": "The zero-frequency problem: Estimating the probabilities of novel events in adaptive text compression", "journal": "Transactions on Information Theory", "year": "1991", "authors": "I H Witten; T C Bell"}, {"ref_id": "b18", "title": "Cluster-based language models for distributed retrieval", "journal": "ACM", "year": "1999", "authors": "J Xu; W B Croft"}, {"ref_id": "b19", "title": "Server ranking for distributed text retrieval systems on the internet", "journal": "World Scientific Press", "year": "1997", "authors": "B Yuwono; D L Lee"}], "figures": [{"figure_label": "1", "figure_type": "table", "figure_id": "tab_0", "figure_caption": "Vertical descriptions.", "figure_data": ""}, {"figure_label": "2", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "Percentage of queries assigned each vertical.Percentages do not sum to one because queries can be assigned more than one relevant vertical", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_3", "figure_caption": "0% redde.wiki 0.293 \u2021 54.4% q.log 0.312 \u2021 61.9% soft.redde 0.324 \u2021 43.6% redde.vertical 0.336 \u2021 45.7% q.log (zero probs) 0.368 \u2021 51.0% LR 0.583 \u2021 64.3%", "figure_data": "P% covclarity.vertical0.2543.4%clarity.wiki 0.256  \u20202.7%no.rel 0.263  \u20210."}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_4", "figure_caption": "Single Vertical Precision (P). Approaches are listed in ascending order of P. A significant improvement over all worse-performing approaches is indicated with a \u2020 at the p < 0.05 level and a \u2021 at the p < 0.005 level.", "figure_data": ""}, {"figure_label": "4", "figure_type": "table", "figure_id": "tab_6", "figure_caption": "Feature Set Contribution. A \u2021 denotes a sig-", "figure_data": "nificant improvement (p < 0.005) over all, our classifierusing all features"}, {"figure_label": "5", "figure_type": "table", "figure_id": "tab_8", "figure_caption": "Per vertical precision (P). Pmacro is the average of per vertical P. Verticals without a query-log are marked with +. Verticals without a Wikipedia-sampled surrogate corpus are marked with * .", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "P = 1 |Q| 0 @ X q\u2208Q|Vq =\u2205 I(\u1e7dq \u2208 Vq) + X q\u2208Q|Vq =\u2205 I(\u1e7dq = \u2205) 1 A , (1", "formula_coordinates": [3.0, 53.8, 321.48, 235.39, 30.45]}, {"formula_id": "formula_1", "formula_text": ")", "formula_coordinates": [3.0, 289.19, 333.73, 3.92, 7.86]}, {"formula_id": "formula_2", "formula_text": "QL q (Vi) = 1 Z P (q|\u03b8 qlog V i ),(2)", "formula_coordinates": [3.0, 378.75, 357.37, 177.17, 19.74]}, {"formula_id": "formula_5", "formula_text": "Clarity * q (Vi) = 1 Z * Clarity q (S * i ),(5)", "formula_coordinates": [4.0, 363.7, 521.53, 192.22, 19.74]}, {"formula_id": "formula_6", "formula_text": "ReDDE * q (Vi) = |Vi| X d\u2208R 100 I(d \u2208 S * i )P (q|\u03b8 d )P (d|S * i ), (6)", "formula_coordinates": [5.0, 58.93, 104.67, 233.97, 21.59]}, {"formula_id": "formula_7", "formula_text": "P (d|S * i ) = 1 |S * i | . (7", "formula_coordinates": [5.0, 131.81, 148.43, 157.18, 21.55]}, {"formula_id": "formula_8", "formula_text": ")", "formula_coordinates": [5.0, 288.99, 154.23, 3.92, 7.86]}, {"formula_id": "formula_9", "formula_text": "P V j \u2208V ReDDE * q (Vj) = 1.", "formula_coordinates": [5.0, 163.37, 216.76, 102.09, 12.86]}, {"formula_id": "formula_10", "formula_text": "B(d, Vi) = X w p P (w|\u03b8 d )P (w|\u03b8V i ),(8)", "formula_coordinates": [5.0, 94.95, 385.06, 197.95, 20.41]}, {"formula_id": "formula_11", "formula_text": "\u03c6(d, Vi) = B(d, Vi) P V j \u2208V B(d, Vj) .(9)", "formula_coordinates": [5.0, 109.46, 428.4, 183.45, 22.98]}, {"formula_id": "formula_12", "formula_text": "Soft.ReDDEq(Vi) = X d\u2208R 100 \u03c6(d, Vi) \u00d7 P (q|\u03b8 d ).(10)", "formula_coordinates": [5.0, 72.48, 495.32, 220.43, 21.59]}, {"formula_id": "formula_13", "formula_text": "P V j \u2208V Soft.ReDDEq(Vj) = 1.", "formula_coordinates": [5.0, 53.8, 533.78, 120.55, 12.07]}, {"formula_id": "formula_14", "formula_text": "v = ( argmax V i scoreq(Vi) if maxV i 1 Z scoreq(Vi) > \u03c4 \u2205 otherwise ,", "formula_coordinates": [5.0, 327.07, 478.83, 218.58, 23.97]}, {"formula_id": "formula_15", "formula_text": "v = ( argmax V i PV i (Y = 1|q) if maxV i PV i (Y =", "formula_coordinates": [5.0, 318.61, 671.17, 195.1, 17.43]}], "doi": ""}