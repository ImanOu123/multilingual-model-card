{"title": "Hancock: A Language for Extracting Signatures from Data Streams", "authors": "Kathleen Fisher; Karin H\u00f6gstedt", "pub_date": "", "abstract": "", "sections": [{"heading": "", "text": "AT&T Infolab Whole data analysis Individualized analysis: Signatures\n\u2022 Anomaly detection: fraud, access arbitrage, etc.\n\u2022 Classification problems: target marketing, biz/res, etc.\nTechnical challenge:\n\u2022 Massive data sets and real-time queries \u21d2 Hard I/O and storage requirements \u21d2 Complex programs (hard to read, write, and maintain).\nSolution:\n\u2022 A system that reduces the complexity of signature programs. ", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Hancock", "text": "\u2022 Identified abstractions for computing with large data streams.\n\u2022 Embedded these abstractions in Hancock, a C-based domain-specific programming language.\n\u2022 Built experimental and production signatures using a number of different data streams.\n\u2022 Intended as an experiment in practical language design. \u2022 An event detection function:\ntakes a window onto a stream returns a munion that describes the detected events. -Based on CKIT C-to-C translator (SML/NJ).\n\u2022 Runtime system:\n-Written in C. -Map representation is essentially a stripped-down database.\n-Goal: balance space limits against access-time requirements.\n\u2022 Available for non-commercial use. Why a language?\n\u2022 Disadvantages:\n-Limited scope -New language (albeit one based on C).\n-Lack of tools, e.g.source-level debuggers, profilers, etc.\n\u2022 Advantages:\n-Static type-checking\n\u2022 protects data integrity and promotes clarity of use -High-level and tailored abstractions\n\u2022 reduce code size, hide issues of scale, and provide a framework for structuring applications.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Code sizes", "text": "Maps: 5 to 200 lines.\nStreams: 110 to 250 lines.\nIterate statement: 70 to 330 lines.\nViews: 5 to 30 lines.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Communities of Interest", "text": "Used to detect 800 subscription fraud.\n\u2022 Known fraudster \u2022 Inbound calls \u2022 Outbound calls", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Compare with database implementations (DBPL 2001) \u2022 Allow users to specify streams declaratively (see PADS)", "journal": "", "year": "", "authors": ""}, {"ref_id": "b1", "title": "\u2022 Add support for variable-width data (urls)", "journal": "", "year": "", "authors": ""}, {"ref_id": "b2", "title": "References: \u2022Domain Specific Languages Conference", "journal": "", "year": "1999", "authors": ""}, {"ref_id": "b3", "title": "\u2022Knowledge Discovery and Data Mining Conference", "journal": "", "year": "2000", "authors": ""}, {"ref_id": "b4", "title": "\u2022Databases and Programming Languages workshop", "journal": "", "year": "2001", "authors": ""}, {"ref_id": "b5", "title": "", "journal": "\u2022Transactions on Programming Languages and Systems", "year": "2004", "authors": ""}], "figures": [], "formulas": [], "doi": ""}