{"title": "Gaussian Process Optimization in the Bandit Setting: No Regret and Experimental Design", "authors": "Niranjan Srinivas; Andreas Krause; Sham M Kakade; Matthias Seeger", "pub_date": "2010-06-09", "abstract": "Many applications require optimizing an unknown, noisy function that is expensive to evaluate. We formalize this task as a multiarmed bandit problem, where the payoff function is either sampled from a Gaussian process (GP) or has low RKHS norm. We resolve the important open problem of deriving regret bounds for this setting, which imply novel convergence rates for GP optimization. We analyze GP-UCB, an intuitive upper-confidence based algorithm, and bound its cumulative regret in terms of maximal information gain, establishing a novel connection between GP optimization and experimental design. Moreover, by bounding the latter in terms of operator spectra, we obtain explicit sublinear regret bounds for many commonly used covariance functions. In some important cases, our bounds have surprisingly weak dependence on the dimensionality. In our experiments on real sensor data, GP-UCB compares favorably with other heuristical GP optimization approaches.", "sections": [{"heading": "Introduction", "text": "In most stochastic optimization settings, evaluating the unknown function is expensive, and sampling is to be minimized.\nExamples include choosing advertisements in sponsored search to maximize profit in a click-through model (Pandey & Olston, 2007) or learning optimal control strategies for robots (Lizotte et al., 2007).\nPredominant approaches to this problem include the multi-armed bandit paradigm (Robbins, 1952), where the goal is to maximize cumulative reward by optimally balancing exploration and exploitation, and experimental design (Chaloner & Verdinelli, 1995), where the function is to be explored globally with as few evaluations as possible, for example by maximizing information gain. The challenge in both approaches is twofold: we have to estimate an unknown function f from noisy samples, and we must optimize our estimate over some high-dimensional input space. For the former, much progress has been made in machine learning through kernel methods and Gaussian process (GP) models (Rasmussen & Williams, 2006), where smoothness assumptions about f are encoded through the choice of kernel in a flexible nonparametric fashion. Beyond Euclidean spaces, kernels can be defined on diverse domains such as spaces of graphs, sets, or lists.\nWe are concerned with GP optimization in the multiarmed bandit setting, where f is sampled from a GP distribution or has low \"complexity\" measured in terms of its RKHS norm under some kernel. We provide the first sublinear regret bounds in this nonparametric setting, which imply convergence rates for GP optimization. In particular, we analyze the Gaussian Process Upper Confidence Bound (GP-UCB) algorithm, a simple and intuitive Bayesian method (Auer et al., 2002;Auer, 2002;Dani et al., 2008). While objectives are different in the multi-armed bandit and experimental design paradigm, our results draw a close technical connection between them: our regret bounds come in terms of an information gain quantity, measuring how fast f can be learned in an information theoretic sense. The submodularity of this function allows us to prove sharp regret bounds for particular covariance functions, which we demonstrate for commonly used Squared Exponential and Mat\u00e9rn kernels.\nRelated Work. Our work generalizes stochastic linear optimization in a bandit setting, where the unknown function comes from a finite-dimensional linear space. GPs are nonlinear random functions, which can be represented in an infinite-dimensional linear space. For the standard linear setting, Dani et al. (2008) provide a near-complete characterization 1 (also see Auer 2002;Dani et al. 2007;Abernethy et al. 2008;Rusmevichientong & Tsitsiklis 2008), explicitly dependent on the dimensionality. In the GP setting, the challenge is to characterize complexity in a different manner, through properties of the kernel function. Our technical contributions are twofold: first, we show how to analyze the nonlinear setting by focusing on the concept of information gain, and second, we explicitly bound this information gain measure using the concept of submodularity (Nemhauser et al., 1978) and knowledge about kernel operator spectra. Kleinberg et al. (2008) provide regret bounds under weaker and less configurable assumptions (only Lipschitz-continuity w.r.t. a metric is assumed; Bubeck et al. 2008 consider arbitrary topological spaces), which however degrade rapidly with the dimensionality of the problem (\u2126(T d+1 d+2 )). In practice, linearity w.r.t. a fixed basis is often too stringent an assumption, while Lipschitz-continuity can be too coarse-grained, leading to poor rate bounds. Adopting GP assumptions, we can model levels of smoothness in a fine-grained way. For example, our rates for the frequently used Squared Exponential kernel, enforcing a high degree of smoothness, have weak dependence on the dimensionality: O( T (log T ) d+1 ) (see Fig. 1).\nThere is a large literature on GP (response surface) optimization. Several heuristics for trading off exploration and exploitation in GP optimization have been proposed (such as Expected Improvement, Mockus et al. 1978, andMost Probable Improvement, Mockus 1989) and successfully applied in practice (c.f., Lizotte et al. 2007). Brochu et al. (2009) provide a comprehensive review of and motivation for Bayesian optimization using GPs. The Efficient Global Optimization (EGO) algorithm for optimizing expensive black-box functions is proposed by Jones et al. (1998) and extended to GPs by Huang et al. (2006). Little is known about theoretical performance of GP optimization. While convergence of EGO is established by Vazquez & Bect (2007), convergence rates have remained elusive. Gr\u00fcnew\u00e4lder et al. (2010) consider the pure exploration problem for GPs, where the goal is to find the optimal decision over T rounds, rather than maximize cumulative reward (with no exploration/exploitation dilemma). They provide sharp bounds for this exploration problem. Note that this methodology would not lead to bounds for minimizing the cumulative regret. Our cumulative regret bounds translate to the first performance guarantees (rates) for GP optimization.", "publication_ref": ["b24", "b19", "b26", "b5", "b25", "b2", "b1", "b8", "b8", "b1", "b7", "b0", "b27", "b23", "b15", "b4", "b22", "b19", "b3", "b14", "b13", "b32", "b12"], "figure_ref": [], "table_ref": []}, {"heading": "Summary. Our main contributions are:", "text": "\u2022 We analyze GP-UCB, an intuitive algorithm for GP optimization, when the function is either sam-", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Kernel", "text": "Linear kernel\nRBF Mat\u00e9rn kernel Regret R T T (log T ) d+1 T \u03bd+d(d+1) 2\u03bd+d(d+1) d \u221a T Figure 1.\nOur regret bounds (up to polylog factors) for linear, radial basis, and Mat\u00e9rn kernels -d is the dimension, T is the time horizon, and \u03bd is a Mat\u00e9rn parameter.\npled from a known GP, or has low RKHS norm.\n\u2022 We bound the cumulative regret for GP-UCB in terms of the information gain due to sampling, establishing a novel connection between experimental design and GP optimization.\n\u2022 By bounding the information gain for popular classes of kernels, we establish sublinear regret bounds for GP optimization for the first time.\nOur bounds depend on kernel choice and parameters in a fine-grained fashion.\n\u2022 We evaluate GP-UCB on sensor network data, demonstrating that it compares favorably to existing algorithms for GP optimization.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Problem Statement and Background", "text": "Consider the problem of sequentially optimizing an unknown reward function f : D \u2192 R: in each round t, we choose a point x t \u2208 D and get to see the function value there, perturbed by noise: y t = f (x t ) + t . Our goal is to maximize the sum of rewards T t=1 f (x t ), thus to perform essentially as well as x * = argmax x\u2208D f (x) (as rapidly as possible). For example, we might want to find locations of highest temperature in a building by sequentially activating sensors in a spatial network and regressing on their measurements. D consists of all sensor locations, f (x) is the temperature at x, and sensor accuracy is quantified by the noise variance. Each activation draws battery power, so we want to sample from as few sensors as possible.\nRegret. A natural performance metric in this context is cumulative regret, the loss in reward due to not knowing f 's maximum points beforehand. Suppose the unknown function is f , its maximum point 1 x * = argmax x\u2208D f (x). For our choice x t in round t, we incur instantaneous regret r t = f (x * ) \u2212 f (x t ). The cumulative regret R T after T rounds is the sum of instantaneous regrets: R T = T t=1 r t . A desirable asymptotic property of an algorithm is to be no-regret: lim T \u2192\u221e R T /T = 0. Note that neither r t nor R T are ever revealed to the algorithm. Bounds on the average regret R T /T translate to convergence rates for GP optimization: the maximum max t\u2264T f (x t ) in the first T rounds is no further from f (x * ) than the average.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Gaussian Processes and RKHS's", "text": "Gaussian Processes. Some assumptions on f are required to guarantee no-regret. While rigid parametric assumptions such as linearity may not hold in practice, a certain degree of smoothness is often warranted. In our sensor network, temperature readings at closeby locations are highly correlated (see Figure 2(a)). We can enforce implicit properties like smoothness without relying on any parametric assumptions, modeling f as a sample from a Gaussian process (GP): a collection of dependent random variables, one for each x \u2208 D, every finite subset of which is multivariate Gaussian distributed in an overall consistent way (Rasmussen & Williams, 2006). A GP (\u00b5(x), k(x, x )) is specified by its mean function \u00b5\n(x) = E[f (x)] and covariance (or kernel) function k(x, x ) = E[(f (x) \u2212 \u00b5(x))(f (x ) \u2212 \u00b5(x ))].\nFor GPs not conditioned on data, we assume 2 that \u00b5 \u2261 0. Moreover, we restrict k(x, x) \u2264 1, x \u2208 D, i.e., we assume bounded variance. By fixing the correlation behavior, the covariance function k encodes smoothness properties of sample functions f drawn from the GP. A range of commonly used kernel functions is given in Section 5.2.\nIn this work, GPs play multiple roles. First, some of our results hold when the unknown target function is a sample from a known GP distribution GP(0, k(x, x )). Second, the Bayesian algorithm we analyze generally uses GP(0, k(x, x )) as prior distribution over f . A major advantage of working with GPs is the existence of simple analytic formulae for mean and covariance of the posterior distribution, which allows easy implementation of algorithms. For a noisy sample y T = [y 1 . . . y T ] T at points A T = {x 1 , . . . , x T }, y t = f (x t )+ t with t \u223c N (0, \u03c3 2 ) i.i.d. Gaussian noise, the posterior over f is a GP distribution again, with mean \u00b5 T (x), covariance k T (x, x ) and variance \u03c3 2 T (x):\n\u00b5 T (x) = k T (x) T (K T + \u03c3 2 I) \u22121 y T ,(1)\nk T (x, x ) = k(x, x ) \u2212 k T (x) T (K T + \u03c3 2 I) \u22121 k T (x ), \u03c3 2 T (x) = k T (x, x), (2\n)\nwhere k T (x) = [k(x 1 , x) . . . k(x T , x)] T and K T is the positive definite kernel matrix [k(x, x )] x,x \u2208A T .\nRKHS. Instead of the Bayes case, where f is sampled from a GP prior, we also consider the more agnostic case where f has low \"complexity\" as measured under an RKHS norm (and distribution free assumptions on the noise process). The notion of reproducing kernel Hilbert spaces (RKHS, Wahba 1990) is intimately related to GPs and their covariance functions k(x, x ). The RKHS H k (D) is a complete subspace of L 2 (D) of nicely behaved functions, with an inner product \u2022, \u2022 k obeying the reproducing property: f, k(x, \u2022) k = f (x) for all f \u2208 H k (D). It is literally constructed by completing the set of mean functions \u00b5 T for all possible T , {x t }, and y T . The induced RKHS norm f k = f, f k measures smoothness of f w.r.t. k: in much the same way as k 1 would generate smoother samples than k 2 as GP covariance functions,\n\u2022 k1 assigns larger penalties than \u2022 k2 . \u2022, \u2022 k can be extended to all of L 2 (D), in which case f k < \u221e iff f \u2208 H k (D). For most kernels discussed in Section 5.2, members of H k (D) can uniformly approximate any continuous function on any compact subset of D.", "publication_ref": ["b25", "b33"], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "Information Gain & Experimental Design", "text": "One approach to maximizing f is to first choose points x t so as to estimate the function globally well, then play the maximum point of our estimate. How can we learn about f as rapidly as possible? This question comes down to Bayesian Experimental Design (henceforth \"ED\"; see Chaloner & Verdinelli 1995), where the informativeness of a set of sampling points A \u2282 D about f is measured by the information gain (c.f., Cover & Thomas 1991), which is the mutual information between f and observations y A = f A + A at these points:\nI(y A ; f ) = H(y A ) \u2212 H(y A |f ),(3)\nquantifying the reduction in uncertainty about f from revealing y A . Here, f A = [f (x)] x\u2208A and \u03b5 A \u223c N (0, \u03c3 2 I). For a Gaussian, H(N (\u00b5, \u03a3)) = 1 2 log |2\u03c0e\u03a3|, so that in our setting I(y A ; f ) = I(y A ; f A ) = 1 2 log |I + \u03c3 \u22122 K A |, where K A = [k(x, x )] x,x \u2208A . While finding the information gain maximizer among A \u2282 D, |A| \u2264 T is NP-hard (Ko et al., 1995), it can be approximated by an efficient greedy algorithm. If F (A) = I(y A ; f ), this algorithm picks x t = argmax x\u2208D F (A t\u22121 \u222a{x}) in round t, which can be shown to be equivalent to\nx t = argmax x\u2208D \u03c3 t\u22121 (x),(4)\nwhere A t\u22121 = {x 1 , . . . , x t\u22121 }. Importantly, this simple algorithm is guaranteed to find a near-optimal solution: for the set A T obtained after T rounds, we have that\nF (A T ) \u2265 (1 \u2212 1/e) max |A|\u2264T F (A),(5)\nat least a constant fraction of the optimal information gain value. This is because F (A) satisfies a diminishing returns property called submodularity (Krause & Guestrin, 2005), and the greedy approximation guarantee (5) holds for any submodular function (Nemhauser et al., 1978).\nWhile sequentially optimizing Eq. 4 is a provably good way to explore f globally, it is not well suited for func-tion optimization. For the latter, we only need to identify points x where f (x) is large, in order to concentrate sampling there as rapidly as possible, thus exploit our knowledge about maxima. In fact, the ED rule (4) does not even depend on observations y t obtained along the way. Nevertheless, the maximum information gain after T rounds will play a prominent role in our regret bounds, forging an important connection between GP optimization and experimental design.", "publication_ref": ["b5", "b6", "b16", "b18", "b23"], "figure_ref": [], "table_ref": []}, {"heading": "GP-UCB Algorithm", "text": "For sequential optimization, the ED rule (4) can be wasteful: it aims at decreasing uncertainty globally, not just where maxima might be. Another idea is to pick points as x t = argmax x\u2208D \u00b5 t\u22121 (x), maximizing the expected reward based on the posterior so far. However, this rule is too greedy too soon and tends to get stuck in shallow local optima. A combined strategy is to choose\nx t = argmax x\u2208D \u00b5 t\u22121 (x) + \u03b2 1/2 t \u03c3 t\u22121 (x),(6)\nwhere \u03b2 t are appropriate constants. This latter objective prefers both points x where f is uncertain (large \u03c3 t\u22121 (\u2022)) and such where we expect to achieve high rewards (large \u00b5 t\u22121 (\u2022)): it implicitly negotiates the exploration-exploitation tradeoff. A natural interpretation of this sampling rule is that it greedily selects points x such that f (x) should be a reasonable upper bound on f (x * ), since the argument in ( 6) is an upper quantile of the marginal posterior P (f (x)|y t\u22121 ). We call this choice the Gaussian process upper confidence bound rule (GP-UCB), where \u03b2 t is specified depending on the context (see Section 4). Pseudocode for the GP-UCB algorithm is provided in Algorithm 1. Figure 2 illustrates two subsequent iterations, where GP-UCB both explores (Figure 2(b)) by sampling an input x with large \u03c3 2 t\u22121 (x) and exploits (Figure 2(c)) by sampling x with large \u00b5 t\u22121 (x).\nThe GP-UCB selection rule Eq. 6 is motivated by the UCB algorithm for the classical multi-armed bandit problem (Auer et al., 2002;Kocsis & Szepesv\u00e1ri, 2006). Among competing criteria for GP optimization (see Section 1), a variant of the GP-UCB rule has been demonstrated to be effective for this application (Dorard et al., 2009). To our knowledge, strong theoretical results of the kind provided for GP-UCB in this paper have not been given for any of these search heuristics. In Section 6, we show that in practice GP-UCB compares favorably with these alternatives.\nIf D is infinite, finding x t in (6) may be hard: the upper confidence index is multimodal in general. However, global search heuristics are very effective in practice (Brochu et al., 2009). It is generally assumed Algorithm 1 The GP-UCB algorithm.\nInput:\nInput space D; GP Prior \u00b5 0 = 0, \u03c3 0 , k for t = 1, 2, . . . do Choose x t = argmax x\u2208D \u00b5 t\u22121 (x) + \u03b2 t \u03c3 t\u22121 (x)\nSample y t = f (x t ) + t Perform Bayesian update to obtain \u00b5 t and \u03c3 t end for that evaluating f is more costly than maximizing the UCB index.\nUCB algorithms (and GP optimization techniques in general) have been applied to a large number of problems in practice (Kocsis & Szepesv\u00e1ri, 2006;Pandey & Olston, 2007;Lizotte et al., 2007). Their performance is well characterized in both the finite arm setting and the linear optimization setting, but no convergence rates for GP optimization are known.", "publication_ref": ["b2", "b17", "b9", "b3", "b17", "b24", "b19"], "figure_ref": ["fig_0", "fig_0", "fig_0"], "table_ref": []}, {"heading": "Regret Bounds", "text": "We now establish cumulative regret bounds for GP optimization, treating a number of different settings:\nf \u223c GP(0, k(x, x )) for finite D, f \u223c GP(0, k(x, x ))\nfor general compact D, and the agnostic case of arbitrary f with bounded RKHS norm.\nGP optimization generalizes stochastic linear optimization, where a function f from a finite-dimensional linear space is optimized over. For the linear case, Dani et al. (2008) provide regret bounds that explicitly depend on the dimensionality 3 d. GPs can be seen as random functions in some infinite-dimensional linear space, so their results do not apply in this case. This problem is circumvented in our regret bounds. The quantity governing them is the maximum information gain \u03b3 T after T rounds, defined as:\n\u03b3 T := max A\u2282D:|A|=T I(y A ; f A ),(7)\nwhere\nI(y A ; f A ) = I(y A ; f ) is defined in (3). Recall that I(y A ; f A ) = 1 2 log |I + \u03c3 \u22122 K A |, where K A = [k(x, x )] x,x \u2208A is the covariance matrix of f A = [f (x)] x\u2208A associated with the samples A. Our regret bounds are of the form O * ( \u221a T \u03b2 T \u03b3 T )\n, where \u03b2 T is the confidence parameter in Algorithm 1, while the bounds of Dani et al. (2008)  significant technical challenges. Besides avoiding the finite-dimensional analysis, we must handle confidence issues, which are more delicate for nonlinear random functions.\nImportantly, note that the information gain is a problem dependent quantity -properties of both the kernel and the input space will determine the growth of regret. In Section 5, we provide general methods for bounding \u03b3 T , either by efficient auxiliary computations or by direct expressions for specific kernels of interest. Our results match known lower bounds (up to log factors) in both the K-armed bandit and the d-dimensional linear optimization case.\nBounds for a GP Prior. For finite D, we obtain the following bound.\nTheorem 1 Let \u03b4 \u2208 (0, 1) and \u03b2 t = 2 log(|D|t 2 \u03c0 2 /6\u03b4).\nRunning GP-UCB with \u03b2 t for a sample f of a GP with mean function zero and covariance function k(x, x ), we obtain a regret bound of O * ( T \u03b3 T log |D|) with high probability. Precisely,\nPr R T \u2264 C 1 T \u03b2 T \u03b3 T \u2200T \u2265 1 \u2265 1 \u2212 \u03b4.\nwhere\nC 1 = 8/ log(1 + \u03c3 \u22122 ).\nThe proof methodology follows Dani et al. (2007) in that we relate the regret to the growth of the log volume of the confidence ellipsoid -a novelty in our proof is showing how this growth is characterized by the information gain.\nThis theorem shows that, with high probability over samples from the GP, the cumulative regret is bounded in terms of the maximum information gain, forging a novel connection between GP optimization and experimental design. This link is of fundamental technical importance, allowing us to generalize Theorem 1 to infinite decision spaces. Moreover, the submodularity of I(y A ; f A ) allows us to derive sharp a priori bounds, depending on choice and parameterization of k (see Section 5). In the following theorem, we generalize our result to any compact and convex D \u2282 R d under mild assumptions on the kernel function k.\nTheorem 2 Let D \u2282 [0, r] d be compact and convex, d \u2208 N, r > 0. Suppose that the kernel k(x, x ) satisfies the following high probability bound on the derivatives of GP sample paths f : for some constants a, b > 0,\nPr {sup x\u2208D |\u2202f /\u2202x j | > L} \u2264 ae \u2212(L/b) 2 , j = 1, . . . , d.\nPick \u03b4 \u2208 (0, 1), and define \u03b2 t = 2 log(t 2 2\u03c0 2 /(3\u03b4)) + 2d log t 2 dbr log(4da/\u03b4) .\nRunning the GP-UCB with \u03b2 t for a sample f of a GP with mean function zero and covariance function k(x, x ), we obtain a regret bound of O * ( \u221a dT \u03b3 T ) with high probability. Precisely, with C 1 = 8/ log(1 + \u03c3 \u22122 ) we have\nPr R T \u2264 C 1 T \u03b2 T \u03b3 T + 2 \u2200T \u2265 1 \u2265 1 \u2212 \u03b4.\nThe main challenge in our proof (provided in the Appendix) is to lift the regret bound in terms of the confidence ellipsoid to general D. The smoothness assumption on k(x, x ) disqualifies GPs with highly erratic sample paths. It holds for stationary kernels k(x, x ) = k(x \u2212 x ) which are four times differentiable (Theorem 5 of Ghosal & Roy (2006)), such as the Squared Exponential and Mat\u00e9rn kernels with \u03bd > 2 (see Section 5.2), while it is violated for the Ornstein-Uhlenbeck kernel (Mat\u00e9rn with \u03bd = 1/2; a stationary variant of the Wiener process). For the latter, sample paths f are nondifferentiable almost everywhere with probability one and come with independent increments. We conjecture that a result of the form of Theorem 2 does not hold in this case.\nBounds for Arbitrary f in the RKHS. Thus far, we have assumed that the target function f is sampled from a GP prior and that the noise is N (0, \u03c3 2 ) with known variance \u03c3 2 . We now analyze GP-UCB in an agnostic setting, where f is an arbitrary function from the RKHS corresponding to kernel k(x, x ). Moreover, we allow the noise variables \u03b5 t to be an arbitrary martingale difference sequence (meaning that E[\u03b5 t | \u03b5 <t ] = 0 for all t \u2208 N), uniformly bounded by \u03c3. Note that we still run the same GP-UCB algorithm, whose prior and noise model are misspecified in this case. Our following result shows that GP-UCB attains sublinear regret even in the agnostic setting.\nTheorem 3 Let \u03b4 \u2208 (0, 1). Assume that the true underlying f lies in the RKHS H k (D) corresponding to the kernel k(x, x ), and that the noise \u03b5 t has zero mean conditioned on the history and is bounded by \u03c3 almost surely. In particular, assume f 2 k \u2264 B and let \u03b2 t = 2B + 300\u03b3 t log 3 (t/\u03b4). Running GP-UCB with \u03b2 t , prior GP (0, k(x, x )) and noise model N (0, \u03c3 2 ), we obtain a regret bound of O * ( \u221a T (B \u221a \u03b3 T + \u03b3 T )) with high probability (over the noise). Precisely,\nPr R T \u2264 C 1 T \u03b2 T \u03b3 T \u2200T \u2265 1 \u2265 1 \u2212 \u03b4,\nwhere\nC 1 = 8/ log(1 + \u03c3 \u22122 ).\nNote that while our theorem implicitly assumes that GP-UCB has knowledge of an upper bound on f k , standard guess-and-doubling approaches suffice if no such bound is known a priori. Comparing Theorem 2 and Theorem 3, the latter holds uniformly over all functions f with f k < \u221e, while the former is a probabilistic statement requiring knowledge of the GP that f is sampled from. In contrast, if f \u223c GP(0, k(x, x )), then f k = \u221e almost surely (Wahba, 1990): sample paths are rougher than RKHS functions. Neither Theorem 2 nor 3 encompasses the other.", "publication_ref": ["b8", "b8", "b7", "b11", "b33"], "figure_ref": [], "table_ref": []}, {"heading": "Bounding the Information Gain", "text": "Since the bounds developed in Section 4 depend on the information gain, the key remaining question is how to bound the quantity \u03b3 T for practical classes of kernels.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Submodularity and Greedy Maximization", "text": "In order to bound \u03b3 T , we have to maximize the information gain F (A) = I(y A ; f ) over all subsets A \u2282 D of size T : a combinatorial problem in general. However, as noted in Section 2, F (A) is a submodular function, which implies the performance guarantee (5) for maximizing F sequentially by the greedy ED rule (4). Dividing both sides of ( 5) by 1\u22121/e, we can upper-bound \u03b3 T by (1 \u2212 1/e) \u22121 I(y A T ; f ), where A T is constructed by the greedy procedure. Thus, somewhat counterintuitively, instead of using submodularity to prove that F (A T ) is near-optimal, we use it in order to show that \u03b3 T is \"near-greedy\". As noted in Section 2, the ED rule does not depend on observations y t and can be run without evaluating f .\nThe importance of this greedy bound is twofold. First, it allows us to numerically compute highly problem-specific bounds on \u03b3 T , which can be plugged into our results in Section 4 to obtain high-probability bounds on R T . This being a laborious procedure, one would prefer a priori bounds for \u03b3 T in practice which are simple analytical expressions of T and parameters of k. In this section, we sketch a general procedure for obtaining such expressions, instantiating them for a number of commonly used covariance functions, once more relying crucially on the greedy ED rule upper bound. Suppose that D is finite for now, and\nlet f = [f (x)] x\u2208D , K D = [k(x, x )] x,x \u2208D . Sampling f at x t , we obtain y t \u223c N (v T t f , \u03c3 2 )\n, where v t \u2208 R |D| is the indicator vector associated with x t . We can upper-bound the greedy maximum once more, by relaxing this constraint to v t = 1 in round t of the sequential method. For this relaxed greedy procedure, all v t are leading eigenvectors of K D , since successive covariance matrices of P (f |y t\u22121 ) share their eigenbasis with K D , while eigenvalues are damped according to how many times the corresponding eigenvector is selected. We can upper-bound the information gain by considering the worst-case allocation of T samples to the min{T, |D|} leading eigenvectors of K D :\n\u03b3 T \u2264 1/2 1 \u2212 e \u22121 max (mt) |D| t=1 log(1 + \u03c3 \u22122 m t\u03bbt ),(8)\nsubject to t m t = T , and spec(K D ) = {\u03bb 1 \u2265\u03bb 2 \u2265 . . . }. We can split the sum into two parts in order to obtain a bound to leading order. The following Theorem captures this intuition:\nTheorem 4 For any T \u2208 N and any T * = 1, . . . , T :\n\u03b3 T \u2264 O \u03c3 \u22122 [B(T * )T + T * (log n T T )] ,\nwhere\nn T = |D| t=1\u03bb t and B(T * ) = |D| t=T * +1\u03bb t .\nTherefore, if for some T * = o(T ) the first T * eigenvalues carry most of the total mass n T , the information gain will be small. The more rapidly the spectrum of K D decays, the slower the growth of \u03b3 T . Figure 3 illustrates this intuition.", "publication_ref": [], "figure_ref": ["fig_1"], "table_ref": []}, {"heading": "Bounds for Common Kernels", "text": "In this section we bound \u03b3 T for a range of commonly used covariance functions: finite dimensional linear, Squared Exponential and Mat\u00e9rn kernels. Together with our results in Section 4, these imply sublinear regret bounds for GP-UCB in all cases. Finite dimensional linear kernels have the form k(x, x ) = x T x . GPs with this kernel correspond to random linear functions f (x) = w T x, w \u223c N (0, I).\nThe Squared Exponential kernel is k(x, x ) = exp(\u2212(2l 2 ) \u22121 x \u2212 x 2\n), l a lengthscale parameter. Sample functions are differentiable to any order almost surely (Rasmussen & Williams, 2006).\nThe Mat\u00e9rn kernel is given by k(x, x ) = (2 1\u2212\u03bd /\u0393(\u03bd))r \u03bd B \u03bd (r), r = ( \u221a 2\u03bd/l) x \u2212 x ,\nwhere \u03bd controls the smoothness of sample paths (the smaller, the rougher) and B \u03bd is a modified Bessel function. Note that as \u03bd \u2192 \u221e, appropriately rescaled Mat\u00e9rn kernels converge to the Squared Exponential kernel.\nFigure 4 shows random functions drawn from GP distributions with the above kernels. 3. Power law spectral decay. For Mat\u00e9rn kernels with \u03bd > 1:\n\u03b3 T = O T d(d+1)/(2\u03bd+d(d+1)) (log T ) .\nA proof of Theorem 5 is given in the Appendix, , we only sketch the idea here. \u03b3 T is bounded by Theorem 4 in terms the eigendecay of the kernel matrix K D . If D is infinite or very large, we can use the operator spectrum of k(x, x ), which likewise decays rapidly. For the kernels of interest here, asymptotic expressions for the operator eigenvalues are given in Seeger et al. (2008), who derived bounds on the information gain for fixed and random designs (in contrast to the worst-case information gain considered here, which is substantially more challenging to bound). The main challenge in the proof is to ensure the existence of discretizations D T \u2282 D, dense in the limit, for which tail sums B(T * )/n T in Theorem 4 are close to corresponding operator spectra tail sums.\nTogether with Theorems 2 and 3, this result guarantees sublinear regret of GP-UCB for any dimension (see Figure 1). For the Squared Exponential kernel, the dimension d appears as exponent of log T only, so that the regret grows at most as\nO * ( \u221a T (log T )d+1\n2 ) -the high degree of smoothness of the sample paths effectively combats the curse of dimensionality.", "publication_ref": ["b25", "b28"], "figure_ref": [], "table_ref": []}, {"heading": "Experiments", "text": "We compare GP-UCB with heuristics such as the Expected Improvement (EI) and Most Probable Improvement (MPI), and with naive methods which choose points of maximum mean or variance only, both on synthetic and real sensor network data.\nFor synthetic data, we sample random functions from a squared exponential kernel with lengthscale parameter 0.2. The sampling noise variance \u03c3 2 was set to 0.025 or 5% of the signal variance. Our decision set D = [0, 1] is uniformly discretized into 1000 points. We run each algorithm for T = 1000 iterations with \u03b4 = 0.1, averaging over 30 trials (samples from the kernel). While the choice of \u03b2 t as recommended by Theorem 1 leads to competitive performance of GP-UCB, we find (using cross-validation) that the algorithm is improved by scaling \u03b2 t down by a factor 5. Note that we did not optimize constants in our regret bounds.\nNext, we use temperature data collected from 46 sensors deployed at Intel Research Berkeley over 5 days at 1 minute intervals, pertaining to the example in Section 2. We take the first two-thirds of the data set to compute the empirical covariance of the sensor readings, and use it as the kernel matrix. The functions f for optimization consist of one set of observations from all the sensors taken from the remaining third of the  data set, and the results (for T = 46, \u03c3 2 = 0.5 or 5% noise, \u03b4 = 0.1) were averaged over 2000 possible choices of the objective function.\nLastly, we take data from traffic sensors deployed along the highway I-880 South in California. The goal was to find the point of minimum speed in order to identify the most congested portion of the highway; we used traffic speed data for all working days from 6 AM to 11 AM for one month, from 357 sensors. We again use the covariance matrix from two-thirds of the data set as kernel matrix, and test on the other third. The results (for T = 357, \u03c3 2 = 4.78 or 5% noise, \u03b4 = 0.1) were averaged over 900 runs.\nFigure 5 compares the mean average regret incurred by the different heuristics and the GP-UCB algorithm on synthetic and real data. For temperature data, the GP-UCB algorithm and EI heuristic clearly outperform the others, and do not exhibit significant difference between each other. On synthetic and traffic data MPI does equally well. In summary, GP-UCB performs at least on par with the existing approaches which are not equipped with regret bounds.", "publication_ref": [], "figure_ref": ["fig_2"], "table_ref": []}, {"heading": "Conclusions", "text": "We prove the first sublinear regret bounds for GP optimization with commonly used kernels (see Figure 1), both for f sampled from a known GP and f of low RKHS norm. We analyze GP-UCB, an intuitive, Bayesian upper confidence bound based sampling rule.\nOur regret bounds crucially depend on the information gain due to sampling, establishing a novel connection between bandit optimization and experimental design. We bound the information gain in terms of the kernel spectrum, providing a general methodology for obtaining regret bounds with kernels of interest. Our experiments on real sensor network data indicate that GP-UCB performs at least on par with competing criteria for GP optimization, for which no regret bounds are known at present. Our results provide an interesting step towards understanding exploration-exploitation tradeoffs with complex utility functions.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A. Regret Bounds for Target Function Sampled from GP", "text": "In this section, we provide details for the proofs of Theorem 1 and Theorem 2. In both cases, the strategy is to show that |f (x) \u2212 \u00b5 t\u22121 (x\n)| \u2264 \u03b2 1/2 t \u03c3 t\u22121 (\nx) for all t \u2208 N and all x \u2208 D, or in the infinite case, all x in a discretization of D which becomes dense as t gets large.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A.1. Finite Decision Set", "text": "We begin with the finite case, |D| < \u221e.\nLemma 5.1 Pick \u03b4 \u2208 (0, 1) and set \u03b2 t = 2 log(|D|\u03c0 t /\u03b4), where t\u22651 \u03c0 \u22121\nt = 1, \u03c0 t > 0. Then, |f (x) \u2212 \u00b5 t\u22121 (x)| \u2264 \u03b2 1/2 t \u03c3 t\u22121 (x) \u2200x \u2208 D \u2200t \u2265 1 holds with probability \u2265 1 \u2212 \u03b4.\nProof Fix t \u2265 1 and x \u2208 D. Conditioned on y t\u22121 = (y 1 , . . . , y t\u22121 ), {x 1 , . . . , x t\u22121 } are deterministic, and f (x) \u223c N (\u00b5 t\u22121 (x), \u03c3 2 t\u22121 (x)). Now, if r \u223c N (0, 1), then Pr{r > c} = e \u2212c 2 /2 (2\u03c0) \u22121/2 e \u2212(r\u2212c) 2 /2\u2212c(r\u2212c) dr\n\u2264 e \u2212c 2 /2 Pr{r > 0} = (1/2)e \u2212c 2 /2 for c > 0, since e \u2212c(r\u2212c) \u2264 1 for r \u2265 c. Therefore, Pr{|f (x) \u2212 \u00b5 t\u22121 (x)| > \u03b2 1/2 t \u03c3 t\u22121 (x)} \u2264 e \u2212\u03b2t/2 , using r = (f (x)\u2212\u00b5 t\u22121 (x))/\u03c3 t\u22121 (x) and c = \u03b2 1/2 t . Applying the union bound, |f (x) \u2212 \u00b5 t\u22121 (x)| \u2264 \u03b2 1/2 t \u03c3 t\u22121 (x) \u2200x \u2208 D holds with probability \u2265 1 \u2212 |D|e \u2212\u03b2t/2 .\nChoosing |D|e \u2212\u03b2t/2 = \u03b4/\u03c0 t and using the union bound for t \u2208 N, the statement holds. For example, we can use \u03c0 t = \u03c0 2 t 2 /6.\nLemma 5.2 Fix t \u2265 1. If |f (x) \u2212 \u00b5 t\u22121 (x)| \u2264 \u03b2 1/2 t \u03c3 t\u22121 (x) for all x \u2208 D, then the regret r t is bounded by 2\u03b2 1/2 t \u03c3 t\u22121 (x t ). Proof By definition of x t : \u00b5 t\u22121 (x t ) + \u03b2 1/2 t \u03c3 t\u22121 (x t ) \u2265 \u00b5 t\u22121 (x * ) + \u03b2 1/2 t \u03c3 t\u22121 (x * ) \u2265 f (x * ). Therefore, r t = f (x * ) \u2212 f (x t ) \u2264 \u03b2 1/2 t \u03c3 t\u22121 (x t ) + \u00b5 t\u22121 (x t ) \u2212 f (x t ) \u2264 2\u03b2 1/2 t \u03c3 t\u22121 (x t ).\nLemma 5.3 The information gain for the points selected can be expressed in terms of the predictive variances. If f T = (f (x t )) \u2208 R T :\nI(y T ; f T ) = 1 2 T t=1 log 1 + \u03c3 \u22122 \u03c3 2 t\u22121 (x t ) . Proof Recall that I(y T ; f T ) = H(y T ) \u2212 (1/2) log |2\u03c0e\u03c3 2 I|. Now, H(y T ) = H(y T \u22121 ) + H(y T |y T \u22121 ) = H(y T \u22121 ) + log(2\u03c0e(\u03c3 2 + \u03c3 2 t\u22121 (x T )))/2.\nHere, we use that x 1 , . . . , x T are deterministic conditioned on y T \u22121 , and that the conditional variance \u03c3 2\nT \u22121 (x T ) does not depend on y T \u22121 . The result follows by induction.\nLemma 5.4 Pick \u03b4 \u2208 (0, 1) and let \u03b2 t be defined as in Lemma 5.1. Then, the following holds with probability \u2265 1 \u2212 \u03b4:\nT t=1 r 2 t \u2264 \u03b2 T C 1 I(y T ; f T ) \u2264 C 1 \u03b2 T \u03b3 T \u2200T \u2265 1,\nwhere\nC 1 := 8/ log(1 + \u03c3 \u22122 ) \u2265 8\u03c3 2 .\nProof By Lemma 5.1 and Lemma 5.2, we have that \n{r 2 t \u2264 4\u03b2 t \u03c3 2 t\u22121 (x t ) \u2200t \u2265 1} with probability \u2265 1 \u2212 \u03b4. Now, \u03b2 t is nondecreasing, so that 4\u03b2 t \u03c3 2 t\u22121 (x t ) \u2264 4\u03b2 T \u03c3 2 (\u03c3 \u22122 \u03c3 2 t\u22121 (x t )) \u2264 4\u03b2 T \u03c3 2 C 2 log(1 + \u03c3 \u22122 \u03c3 2 t\u22121 (x t )) with C 2 = \u03c3 \u22122 / log(1 + \u03c3 \u22122 ) \u2265 1, since s 2 \u2264 C 2 log(1 + s 2 ) for s \u2208 [0, \u03c3 \u22122 ], and \u03c3 \u22122 \u03c3 2 t\u22121 (x t ) \u2264 \u03c3 \u22122 k(x t , x t ) \u2264 \u03c3 \u22122 . Noting that C 1 = 8\u03c3 2 C 2 ,", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A.2. General Decision Set", "text": "Theorem 2 extends the statement of Theorem 1 to the general case of D \u2282 R d compact. We cannot expect this generalization to work without any assumptions on the kernel k(x, x ). For example, if k(x, x ) = e \u2212 x\u2212x (Ornstein-Uhlenbeck), while sample paths f are a.s. continuous, they are still very erratic: f is a.s. nondifferentiable almost everywhere, and the process comes with independent increments, a stationary variant of Brownian motion. The additional assumption on k in Theorem 2 is rather mild and is satisfied by several common kernels, as discussed in Section 4.\nRecall that the finite case proof is based on Lemma 5.1 paving the way for Lemma 5.2. However, Lemma 5.1 does not hold for infinite D. First, let us observe that we have confidence on all decisions actually chosen.\nLemma 5.5 Pick \u03b4 \u2208 (0, 1) and set \u03b2 t = 2 log(\u03c0 t /\u03b4),\nwhere t\u22651 \u03c0 \u22121 t = 1, \u03c0 t > 0. Then, |f (x t ) \u2212 \u00b5 t\u22121 (x t )| \u2264 \u03b2 1/2 t \u03c3 t\u22121 (x t ) \u2200t \u2265 1 holds with probability \u2265 1 \u2212 \u03b4. Proof Fix t \u2265 1 and x \u2208 D. Conditioned on y t\u22121 = (y 1 , . . . , y t\u22121 ), {x 1 , . . . , x t\u22121 } are determin- istic, and f (x) \u223c N (\u00b5 t\u22121 (x), \u03c3 2 t\u22121 (x)). As before, Pr{|f (x t ) \u2212 \u00b5 t\u22121 (x t )| > \u03b2 1/2 t \u03c3 t\u22121 (x t )} \u2264 e \u2212\u03b2t/2 .\nSince e \u2212\u03b2t/2 = \u03b4/\u03c0 t and using the union bound for t \u2208 N, the statement holds.\nPurely for the sake of analysis, we use a set of discretizations D t \u2282 D, where D t will be used at time t in the analysis. Essentially, we use this to obtain a valid confidence interval on x * . The following lemma provides a confidence bound for these subsets.\nLemma 5.6 Pick \u03b4 \u2208 (0, 1) and set \u03b2 t = 2 log(|D t |\u03c0 t /\u03b4), where t\u22651 \u03c0 \u22121\nt = 1, \u03c0 t > 0. Then, |f (x) \u2212 \u00b5 t\u22121 (x)| \u2264 \u03b2 1/2 t \u03c3 t\u22121 (x) \u2200x \u2208 D t , \u2200t \u2265 1 holds with probability \u2265 1 \u2212 \u03b4.\nProof The proof is identical to that in Lemma 5.1, except now we use D t at each timestep. Now by assumption and the union bound, we have that\nPr {\u2200j, \u2200x \u2208 D, |\u2202f /(\u2202x j )| < L} \u2265 1 \u2212 dae \u2212L 2 /b 2 .\nwhich implies that, with probability greater than 1 \u2212 dae \u2212L 2 /b 2 , we have that\n\u2200x \u2208 D, |f (x) \u2212 f (x )| \u2264 L x \u2212 x 1 .(9)\nThis allows us to obtain confidence on x as follows.\nNow let us choose a discretization D t of size (\u03c4 t ) d so that for all x \u2208 D t\nx \u2212 [x] t 1 \u2264 rd/\u03c4 t where [x] t denotes the closest point in D t to x. A sufficient discretization has each coordinate with \u03c4 t uniformly spaced points.\nLemma 5.7 Pick \u03b4 \u2208 (0, 1) and set \u03b2 t = 2 log(2\u03c0 t /\u03b4) + 4d log(dtbr log(2da/\u03b4)), where\nt\u22651 \u03c0 \u22121 t = 1, \u03c0 t > 0. Let \u03c4 t = dt 2 br log(2da/\u03b4) Let [x * ] t denotes the closest point in D t to x * . Hence, Then, |f (x * ) \u2212 \u00b5 t\u22121 ([x * ] t )| \u2264 \u03b2 1/2 t \u03c3 t\u22121 ([x * ] t ) + 1 t 2 \u2200t \u2265 1 holds with probability \u2265 1 \u2212 \u03b4.\nProof Using (9), we have that with probability greater than 1 \u2212 \u03b4/2,\n\u2200x \u2208 D, |f (x) \u2212 f (x )| \u2264 b log(2da/\u03b4) x \u2212 x 1 . Hence, \u2200x \u2208 D t , |f (x) \u2212 f ([x] t )| \u2264 rdb log(2da/\u03b4)/\u03c4 t .\nNow by choosing \u03c4 t = dt 2 br log(2da/\u03b4), we have that\n\u2200x \u2208 D t , |f (x) \u2212 f ([x] t )| \u2264 1 t 2\nThis implies that |D t | = (dt 2 br log(2da/\u03b4)) d . Using \u03b4/2 in Lemma 5.6, we can apply the confidence bound to [x * ] t (as this lives in D t ) to obtain the result. Now we are able to bound the regret.\nLemma 5.8 Pick \u03b4 \u2208 (0, 1) and set \u03b2 t = 2 log(4\u03c0 t /\u03b4) + 4d log(dtbr log(4da/\u03b4)), where\nt\u22651 \u03c0 \u22121 t = 1, \u03c0 t > 0.\nThen, with probability greater than 1 \u2212 \u03b4, for all t \u2208 N, the regret is bounded as follows:\nr t \u2264 2\u03b2 1/2 t \u03c3 t\u22121 (x t ) + 1 t 2 .\nProof We use \u03b4/2 in both Lemma 5.5 and Lemma 5.7, so that these events hold with probability greater than 1 \u2212 \u03b4. Note that the specification of \u03b2 t in the above lemma is greater than the specification used in Lemma 5.5 (with \u03b4/2), so this choice is valid.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "By definition of x", "text": "t : \u00b5 t\u22121 (x t ) + \u03b2 1/2 t \u03c3 t\u22121 (x t ) \u2265 \u00b5 t\u22121 ([x * ] t ) + \u03b2 1/2 t \u03c3 t\u22121 ([x * ] t ). Also, by Lemma 5.7, we have that \u00b5 t\u22121 ([x * ] t )+\u03b2 1/2 t \u03c3 t\u22121 ([x * ] t )+1/t 2 \u2265 f (x * ), which implies \u00b5 t\u22121 (x t ) + \u03b2 1/2 t \u03c3 t\u22121 (x t ) \u2265 f (x * ) \u2212 1/t 2 . Therefore, r t = f (x * ) \u2212 f (x t ) \u2264 \u03b2 1/2 t \u03c3 t\u22121 (x t ) + 1/t 2 + \u00b5 t\u22121 (x t ) \u2212 f (x t ) \u2264 2\u03b2 1/2 t \u03c3 t\u22121 (x t ) + 1/t 2 .\nwhich completes the proof. Now we are ready to complete the proof of Theorem 2. As shown in the proof of Lemma 5.4, we have that with probability greater than 1 \u2212 \u03b4,\nT t=1 4\u03b2 t \u03c3 2 t\u22121 (x t ) \u2264 C 1 \u03b2 T \u03b3 T \u2200T \u2265 1,\nso that by Cauchy-Schwarz:\nT t=1 2\u03b2 1/2 t \u03c3 t\u22121 (x t ) \u2264 C 1 T \u03b2 T \u03b3 T \u2200T \u2265 1, Hence, T t=1 r t \u2264 C 1 T \u03b2 T \u03b3 T + \u03c0 2 /6 \u2200T \u2265 1,\n(since 1/t 2 = \u03c0 2 /6). Theorem 2 now follows.\nFinally, we now discuss the additional assumption on k in Theorem 2. For samples f of the GP, consider partial derivatives \u2202f /(\u2202x j ) of this sample path for j = 1, . . . , d. Theorem 5 of Ghosal & Roy (2006) states that if derivatives up to fourth order exists for (x, x ) \u2192 k(x, x ), then f is almost surely continuously differentiable, with \u2202f /(\u2202x j ) distributed as Gaussian processes again. Moreover, there are constants a, b j > 0 such that Pr sup\nx\u2208D |\u2202f /(\u2202x j )| > L \u2264 ae \u2212bj L 2 . (10\n)\nPicking L = [log(da2/\u03b4)/ min j b j ] 1/2 , we have that ae \u2212bj L 2 \u2264 \u03b4/(2d) for all j = 1, . . . , d, so that for\nK 1 = d 1/2 L, by the mean value theorem, we have Pr{|f (x)\u2212f (x )| \u2264 K 1 x\u2212x \u2200 x, x \u2208 D} \u2265 1\u2212\u03b4/2. Also, note that K 1 = O((log \u03b4 \u22121 ) 1/2 ).\nThis statement is about the joint distribution of f (\u2022) and its partial derivatives w.r.t. each component. For a certain event in this sample space, all \u2202f /(\u2202x j ) exist, are continuous, and the complement of ( 10) holds for all j. Theorem 5 of Ghosal & Roy (2006), together with the union bound, implies that this event has probability \u2265 1 \u2212 \u03b4/2. Derivatives up to fourth order exist for the Gaussian covariance function, and for Mat\u00e9rn kernels with \u03bd > 2 (Stein, 1999).", "publication_ref": ["b11", "b11", "b31"], "figure_ref": [], "table_ref": []}, {"heading": "B. Regret Bound for Target Function in RKHS", "text": "In this section, we detail a proof of Theorem 3. Recall that in this setting, we do not know the generator of the target function f , but only a bound on its RKHS norm f k .\nRecall the posterior mean function \u00b5 T (\u2022) and posterior covariance function k T (\u2022, \u2022) from Section 2, conditioned on data (x t , y t ), t = 1, . . . , T . It is easy to see that the RKHS norm corresponding to k T is given by\nf 2 k T = f 2 k + \u03c3 \u22122 T t=1 f (x t ) 2 .\nThis implies that H k (D) = H k T (D) for any T , while the RKHS inner products are different:\nf k T \u2265 f k . Since f (\u2022), k T (\u2022, x) k T = f (x) for any f \u2208 H k T (D) by the reproducing property, then |\u00b5 t (x) \u2212 f (x)| \u2264 k T (x, x) 1/2 \u00b5 t \u2212 f k T = \u03c3 T (x) \u00b5 t \u2212 f k T(11)\nby the Cauchy-Schwarz inequality.\nCompared to our other results, Theorem 3 is an agnostic statement, in that the assumptions the Bayesian UCB algorithm bases its predictions on differ from how f and data y t are generated. First, f is not drawn from a GP, but can be an arbitrary function from H k (D). Second, while the UCB method assumes that the noise \u03b5 t = y t \u2212 f (x t ) is drawn independently from N (0, \u03c3 2 ), the true sequence of noise variables \u03b5 t can be a uniformly bounded martingale difference sequence: \u03b5 t \u2264 \u03c3 for all t \u2208 N. All we have to do in order to lift the proof of Theorem 1 to the agnostic setting is to establish an analogue to Lemma 5.1, by way of the following concentration result.\nTheorem 6 Let \u03b4 \u2208 (0, 1). Assume the noise variables \u03b5 t are uniformly bounded by \u03c3. Define:\n\u03b2 t = 2 f 2 k + 300\u03b3 t ln 3 (t/\u03b4), Then Pr \u2200T, \u2200x \u2208 D, |\u00b5 T (x) \u2212 f (x)| \u2264 \u03b2 1/2 T +1 \u03c3 T (x) \u2265 1\u2212\u03b4.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "B.1. Concentration of Martingales", "text": "In our analysis, we use the following Bernstein-type concentration inequality for martingale differences, due to Freedman (1975) (see also Theorem 3.15 of Mc-Diarmid 1998).\nTheorem 7 (Freedman) Suppose X 1 , . . . , X T is a martingale difference sequence, and b is an uniform upper bound on the steps X i . Let V denote the sum of conditional variances,\nV = n i=1\nVar ( X i | X 1 , . . . , X i\u22121 ).\nThen, for every a, v > 0, Pr X i \u2265 a and V \u2264 v \u2264 exp \u2212a 2 2v + 2ab/3 .", "publication_ref": ["b10"], "figure_ref": [], "table_ref": []}, {"heading": "B.2. Proof of Theorem 6", "text": "We will show that:\nPr \u2200T, \u00b5 T \u2212 f 2 k T \u2264 \u03b2 T +1 \u2265 1 \u2212 \u03b4.\nTheorem 6 then follows from (11). Recall that \u03b5 t = y t \u2212 f (x t ). We will analyze the quantity Z T = \u00b5 T \u2212 f 2 k T , measuring the error of \u00b5 T as approximation to f under the RKHS norm of H k T (D). The following lemma provides the connection with the information gain. This lemma is important since our concentration argument is an inductive argumentroughly speaking, we condition on getting concentration in the past, in order to achieve good concentration in the future.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Lemma 7.1 We have that", "text": "T t=1 min{\u03c3 \u22122 \u03c3 2 t\u22121 (x t ), \u03b1} \u2264 2\u03b1 log(1 + \u03b1) \u03b3 T , \u03b1 > 0.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Proof", "text": "We have that min{r, \u03b1} \u2264 (\u03b1/ log(1 + \u03b1)) log(1 + r). The statement follows from Lemma 5.3.\nThe next lemma bounds the growth of Z T . It is formulated in terms of normalized quantities: \u03b5 t = \u03b5 t /\u03c3, f = f /\u03c3, \u00b5 t = \u00b5 t /\u03c3, \u03c3 t = \u03c3 t /\u03c3. Also, to ease notation, we will use \u00b5 t\u22121 , \u03c3 t\u22121 as shorthand for \u00b5 t\u22121 (x t ), \u03c3 t\u22121 (x t ).\nLemma 7.2 For all T \u2208 N,\nZ T \u2264 f 2 k + 2 T t=1 \u03b5 t \u00b5 t\u22121 \u2212 f (x t ) 1 + \u03c3 2 t\u22121 + T t=1 \u03b5 2 t \u03c3 2 t\u22121 1 + \u03c3 2 t\u22121 . Proof If \u03b1 t = (K t + \u03c3 2 I) \u22121 y t , then \u00b5 t (x) = \u03b1 T t k t (x). Then, \u00b5 T , f k = f T T \u03b1 T , \u00b5 T 2 k = y T T \u03b1 T \u2212 \u03c3 2 \u03b1 T 2 . Moreover, for t \u2264 T , \u00b5 T (x t ) = \u03b4 T t K T (K T + \u03c3 2 I) \u22121 y T = y t \u2212 \u03c3 2 \u03b1 t . Since Z T = \u00b5 T \u2212 f k + \u03c3 \u22122 t\u2264T (\u00b5 T (x t ) \u2212 f (x t )\n) 2 , we have that\nZ T = f 2 k \u2212 2f T T \u03b1 T + y T T \u03b1 T \u2212 \u03c3 2 \u03b1 T 2 + \u03c3 \u22122 T t=1 (\u03b5 t \u2212 \u03c3 2 \u03b1 t ) 2 = f 2 k \u2212 y T T (K T + \u03c3 2 I) \u22121 y T + \u03c3 \u22122 \u03b5 T 2 .\nNow, \u2212y T T (K T + \u03c3 2 I) \u22121 y T . = 2 log P (y T ), where \" . =\" means that we drop determinant terms, thus concentrate on quadratic functions. Since log P (y T ) = t log P (y t |y <t ) = t log N (y t |\u00b5 t\u22121 (x t ), \u03c3 2 t\u22121 (x t ) + \u03c3 2 ), we have that\n\u2212 y T T (K T + \u03c3 2 I) \u22121 y T = \u2212 t (y t \u2212 \u00b5 t\u22121 ) 2 \u03c3 2 + \u03c3 2 t\u22121 = 2 t \u03b5 t \u00b5 t\u22121 \u2212 f (x t ) \u03c3 2 + \u03c3 2 t\u22121 \u2212 t \u03b5 2 t \u03c3 2 t\u22121 \u03c3 2 + \u03c3 2 t\u22121 \u2212 R with R = t (\u00b5 t\u22121 \u2212 f (x t )) 2 /(\u03c3 2 + \u03c3 2 t\u22121 ) \u2265 0.\nDropping \u2212R and changing to normalized quantities concludes the proof.\nWe now define a useful martingale difference sequence. First, it is convenient to define an \"escape event\" E T as:\nE T = I{Z t \u2264 \u03b2 t+1 for all t \u2264 T }\nwhere I{\u2022} is the indicator function. Define the random variables M t by\nM t = 2 \u03b5 t E t\u22121 \u00b5 t\u22121 \u2212 f (x t ) 1 + \u03c3 2 t\u22121\n. Now, since \u03b5 t is a martingale difference sequence with respect to the histories H <t and M t / \u03b5 t is deterministic given H <t , M t is a martingale difference sequence as well. Next, we show that with high probability, the associated martingale T t=1 M t does not grow too large.\nLemma 7.3 Given \u03b4 \u2208 (0, 1) and \u03b2 t as defined in in Theorem 6, we have that\nPr \u2200T, T t=1 M t \u2264 \u03b2 T +1 /2 \u2265 1 \u2212 \u03b4,\nThe proof is given below in Section B.3. Equipped with this lemma, we can prove Theorem 6.\nProof [of Theorem 6] It suffices to show that the highprobability event described in Lemma 7.3 is contained in the support of E T for every T . We prove the latter by induction on T . By Lemma 7.2 and the definition of \u03b2 1 , we know that Z 0 \u2264 f k \u2264 \u03b2 1 . Hence E 0 = 1 always. Now suppose the high-probability event of Lemma 7.3 holds, in particular T t=1 M t \u2264 \u03b2 T +1 /2. For the inductive hypothesis, assume E T \u22121 = 1. Using this and Lemma 7.2:\nZ T \u2264 f 2 k + 2 T t=1 \u03b5 t ( \u00b5 t\u22121 \u2212 f (x t )) 1 + \u03c3 2 t\u22121 + T t=1 \u03b5 2 t \u03c3 2 t\u22121 1 + \u03c3 2 t\u22121 = f 2 k + T t=1 M t + T t=1 \u03b5 2 t \u03c3 2 t\u22121 1 + \u03c3 2 t\u22121 \u2264 f 2 k + \u03b2 T +1 /2 + T t=1 min{ \u03c3 2 t\u22121 , 1} \u2264 f 2 k + \u03b2 T +1 /2 + (2/ log 2)\u03b3 T \u2264 \u03b2 T +1 .\nThe equality in the second step uses the inductive hypothesis. Thus we have shown E T = 1, completing the induction.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "B.3. Concentration", "text": "What remains to be shown is Lemma 7.3. While the step sizes |M t | are uniformly bounded, a standard application of the Hoeffding-Azuma inequality leads to a bound of T 3/4 , too large for our purpose. We use the more specific Theorem 7 instead, which requires to control the conditional variances rather than the marginal variances which can be much larger.\nProof [of Lemma 7.3] Let us first obtain upper bounds on the step sizes of our martingale.\n|M t | = 2| \u03b5 t |E t\u22121 | \u00b5 t\u22121 \u2212 f (x t )| 1 + \u03c3 2 t\u22121 \u2264 2| \u03b5 t |E t\u22121 \u03b2 1/2 t \u03c3 t\u22121 1 + \u03c3 2 t\u22121 \u2264 2| \u03b5 t |E t\u22121 \u03b2 1/2 t min{ \u03c3 t\u22121 , 1/2},(12)\nwhere the first inequality follows from the definition of E t . Moreover, r/(1 + r 2 ) \u2264 min{r, 1/2} for r \u2265 0. Therefore, |M\nt | \u2264 \u03b2 1/2\nT , since | \u03b5 t | \u2264 1 and \u03b2 t in nondecreasing. Next, we bound the sum of the conditional variances of the martingale:\nV T := T t=1 Var ( M t | M 1 . . . M t\u22121 ) \u2264 T t=1 4| \u03b5 t | 2 E t\u22121 \u03b2 t min{ \u03c3 2 t\u22121 , 1/4} \u2264 4\u03b2 T T t=1 E t\u22121 min{ \u03c3 2 t\u22121 , 1/4} | \u03b5 t | \u2264 1 \u2264 9\u03b2 T \u03b3 T .\nIn the last line, we used Lemma 7.1 with \u03b1 = 1/4, noting that 8\u03b1/ log(1 + \u03b1) \u2264 9. Since we have established that the sum of conditional variances, V T , is always bounded by 9\u03b2 T \u03b3 T , we can apply Theorem 7 with parameters\na = \u03b2 T +1 /2, b = \u03b2 1/2 T +1 and v = 9\u03b2 T \u03b3 T to get Pr T t=1 M t \u2265 \u03b2 T +1 /2 = Pr T t=1 M t \u2265 \u03b2 T +1 /2 and V T \u2264 9\u03b2 T \u03b3 T \u2264 exp \u2212(\u03b2 T +1 /2) 2 2(9\u03b2 T \u03b3 T ) + 2 3 (\u03b2 T +1 /2)\u03b2 1/2 T +1 = exp \u2212\u03b2 T +1 72\u03b3 T + 4 3 \u03b2 1/2 T +1 \u2264 max exp \u2212\u03b2 T +1 144\u03b3 T , exp \u22123\u03b2 1/2 T +1 8 .\nNote that our choice of \u03b2 T +1 satisfies:\nmax 144\u03b3 T log(T 2 /\u03b4), (8/3) log(T 2 /\u03b4) 2 \u2264 \u03b2 T +1 .\nTherefore, the previous probability is bounded by \u03b4/T 2 , whereas the last inequality follows from the definition of \u03b2 T +1 . With a final application of the union bound:\nPr T t=1 M t \u2265 \u03b2 T +1 /2 for some T \u2264 T \u22651 Pr T t=1 M t \u2265 \u03b2 T +1 /2 \u2264 T \u22652 \u03b4/T 2 \u2264 \u03b4(\u03c0 2 /6 \u2212 1) \u2264 \u03b4,\ncompleting the proof of Lemma 7.3.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "C. Bounds on Information Gain", "text": "In this section, we show how to bound \u03b3 T , the maximum information gain after T rounds, for compact D \u2282 R d (assumptions of Theorem 2) and several commonly used covariance functions. In this section, we assume 4 that k(x, x) = 1 for all x \u2208 D.\nThe plan of attack is as follows. First, we note that the argument of \u03b3 T , I(y A ; f A ) is a submodular function, so \u03b3 T can be bounded by the value obtained by greedy maximization. Next, we use a discretization D T \u2282 D with n T = |D T | = T \u03c4 with nearest neighbour distance o(1), consider the kernel matrix K D T \u2208 R n T \u00d7n T , and bound \u03b3 T by an expression involving the eigenvalues {\u03bb t } of this matrix, which is done by a further relaxation of the greedy procedure. Finally, we bound this empirical expression in terms of the kernel operator eigenvalues of k w.r.t. the uniform distribution on D. Asymptotic expressions for the latter are reviewed in Seeger et al. (2008), which we plug in to obtain our results. A key step in this argument is to ensure the existence of a discretization D T , for which tails of the empirical spectrum can be bounded by tails of the process spectrum. We will invoke the probabilistic method for that.", "publication_ref": ["b28"], "figure_ref": [], "table_ref": []}, {"heading": "C.1. Greedy Maximization and Discretization", "text": "In this section, we fix T \u2208 N and assume the existence of a discretization D T \u2282 D, n T = |D T | on the order of T \u03c4 , such that:\n\u2200x \u2208 D \u2203[x] T \u2208 D T : x \u2212 [x] T = O(T \u2212\u03c4 /d ). (13\n)\nWe come back to the choice of D T below. We restrict the information gain to subsets A \u2282 D T :\n\u03b3 T = max A\u2282D T ,|A|=T I(y A ; f A ).\nOf course,\u03b3 T \u2264 \u03b3 T , but we can bound the slack.\nSchmidt on L 2 (\u00b5). Then, Mercer's theorem (Wahba, 1990) states that the corresponding kernel operator has a discrete eigenspectrum {(\u03bb s , \u03c6 s (\u2022))}, and\nk(x, x ) = s\u22651 \u03bb s \u03c6 s (x)\u03c6 s (x ),\nwhere \u03bb 1 \u2265 \u03bb 2 \u2265 \u2022 \u2022 \u2022 \u2265 0, and E \u00b5 [\u03c6 s (x)\u03c6 t (x)] = \u03b4 s,t . Moreover, s\u22651 \u03bb 2 s < \u221e, and the expansion of k converges absolutely and uniformly on D \u00d7 D. Note that s\u22651 \u03bb s = s\u22651 \u03bb s E \u00b5 [\u03c6 s (x) 2 ] = K(x, x)\u00b5(x) dx = 1. In order to proceed from Theorem 7.6, we have to pick a discretization D T for which (13) holds, and for which t>T * \u03bb t is not much larger than t>T * \u03bb t . With the following lemma, we determine sizes n T for which such discretizations exist.\nLemma 7.7 Fix T \u2208 N, \u03b4 > 0 and \u03b5 > 0. There exists a discretization D T \u2282 D of size\nn T = V(D)(\u03b5/ \u221a d) \u2212d [log(1/\u03b4)+d log( \u221a d/\u03b5)+log V(D)]\nwhich fulfils the following requirements:\n\u2022 \u03b5-denseness: For any x \u2208 D, there exists\n[x] T \u2208 D T such that x \u2212 [x] T \u2264 \u03b5.\n\u2022 If spec(K D T ) = {\u03bb 1 \u2265\u03bb 2 \u2265 . . . }, then for any T * = 1, . . . , n T :\nn \u22121 T T * t=1\u03bb t \u2265 T * t=1 \u03bb t \u2212 \u03b4.\nProof First, if we draw n T samplesx j \u223c \u00b5(x) independently at random, then\nD T = {x j } is \u03b5-dense with probability \u2265 1 \u2212 \u03b4. Namely, cover D with N = V(D)(\u03b5/ \u221a d) \u2212d hypercubes of sidelength \u03b5/ \u221a d, within which the maximum Euclidean distance is \u03b5. The probability of not hitting at least one cell is upper- bounded by N (1 \u2212 1/N ) n T . Since log(1 \u2212 1/N ) \u2264 \u22121/N , this is upper-bounded by \u03b4 if n T \u2265 N log(N/\u03b4). Now, let S = n \u22121 T T * t=1\u03bb t . Shawe-Taylor et al. (2005) show that E[S] \u2265 T * t=1 \u03bb t . If C is the event {D T is \u03b5\u2212dense }, then Pr(C) \u2265 1 \u2212 \u03b4. Since S \u2264 n \u22121 T trK D T = 1 in any case, we have that E[S|C] \u2265 E[S] \u2212 Pr(C c ) \u2265 T * t=1 \u03bb t \u2212 \u03b4.\nBy the probabilistic method, there must exist some D T for which C and the latter inequality holds.\nThe following lemma, the equivalent of Theorem 4 in the context here, is a direct consequence of Lemma 7.6. Proof We split the right hand side in Lemma 7.6 at t = T * . Let r = t\u2264T * m t . For t \u2264 T * : log(1 + m t\u03bbt /\u03c3 2 ) \u2264 log(rn T /\u03c3 2 ), since\u03bb t \u2264 n T . For t > T * : log(1+m t\u03bbt /\u03c3 2 ) \u2264 m t\u03bbt /\u03c3 2 \u2264 (T \u2212r)\u03bb t /\u03c3 2 . The following theorem describes our \"recipe\" for obtaining bounds on \u03b3 T for a particular kernel k, given that tail bounds on B k (T * ) = s>T * \u03bb s are known.\nTheorem 8 Suppose that D \u2282 R d is compact, and k(x, x ) is a covariance function for which the additional assumption of Theorem 2 holds. Moreover, let B k (T * ) = s>T * \u03bb s , where {\u03bb s } is the operator spectrum of k with respect to the uniform distribution over D. Pick \u03c4 > 0, and let n T = C 4 T \u03c4 (log T ) with C 4 = 2V(D)(2\u03c4 + 1). Then, the following bound holds true: = 1 = t\u22651 \u03bb t , then t>T * \u03bb t \u2264 B k (T * ) + \u03b4. The statement follows by using Lemma 7.8 with these bounds, and finally employing Lemma 7.5.\n\u03b3 T \u2264 1/2 1 \u2212 e \u22121 max", "publication_ref": ["b33"], "figure_ref": [], "table_ref": []}, {"heading": "C.3. Proof of Theorem 5", "text": "In this section, we instantiate Theorem 8 in order to obtain bounds on \u03b3 T for Squared Exponential and Mat\u00e9rn kernels, results which are summarized in Theorem 5.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Squared Exponential Kernel", "text": "For the Squared Exponential kernel k, B k (T * ) is given by Seeger et al. (2008). While \u00b5(x) was Gaussian there, the same decay rate holds for \u03bb s w.r.t. uniform \u00b5(x), while constants might change. In hindsight, it turns out that \u03c4 = d is the optimal choice for the discretization size, rendering the second term in Theorem 5 to be O(1), which is subdominant and will be neglected in the sequel. We have that \u03bb s \u2264 cB s 1/d with B < 1. Following their analysis, This should be compared with E[I(y T ; f T )] = O((log T ) d+1 ) given by Seeger et al. (2008), where the x t are drawn independently from a Gaussian base distribution. At least restricted to a compact set D, we obtain the same expression to leading order for max {xt} I(y T ; f T ).", "publication_ref": ["b28", "b28"], "figure_ref": [], "table_ref": []}, {"heading": "Mat\u00e9rn Kernels", "text": "For Mat\u00e9rn kernels k with roughness parameter \u03bd, B k (T * ) is given by Seeger et al. (2008)  . Together with Theorem 2 (for \u03bd > 2), we have that R T = O * (T 1\u2212\u03b7 ) (suppressing log factors): for any \u03bd > 2 and any dimension d, the GP-UCB algorithm is guaranteed to be no-regret in this case with arbitrarily high probability.\nHow does this bound compare to the bound on E[I(y T ; f T )] given by Seeger et al. (2008)? Here, \u03b3 T = O(T d(d+1)/(2\u03bd+d(d+1)) (log T )), while E[I(y T ; f T )] = O(T d/(2\u03bd+d) (log T ) 2\u03bd/(2\u03bd+d) ).", "publication_ref": ["b28", "b28"], "figure_ref": [], "table_ref": []}, {"heading": "Linear Kernel", "text": "For linear kernels k(x, x ) = x T x , x \u2208 R d with x \u2264 1, we can bound \u03b3 T directly. Let X T = [x 1 . . . , x T ] \u2208 R d\u00d7T with all x t \u2264 1. Now,\nlog |I + \u03c3 \u22122 X T T X T | = log |I + \u03c3 \u22122 X T X T T | \u2264 log |I + \u03c3 \u22122 D|\nwith D = diag diag \u22121 (X T X T T ), by Hadamard's inequality. The largest eigenvalue\u03bb 1 of X T X T T is O(T ), so that log |I + \u03c3 \u22122 X T T X T | \u2264 d log(1 + \u03c3 \u22122\u03bb 1 ), and \u03b3 T = O(d log T ).", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Acknowledgements", "text": "We thank Marcus Hutter for insightful comments on an earlier version of this paper. This research was partially supported by ONR grant N00014-09-1-1044, NSF grant CNS-0932392, a gift from Microsoft Corporation and the Excellence Initiative of the German research foundation (DFG).", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "", "text": "Lemma 7.4 Under the assumptions of Theorem 2, the information gain F T ({x t }) = (1/2) log |I + \u03c3 \u22122 K {xt} | is uniformly Lipschitz-continuous in each component x t \u2208 D.\nProof The assumptions of Theorem 2 imply that the kernel K(x, x ) is continuously differentiable. The result follows from the fact that F T ({x t }) is continuously differentiable in the kernel matrix K {xt} .\nLemma 7.5 Let D T be a discretization of D such that (13) holds. Under the assumptions of Theorem 2, we have that\nwhere 13) and the mean value theorem.\nWe concentrate on\u03b3 T in the sequel. Let K D T = [k(x, x )] x,x \u2208D T be the kernel matrix over the entire D T , and\nHere, if T > n T , define\u03bb t = 0 for t = n T + 1, . . . , T . Information gain maximization over a finite D T can be described in terms of a simple linear-Gaussian model over the unknown f \u2208 R n T , with prior P (f ) = N (0, K D T ) and likelihood potentials P (y t |f ) = N (v T t f , \u03c3 2 ) with unit-norm features, v t = 1. With the following lemma, we upper-bound \u03b3 T by way of two relaxations.\nLemma 7.6 For any T \u2265 1, we have that\nis the spectrum of the kernel matrix K D T . Here, if T > n T , then m t = 0 for t > n T .\nProof As shown by Krause & Guestrin (2005), the function F (A) = I(y A ; f ) is submodular. In the particular case considered here, this can be seen as follows: F (A) = H(y A ) \u2212 H(y A | f ), where the entropy H(y A ) is a (not-necessarily monotonic) submodular function in A, and since the noise is conditionally independent given f , H(y A | f ) is an additive (modular) function in A. Subtracting a modular function preserves submodularity, thus F (A) is submodular. Furthermore, the information gain is monotonic in A (i.e., F (A) \u2264 F (B) whenever A \u2286 B) (Cover & Thomas, 1991). Thus, we can apply the result of Nemhauser et al. (1978) 5 which guarantees that\u03b3 T is upper-bounded by 1/(1 \u2212 1/e) times the value the greedy maximization algorithm attains. The latter chooses features of the form v t = \u03b4 xt = [I {x=xt} ] in each round, x t \u2208 D T . We upper-bound the greedy maximum once more by relaxing these constraints to v t = 1 only. In the remainder of the proof, we concentrate on this relaxed greedy procedure. Suppose that up to round t, it chose v 1 , . . . , v t\u22121 . The posterior P (f |y t\u22121 ) has inverse covariance matrix\n, and the greedy procedure selects v so to maximize the variance v T \u03a3 t\u22121 v: the eigenvector corresponding to \u03a3 t\u22121 's largest eigenvalue (by the Rayleigh-Ritz theorem). Since \u03a3 0 = K D T , then v 1 = u 1 . Moreover, if all v t , t < t, have been chosen among U 's columns, then by the inverse covariance expression just given, K D T and \u03a3 t\u22121 have the same eigenvectors, so that v t is a column of U as well. For example, if v t = u j , then comparing \u03a3 t\u22121 and \u03a3 t , all eigenvalues other than the j-th remain the same, while the latter is shrunk. Therefore, after T rounds of the relaxed greedy procedure: v t \u2208 {u 1 , . . . , u min{T,n T } }, t = 1, . . . , T : at most the leading T eigenvectors of K D T can have been selected (possibly multiple times). If m t denotes the number that the t-th column of U has been selected, we obtain the theorem statement by a final bounding step.", "publication_ref": ["b18", "b6", "b23"], "figure_ref": [], "table_ref": []}, {"heading": "C.2. From Empirical to Process Eigenvalues", "text": "The final step will be to relate the empirical spectrum {\u03bb t } to the kernel operator spectrum. Since log(1 + \u03c3 \u22122 m t\u03bbt ) \u2264 \u03c3 \u22122 m t\u03bbt in Theorem 7.6, we will mainly be interested in relating the tail sums of the spectra. Let \u00b5(x) = V(D) \u22121 I {x\u2208D} be the uniform distribution on D, V(D) = x\u2208D dx, and assume that k is continuous. Note that k(x, x)\u00b5(x) dx = 1 by our assumption k(x, x) = 1, so that k is Hilbert-", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "An efficient algorithm for linear bandit optimization", "journal": "", "year": "2008", "authors": "J Abernethy; E Hazan; A Rakhlin"}, {"ref_id": "b1", "title": "Using confidence bounds for exploitationexploration trade-offs", "journal": "JMLR", "year": "2002", "authors": "P Auer"}, {"ref_id": "b2", "title": "Finite-time analysis of the multiarmed bandit problem", "journal": "Mach. Learn", "year": "2002", "authors": "P Auer; N Cesa-Bianchi; P Fischer"}, {"ref_id": "b3", "title": "A tutorial on Bayesian optimization of expensive cost functions, with application to active user modeling and hierarchical reinforcement learning", "journal": "UBC", "year": "2009", "authors": "E Brochu; M Cora; N Freitas"}, {"ref_id": "b4", "title": "Online optimization in X-armed bandits", "journal": "", "year": "2008", "authors": "S Bubeck; R Munos; G Stoltz; C Szepesv\u00e1ri"}, {"ref_id": "b5", "title": "Bayesian experimental design: A review", "journal": "Stat. Sci", "year": "1995", "authors": "K Chaloner; I Verdinelli"}, {"ref_id": "b6", "title": "Elements of Information Theory", "journal": "Wiley Interscience", "year": "1991", "authors": "T M Cover; J A Thomas"}, {"ref_id": "b7", "title": "The price of bandit information for online optimization", "journal": "", "year": "2007", "authors": "V Dani; T P Hayes; S Kakade"}, {"ref_id": "b8", "title": "Stochastic linear optimization under bandit feedback", "journal": "", "year": "2008", "authors": "V Dani; T P Hayes; S M Kakade"}, {"ref_id": "b9", "title": "Gaussian process modelling of dependencies in multi-armed bandit problems", "journal": "In Int. Symp. Op. Res", "year": "2009", "authors": "L Dorard; D Glowacka; J Shawe-Taylor"}, {"ref_id": "b10", "title": "On tail probabilities for martingales", "journal": "Ann. Prob", "year": "1975", "authors": "D A Freedman"}, {"ref_id": "b11", "title": "Posterior consistency of Gaussian process prior for nonparametric binary regression", "journal": "Ann. Stat", "year": "2006", "authors": "S Ghosal; A Roy"}, {"ref_id": "b12", "title": "Regret bounds for gaussian process bandit problems", "journal": "", "year": "2010", "authors": "S Gr\u00fcnew\u00e4lder; J-Y Audibert; M Opper; J Shawe-Taylor"}, {"ref_id": "b13", "title": "Global optimization of stochastic black-box systems via sequential kriging meta-models", "journal": "J Glob. Opt", "year": "2006", "authors": "D Huang; T T Allen; W I Notz; N Zeng"}, {"ref_id": "b14", "title": "Efficient global optimization of expensive black-box functions", "journal": "J Glob. Opti", "year": "1998", "authors": "D R Jones; M Schonlau; W J Welch"}, {"ref_id": "b15", "title": "Multi-armed bandits in metric spaces", "journal": "", "year": "2008", "authors": "R Kleinberg; A Slivkins; E Upfal"}, {"ref_id": "b16", "title": "An exact algorithm for maximum entropy sampling", "journal": "Ops Res", "year": "1995", "authors": "C Ko; J Lee; M Queyranne"}, {"ref_id": "b17", "title": "Bandit based monte-carlo planning", "journal": "", "year": "2006", "authors": "L Kocsis; C Szepesv\u00e1ri"}, {"ref_id": "b18", "title": "Near-optimal nonmyopic value of information in graphical models", "journal": "", "year": "2005", "authors": "A Krause; C Guestrin"}, {"ref_id": "b19", "title": "Automatic gait optimization with Gaussian process regression", "journal": "", "year": "2007", "authors": "D Lizotte; T Wang; M Bowling; D Schuurmans"}, {"ref_id": "b20", "title": "Probabilistiic Methods for Algorithmic Discrete Mathematics", "journal": "Springer", "year": "1998", "authors": "C Mcdiarmid;  Concentration"}, {"ref_id": "b21", "title": "Bayesian Approach to Global Optimization", "journal": "Kluwer Academic Publishers", "year": "1989", "authors": "J Mockus"}, {"ref_id": "b22", "title": "Toward Global Optimization", "journal": "", "year": "1978", "authors": "J Mockus; V Tiesis; A Zilinskas"}, {"ref_id": "b23", "title": "An analysis of the approximations for maximizing submodular set functions", "journal": "Math. Prog", "year": "1978", "authors": "G Nemhauser; L Wolsey; M Fisher"}, {"ref_id": "b24", "title": "Handling advertisements of unknown quality in search advertising", "journal": "", "year": "2007", "authors": "S Pandey; C Olston"}, {"ref_id": "b25", "title": "Gaussian Processes for Machine Learning", "journal": "MIT Press", "year": "2006", "authors": "C E Rasmussen; C K Williams"}, {"ref_id": "b26", "title": "Some aspects of the sequential design of experiments", "journal": "Bul. Am. Math. Soc", "year": "1952", "authors": "H Robbins"}, {"ref_id": "b27", "title": "Linearly parameterized bandits", "journal": "", "year": "2008", "authors": "P Rusmevichientong; J N Tsitsiklis"}, {"ref_id": "b28", "title": "Information consistency of nonparametric Gaussian process methods", "journal": "IEEE Tr. Inf. Theo", "year": "2008", "authors": "M W Seeger; S M Kakade; D P Foster"}, {"ref_id": "b29", "title": "On the eigenspectrum of the Gram matrix and the generalization error of kernel-PCA", "journal": "IEEE Trans. Inf. Theo", "year": "2005", "authors": "J Shawe-Taylor; C Williams; N Cristianini; J Kandola"}, {"ref_id": "b30", "title": "Gaussian process optimization in the bandit setting: No regret and experimental design", "journal": "", "year": "2010", "authors": "N Srinivas; A Krause; S Kakade; M Seeger"}, {"ref_id": "b31", "title": "Interpolation of Spatial Data: Some Theory for Kriging", "journal": "Springer", "year": "1999", "authors": "M Stein"}, {"ref_id": "b32", "title": "Convergence properties of the expected improvement algorithm", "journal": "", "year": "2007", "authors": "E Vazquez; J Bect"}, {"ref_id": "b33", "title": "Spline Models for Observational Data", "journal": "SIAM", "year": "1990", "authors": "G Wahba"}], "figures": [{"figure_label": "2", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Figure 2 .2Figure 2. (a) Example of temperature data collected by a network of 46 sensors at Intel Research Berkeley. (b,c) Two iterations of the GP-UCB algorithm. It samples points that are either uncertain (b) or have high posterior mean (c).", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Figure 3 .3Figure 3. Spectral decay (left) and information gain bound (right) for independent (diagonal), linear, squared exponential and Mat\u00e9rn kernels (\u03bd = 2.5.) with equal trace.", "figure_data": ""}, {"figure_label": "5", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "Theorem 55Let D \u2282 R d be compact and convex, d \u2208 N. Assume the kernel function satisfies k(x, x ) \u2264 1. 1. Finite spectrum. For the d-dimensional Bayesian linear regression case: \u03b3 T = O d log T . 2. Exponential spectral decay. For the Squared Exponential kernel: \u03b3 T = O (log T ) d+1 .", "figure_data": ""}, {"figure_label": "45", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "Figure 4 .Figure 5 .45Figure 4. Sample functions drawn from a GP with linear, squared exponential and Mat\u00e9rn kernels (\u03bd = 2.5.)", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_5", "figure_caption": "the result follows by plugging in the representation of Lemma 5.3. Finally, Theorem 1 is a simple consequence of Lemma 5.4, since R 2 T \u2264 T T t=1 r 2 t by the Cauchy-Schwarz inequality.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_6", "figure_caption": "Lemma 7.8 Let D T be some discretization of D, n T = |D T |. Then, for any T * = 1, . . . , min{T, n T }:", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_7", "figure_caption": "r=1,...,T T * log(rn T /\u03c3 2 ) + C 4 \u03c3 \u22122 (1 \u2212 r/T )(log T ) T \u03c4 +1 B k (T * ) + 1 + O(T 1\u2212\u03c4 /d ) for any T * \u2208 {1, . . . , n T }. Proof Let \u03b5 = d 1/2 T \u2212\u03c4 /d and \u03b4 = T \u2212(\u03c4 +1) .Lemma 7.7 provides the existence of a discretization D T of size n T which is \u03b5-dense, and for which n \u22121", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_8", "figure_caption": "Bk (T * ) \u2264 c(d!)\u03b1 \u2212d e \u2212\u03b2 d\u22121 j=0 (j!) \u22121 \u03b2 j , where \u03b1 = \u2212 log B, \u03b2 = \u03b1T 1/d * . Therefore, B k (T * ) = O(e \u2212\u03b2 \u03b2 d\u22121 ), \u03b2 = \u03b1T 1/d * .We have to pick T * such that e \u2212\u03b2 is not much larger than (T n T ) \u22121 . Suppose thatT * = [log(T n T )/\u03b1] d , so that e \u2212\u03b2 = (T n T ) \u22121 , \u03b2 = log(T n T ). The bound becomes max r=1,...,T T * log(rn T /\u03c3 2 ) + \u03c3 \u22122 (1 \u2212 r/T )(C 5 \u03b2 d\u22121 + C 4 (log T )) with n T = C 4 T d (log T ).The first part dominates, so that r = T and \u03b3 T = O([log(T d+1 (log T ))] d+1 ) = O((log T ) d+1 ).", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_9", "figure_caption": "for the uniform base distribution \u00b5(x) on D. Namely, \u03bb s \u2264 cs \u2212(2\u03bd+d)/d for almost all s \u2208 N, and B k (T * ) = O(T 1\u2212(2\u03bd+d)/d *). To match terms in the\u03b3 T bound, we choose T * = (T n T ) d/(2\u03bd+d) (log(T n T )) \u03ba (\u03ba chosen below), so that the bound becomes max r=1,...,TT * log(rn T /\u03c3 2 ) + \u03c3 \u22122 (1 \u2212 r/T ) \u00d7 (C 5 T * (log(T n T )) \u2212\u03ba(2\u03bd+d)/d + C 4 (log T )) + O(T 1\u2212\u03c4 /d ) with n T = C 4 T \u03c4 (log T ). For \u03ba = \u2212d/(2\u03bd + d), we obtain that the maximum over r is O(T * log(T n T )) = O(T (\u03c4 +1)d/(2\u03bd+d) (log T )).Finally, we choose \u03c4 = 2\u03bdd/(2\u03bd+d(d+1)) to match this term with O(T 1\u2212\u03c4 /d ). Plugging this in, we have \u03b3 T = O(T 1\u22122\u03b7 (log T )), \u03b7 = \u03bd 2\u03bd+d(d+1)", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "RBF Mat\u00e9rn kernel Regret R T T (log T ) d+1 T \u03bd+d(d+1) 2\u03bd+d(d+1) d \u221a T Figure 1.", "formula_coordinates": [2.0, 307.44, 71.92, 218.62, 44.71]}, {"formula_id": "formula_1", "formula_text": "(x) = E[f (x)] and covariance (or kernel) function k(x, x ) = E[(f (x) \u2212 \u00b5(x))(f (x ) \u2212 \u00b5(x ))].", "formula_coordinates": [3.0, 55.44, 241.45, 234.0, 32.65]}, {"formula_id": "formula_2", "formula_text": "\u00b5 T (x) = k T (x) T (K T + \u03c3 2 I) \u22121 y T ,(1)", "formula_coordinates": [3.0, 71.56, 510.77, 217.88, 12.66]}, {"formula_id": "formula_3", "formula_text": "k T (x, x ) = k(x, x ) \u2212 k T (x) T (K T + \u03c3 2 I) \u22121 k T (x ), \u03c3 2 T (x) = k T (x, x), (2", "formula_coordinates": [3.0, 58.59, 527.22, 227.7, 28.87]}, {"formula_id": "formula_4", "formula_text": ")", "formula_coordinates": [3.0, 285.2, 545.47, 4.24, 8.74]}, {"formula_id": "formula_5", "formula_text": "where k T (x) = [k(x 1 , x) . . . k(x T , x)] T and K T is the positive definite kernel matrix [k(x, x )] x,x \u2208A T .", "formula_coordinates": [3.0, 55.44, 562.09, 234.0, 23.8]}, {"formula_id": "formula_6", "formula_text": "I(y A ; f ) = H(y A ) \u2212 H(y A |f ),(3)", "formula_coordinates": [3.0, 360.78, 372.27, 180.66, 10.59]}, {"formula_id": "formula_7", "formula_text": "x t = argmax x\u2208D \u03c3 t\u22121 (x),(4)", "formula_coordinates": [3.0, 377.49, 526.23, 163.95, 16.55]}, {"formula_id": "formula_8", "formula_text": "F (A T ) \u2265 (1 \u2212 1/e) max |A|\u2264T F (A),(5)", "formula_coordinates": [3.0, 357.49, 598.68, 183.95, 15.05]}, {"formula_id": "formula_9", "formula_text": "x t = argmax x\u2208D \u00b5 t\u22121 (x) + \u03b2 1/2 t \u03c3 t\u22121 (x),(6)", "formula_coordinates": [4.0, 93.05, 297.72, 196.39, 19.65]}, {"formula_id": "formula_10", "formula_text": "Input space D; GP Prior \u00b5 0 = 0, \u03c3 0 , k for t = 1, 2, . . . do Choose x t = argmax x\u2208D \u00b5 t\u22121 (x) + \u03b2 t \u03c3 t\u22121 (x)", "formula_coordinates": [4.0, 317.4, 83.2, 207.29, 40.43]}, {"formula_id": "formula_11", "formula_text": "f \u223c GP(0, k(x, x )) for finite D, f \u223c GP(0, k(x, x ))", "formula_coordinates": [4.0, 307.44, 344.93, 234.0, 8.77]}, {"formula_id": "formula_12", "formula_text": "\u03b3 T := max A\u2282D:|A|=T I(y A ; f A ),(7)", "formula_coordinates": [4.0, 365.69, 513.1, 175.75, 15.08]}, {"formula_id": "formula_13", "formula_text": "I(y A ; f A ) = I(y A ; f ) is defined in (3). Recall that I(y A ; f A ) = 1 2 log |I + \u03c3 \u22122 K A |, where K A = [k(x, x )] x,x \u2208A is the covariance matrix of f A = [f (x)] x\u2208A associated with the samples A. Our regret bounds are of the form O * ( \u221a T \u03b2 T \u03b3 T )", "formula_coordinates": [4.0, 307.44, 537.68, 234.0, 57.5]}, {"formula_id": "formula_14", "formula_text": "Pr R T \u2264 C 1 T \u03b2 T \u03b3 T \u2200T \u2265 1 \u2265 1 \u2212 \u03b4.", "formula_coordinates": [5.0, 80.69, 512.67, 183.5, 9.65]}, {"formula_id": "formula_15", "formula_text": "C 1 = 8/ log(1 + \u03c3 \u22122 ).", "formula_coordinates": [5.0, 83.57, 534.1, 94.07, 11.23]}, {"formula_id": "formula_16", "formula_text": "Pr {sup x\u2208D |\u2202f /\u2202x j | > L} \u2264 ae \u2212(L/b) 2 , j = 1, . . . , d.", "formula_coordinates": [5.0, 307.44, 350.17, 235.53, 14.3]}, {"formula_id": "formula_17", "formula_text": "Pr R T \u2264 C 1 T \u03b2 T \u03b3 T + 2 \u2200T \u2265 1 \u2265 1 \u2212 \u03b4.", "formula_coordinates": [5.0, 324.11, 484.48, 200.66, 9.65]}, {"formula_id": "formula_18", "formula_text": "Pr R T \u2264 C 1 T \u03b2 T \u03b3 T \u2200T \u2265 1 \u2265 1 \u2212 \u03b4,", "formula_coordinates": [6.0, 80.69, 327.65, 183.5, 9.65]}, {"formula_id": "formula_19", "formula_text": "C 1 = 8/ log(1 + \u03c3 \u22122 ).", "formula_coordinates": [6.0, 83.57, 346.0, 94.07, 11.23]}, {"formula_id": "formula_20", "formula_text": "let f = [f (x)] x\u2208D , K D = [k(x, x )] x,x \u2208D . Sampling f at x t , we obtain y t \u223c N (v T t f , \u03c3 2 )", "formula_coordinates": [6.0, 307.44, 255.49, 234.0, 22.6]}, {"formula_id": "formula_21", "formula_text": "\u03b3 T \u2264 1/2 1 \u2212 e \u22121 max (mt) |D| t=1 log(1 + \u03c3 \u22122 m t\u03bbt ),(8)", "formula_coordinates": [6.0, 323.09, 419.17, 218.35, 22.31]}, {"formula_id": "formula_22", "formula_text": "\u03b3 T \u2264 O \u03c3 \u22122 [B(T * )T + T * (log n T T )] ,", "formula_coordinates": [6.0, 342.02, 530.08, 164.84, 11.72]}, {"formula_id": "formula_23", "formula_text": "n T = |D| t=1\u03bb t and B(T * ) = |D| t=T * +1\u03bb t .", "formula_coordinates": [6.0, 335.57, 551.87, 176.17, 14.28]}, {"formula_id": "formula_24", "formula_text": "The Squared Exponential kernel is k(x, x ) = exp(\u2212(2l 2 ) \u22121 x \u2212 x 2", "formula_coordinates": [7.0, 55.44, 292.0, 234.0, 20.72]}, {"formula_id": "formula_25", "formula_text": "The Mat\u00e9rn kernel is given by k(x, x ) = (2 1\u2212\u03bd /\u0393(\u03bd))r \u03bd B \u03bd (r), r = ( \u221a 2\u03bd/l) x \u2212 x ,", "formula_coordinates": [7.0, 55.44, 345.79, 234.0, 21.64]}, {"formula_id": "formula_26", "formula_text": "\u03b3 T = O T d(d+1)/(2\u03bd+d(d+1)) (log T ) .", "formula_coordinates": [7.0, 128.47, 552.81, 156.37, 11.23]}, {"formula_id": "formula_27", "formula_text": "O * ( \u221a T (log T )d+1", "formula_coordinates": [7.0, 460.83, 332.55, 75.04, 17.17]}, {"formula_id": "formula_28", "formula_text": ")| \u2264 \u03b2 1/2 t \u03c3 t\u22121 (", "formula_coordinates": [9.0, 437.93, 548.74, 65.09, 13.74]}, {"formula_id": "formula_29", "formula_text": "t = 1, \u03c0 t > 0. Then, |f (x) \u2212 \u00b5 t\u22121 (x)| \u2264 \u03b2 1/2 t \u03c3 t\u22121 (x) \u2200x \u2208 D \u2200t \u2265 1 holds with probability \u2265 1 \u2212 \u03b4.", "formula_coordinates": [9.0, 307.44, 659.92, 223.09, 57.07]}, {"formula_id": "formula_30", "formula_text": "\u2264 e \u2212c 2 /2 Pr{r > 0} = (1/2)e \u2212c 2 /2 for c > 0, since e \u2212c(r\u2212c) \u2264 1 for r \u2265 c. Therefore, Pr{|f (x) \u2212 \u00b5 t\u22121 (x)| > \u03b2 1/2 t \u03c3 t\u22121 (x)} \u2264 e \u2212\u03b2t/2 , using r = (f (x)\u2212\u00b5 t\u22121 (x))/\u03c3 t\u22121 (x) and c = \u03b2 1/2 t . Applying the union bound, |f (x) \u2212 \u00b5 t\u22121 (x)| \u2264 \u03b2 1/2 t \u03c3 t\u22121 (x) \u2200x \u2208 D holds with probability \u2265 1 \u2212 |D|e \u2212\u03b2t/2 .", "formula_coordinates": [10.0, 55.44, 147.02, 234.0, 111.9]}, {"formula_id": "formula_31", "formula_text": "Lemma 5.2 Fix t \u2265 1. If |f (x) \u2212 \u00b5 t\u22121 (x)| \u2264 \u03b2 1/2 t \u03c3 t\u22121 (x) for all x \u2208 D, then the regret r t is bounded by 2\u03b2 1/2 t \u03c3 t\u22121 (x t ). Proof By definition of x t : \u00b5 t\u22121 (x t ) + \u03b2 1/2 t \u03c3 t\u22121 (x t ) \u2265 \u00b5 t\u22121 (x * ) + \u03b2 1/2 t \u03c3 t\u22121 (x * ) \u2265 f (x * ). Therefore, r t = f (x * ) \u2212 f (x t ) \u2264 \u03b2 1/2 t \u03c3 t\u22121 (x t ) + \u00b5 t\u22121 (x t ) \u2212 f (x t ) \u2264 2\u03b2 1/2 t \u03c3 t\u22121 (x t ).", "formula_coordinates": [10.0, 55.44, 325.17, 236.92, 114.83]}, {"formula_id": "formula_32", "formula_text": "I(y T ; f T ) = 1 2 T t=1 log 1 + \u03c3 \u22122 \u03c3 2 t\u22121 (x t ) . Proof Recall that I(y T ; f T ) = H(y T ) \u2212 (1/2) log |2\u03c0e\u03c3 2 I|. Now, H(y T ) = H(y T \u22121 ) + H(y T |y T \u22121 ) = H(y T \u22121 ) + log(2\u03c0e(\u03c3 2 + \u03c3 2 t\u22121 (x T )))/2.", "formula_coordinates": [10.0, 55.44, 521.35, 234.0, 69.74]}, {"formula_id": "formula_33", "formula_text": "T t=1 r 2 t \u2264 \u03b2 T C 1 I(y T ; f T ) \u2264 C 1 \u03b2 T \u03b3 T \u2200T \u2265 1,", "formula_coordinates": [10.0, 82.24, 701.3, 194.79, 20.09]}, {"formula_id": "formula_34", "formula_text": "C 1 := 8/ log(1 + \u03c3 \u22122 ) \u2265 8\u03c3 2 .", "formula_coordinates": [10.0, 335.57, 68.64, 125.63, 11.23]}, {"formula_id": "formula_35", "formula_text": "{r 2 t \u2264 4\u03b2 t \u03c3 2 t\u22121 (x t ) \u2200t \u2265 1} with probability \u2265 1 \u2212 \u03b4. Now, \u03b2 t is nondecreasing, so that 4\u03b2 t \u03c3 2 t\u22121 (x t ) \u2264 4\u03b2 T \u03c3 2 (\u03c3 \u22122 \u03c3 2 t\u22121 (x t )) \u2264 4\u03b2 T \u03c3 2 C 2 log(1 + \u03c3 \u22122 \u03c3 2 t\u22121 (x t )) with C 2 = \u03c3 \u22122 / log(1 + \u03c3 \u22122 ) \u2265 1, since s 2 \u2264 C 2 log(1 + s 2 ) for s \u2208 [0, \u03c3 \u22122 ], and \u03c3 \u22122 \u03c3 2 t\u22121 (x t ) \u2264 \u03c3 \u22122 k(x t , x t ) \u2264 \u03c3 \u22122 . Noting that C 1 = 8\u03c3 2 C 2 ,", "formula_coordinates": [10.0, 307.44, 101.04, 234.0, 112.02]}, {"formula_id": "formula_36", "formula_text": "where t\u22651 \u03c0 \u22121 t = 1, \u03c0 t > 0. Then, |f (x t ) \u2212 \u00b5 t\u22121 (x t )| \u2264 \u03b2 1/2 t \u03c3 t\u22121 (x t ) \u2200t \u2265 1 holds with probability \u2265 1 \u2212 \u03b4. Proof Fix t \u2265 1 and x \u2208 D. Conditioned on y t\u22121 = (y 1 , . . . , y t\u22121 ), {x 1 , . . . , x t\u22121 } are determin- istic, and f (x) \u223c N (\u00b5 t\u22121 (x), \u03c3 2 t\u22121 (x)). As before, Pr{|f (x t ) \u2212 \u00b5 t\u22121 (x t )| > \u03b2 1/2 t \u03c3 t\u22121 (x t )} \u2264 e \u2212\u03b2t/2 .", "formula_coordinates": [10.0, 307.44, 534.73, 234.0, 112.71]}, {"formula_id": "formula_37", "formula_text": "t = 1, \u03c0 t > 0. Then, |f (x) \u2212 \u00b5 t\u22121 (x)| \u2264 \u03b2 1/2 t \u03c3 t\u22121 (x) \u2200x \u2208 D t , \u2200t \u2265 1 holds with probability \u2265 1 \u2212 \u03b4.", "formula_coordinates": [11.0, 55.44, 128.61, 226.69, 54.76]}, {"formula_id": "formula_38", "formula_text": "Pr {\u2200j, \u2200x \u2208 D, |\u2202f /(\u2202x j )| < L} \u2265 1 \u2212 dae \u2212L 2 /b 2 .", "formula_coordinates": [11.0, 62.87, 263.43, 219.14, 13.35]}, {"formula_id": "formula_39", "formula_text": "\u2200x \u2208 D, |f (x) \u2212 f (x )| \u2264 L x \u2212 x 1 .(9)", "formula_coordinates": [11.0, 90.46, 321.39, 198.98, 9.65]}, {"formula_id": "formula_40", "formula_text": "t\u22651 \u03c0 \u22121 t = 1, \u03c0 t > 0. Let \u03c4 t = dt 2 br log(2da/\u03b4) Let [x * ] t denotes the closest point in D t to x * . Hence, Then, |f (x * ) \u2212 \u00b5 t\u22121 ([x * ] t )| \u2264 \u03b2 1/2 t \u03c3 t\u22121 ([x * ] t ) + 1 t 2 \u2200t \u2265 1 holds with probability \u2265 1 \u2212 \u03b4.", "formula_coordinates": [11.0, 55.44, 484.25, 234.0, 84.1]}, {"formula_id": "formula_41", "formula_text": "\u2200x \u2208 D, |f (x) \u2212 f (x )| \u2264 b log(2da/\u03b4) x \u2212 x 1 . Hence, \u2200x \u2208 D t , |f (x) \u2212 f ([x] t )| \u2264 rdb log(2da/\u03b4)/\u03c4 t .", "formula_coordinates": [11.0, 55.44, 616.57, 225.63, 51.95]}, {"formula_id": "formula_42", "formula_text": "\u2200x \u2208 D t , |f (x) \u2212 f ([x] t )| \u2264 1 t 2", "formula_coordinates": [11.0, 106.49, 699.66, 130.21, 22.31]}, {"formula_id": "formula_43", "formula_text": "t\u22651 \u03c0 \u22121 t = 1, \u03c0 t > 0.", "formula_coordinates": [11.0, 317.96, 174.39, 89.35, 13.37]}, {"formula_id": "formula_44", "formula_text": "r t \u2264 2\u03b2 1/2 t \u03c3 t\u22121 (x t ) + 1 t 2 .", "formula_coordinates": [11.0, 369.82, 210.08, 109.23, 22.31]}, {"formula_id": "formula_45", "formula_text": "t : \u00b5 t\u22121 (x t ) + \u03b2 1/2 t \u03c3 t\u22121 (x t ) \u2265 \u00b5 t\u22121 ([x * ] t ) + \u03b2 1/2 t \u03c3 t\u22121 ([x * ] t ). Also, by Lemma 5.7, we have that \u00b5 t\u22121 ([x * ] t )+\u03b2 1/2 t \u03c3 t\u22121 ([x * ] t )+1/t 2 \u2265 f (x * ), which implies \u00b5 t\u22121 (x t ) + \u03b2 1/2 t \u03c3 t\u22121 (x t ) \u2265 f (x * ) \u2212 1/t 2 . Therefore, r t = f (x * ) \u2212 f (x t ) \u2264 \u03b2 1/2 t \u03c3 t\u22121 (x t ) + 1/t 2 + \u00b5 t\u22121 (x t ) \u2212 f (x t ) \u2264 2\u03b2 1/2 t \u03c3 t\u22121 (x t ) + 1/t 2 .", "formula_coordinates": [11.0, 307.44, 308.84, 234.0, 124.73]}, {"formula_id": "formula_46", "formula_text": "T t=1 4\u03b2 t \u03c3 2 t\u22121 (x t ) \u2264 C 1 \u03b2 T \u03b3 T \u2200T \u2265 1,", "formula_coordinates": [11.0, 352.36, 523.86, 158.55, 20.09]}, {"formula_id": "formula_47", "formula_text": "T t=1 2\u03b2 1/2 t \u03c3 t\u22121 (x t ) \u2264 C 1 T \u03b2 T \u03b3 T \u2200T \u2265 1, Hence, T t=1 r t \u2264 C 1 T \u03b2 T \u03b3 T + \u03c0 2 /6 \u2200T \u2265 1,", "formula_coordinates": [11.0, 307.44, 573.65, 216.83, 69.77]}, {"formula_id": "formula_48", "formula_text": "x\u2208D |\u2202f /(\u2202x j )| > L \u2264 ae \u2212bj L 2 . (10", "formula_coordinates": [12.0, 103.33, 141.73, 181.68, 20.22]}, {"formula_id": "formula_49", "formula_text": ")", "formula_coordinates": [12.0, 285.01, 145.44, 4.43, 8.74]}, {"formula_id": "formula_50", "formula_text": "K 1 = d 1/2 L, by the mean value theorem, we have Pr{|f (x)\u2212f (x )| \u2264 K 1 x\u2212x \u2200 x, x \u2208 D} \u2265 1\u2212\u03b4/2. Also, note that K 1 = O((log \u03b4 \u22121 ) 1/2 ).", "formula_coordinates": [12.0, 55.44, 204.77, 234.0, 41.11]}, {"formula_id": "formula_51", "formula_text": "f 2 k T = f 2 k + \u03c3 \u22122 T t=1 f (x t ) 2 .", "formula_coordinates": [12.0, 101.68, 520.2, 146.51, 20.09]}, {"formula_id": "formula_52", "formula_text": "f k T \u2265 f k . Since f (\u2022), k T (\u2022, x) k T = f (x) for any f \u2208 H k T (D) by the reproducing property, then |\u00b5 t (x) \u2212 f (x)| \u2264 k T (x, x) 1/2 \u00b5 t \u2212 f k T = \u03c3 T (x) \u00b5 t \u2212 f k T(11)", "formula_coordinates": [12.0, 55.44, 561.66, 234.0, 70.5]}, {"formula_id": "formula_53", "formula_text": "\u03b2 t = 2 f 2 k + 300\u03b3 t ln 3 (t/\u03b4), Then Pr \u2200T, \u2200x \u2208 D, |\u00b5 T (x) \u2212 f (x)| \u2264 \u03b2 1/2 T +1 \u03c3 T (x) \u2265 1\u2212\u03b4.", "formula_coordinates": [12.0, 307.44, 205.26, 244.96, 53.31]}, {"formula_id": "formula_54", "formula_text": "V = n i=1", "formula_coordinates": [12.0, 345.68, 404.02, 48.61, 20.09]}, {"formula_id": "formula_55", "formula_text": "Pr \u2200T, \u00b5 T \u2212 f 2 k T \u2264 \u03b2 T +1 \u2265 1 \u2212 \u03b4.", "formula_coordinates": [12.0, 339.71, 525.34, 169.46, 13.31]}, {"formula_id": "formula_56", "formula_text": "T t=1 min{\u03c3 \u22122 \u03c3 2 t\u22121 (x t ), \u03b1} \u2264 2\u03b1 log(1 + \u03b1) \u03b3 T , \u03b1 > 0.", "formula_coordinates": [12.0, 321.83, 692.19, 219.97, 22.31]}, {"formula_id": "formula_57", "formula_text": "Z T \u2264 f 2 k + 2 T t=1 \u03b5 t \u00b5 t\u22121 \u2212 f (x t ) 1 + \u03c3 2 t\u22121 + T t=1 \u03b5 2 t \u03c3 2 t\u22121 1 + \u03c3 2 t\u22121 . Proof If \u03b1 t = (K t + \u03c3 2 I) \u22121 y t , then \u00b5 t (x) = \u03b1 T t k t (x). Then, \u00b5 T , f k = f T T \u03b1 T , \u00b5 T 2 k = y T T \u03b1 T \u2212 \u03c3 2 \u03b1 T 2 . Moreover, for t \u2264 T , \u00b5 T (x t ) = \u03b4 T t K T (K T + \u03c3 2 I) \u22121 y T = y t \u2212 \u03c3 2 \u03b1 t . Since Z T = \u00b5 T \u2212 f k + \u03c3 \u22122 t\u2264T (\u00b5 T (x t ) \u2212 f (x t )", "formula_coordinates": [13.0, 55.44, 221.08, 234.0, 129.4]}, {"formula_id": "formula_58", "formula_text": "Z T = f 2 k \u2212 2f T T \u03b1 T + y T T \u03b1 T \u2212 \u03c3 2 \u03b1 T 2 + \u03c3 \u22122 T t=1 (\u03b5 t \u2212 \u03c3 2 \u03b1 t ) 2 = f 2 k \u2212 y T T (K T + \u03c3 2 I) \u22121 y T + \u03c3 \u22122 \u03b5 T 2 .", "formula_coordinates": [13.0, 82.06, 359.1, 180.26, 52.21]}, {"formula_id": "formula_59", "formula_text": "\u2212 y T T (K T + \u03c3 2 I) \u22121 y T = \u2212 t (y t \u2212 \u00b5 t\u22121 ) 2 \u03c3 2 + \u03c3 2 t\u22121 = 2 t \u03b5 t \u00b5 t\u22121 \u2212 f (x t ) \u03c3 2 + \u03c3 2 t\u22121 \u2212 t \u03b5 2 t \u03c3 2 t\u22121 \u03c3 2 + \u03c3 2 t\u22121 \u2212 R with R = t (\u00b5 t\u22121 \u2212 f (x t )) 2 /(\u03c3 2 + \u03c3 2 t\u22121 ) \u2265 0.", "formula_coordinates": [13.0, 55.44, 486.86, 234.0, 76.17]}, {"formula_id": "formula_60", "formula_text": "E T = I{Z t \u2264 \u03b2 t+1 for all t \u2264 T }", "formula_coordinates": [13.0, 102.55, 647.22, 139.79, 9.65]}, {"formula_id": "formula_61", "formula_text": "M t = 2 \u03b5 t E t\u22121 \u00b5 t\u22121 \u2212 f (x t ) 1 + \u03c3 2 t\u22121", "formula_coordinates": [13.0, 111.71, 696.18, 117.5, 24.39]}, {"formula_id": "formula_62", "formula_text": "Pr \u2200T, T t=1 M t \u2264 \u03b2 T +1 /2 \u2265 1 \u2212 \u03b4,", "formula_coordinates": [13.0, 343.21, 193.3, 162.47, 30.2]}, {"formula_id": "formula_63", "formula_text": "Z T \u2264 f 2 k + 2 T t=1 \u03b5 t ( \u00b5 t\u22121 \u2212 f (x t )) 1 + \u03c3 2 t\u22121 + T t=1 \u03b5 2 t \u03c3 2 t\u22121 1 + \u03c3 2 t\u22121 = f 2 k + T t=1 M t + T t=1 \u03b5 2 t \u03c3 2 t\u22121 1 + \u03c3 2 t\u22121 \u2264 f 2 k + \u03b2 T +1 /2 + T t=1 min{ \u03c3 2 t\u22121 , 1} \u2264 f 2 k + \u03b2 T +1 /2 + (2/ log 2)\u03b3 T \u2264 \u03b2 T +1 .", "formula_coordinates": [13.0, 312.86, 401.64, 221.48, 115.92]}, {"formula_id": "formula_64", "formula_text": "|M t | = 2| \u03b5 t |E t\u22121 | \u00b5 t\u22121 \u2212 f (x t )| 1 + \u03c3 2 t\u22121 \u2264 2| \u03b5 t |E t\u22121 \u03b2 1/2 t \u03c3 t\u22121 1 + \u03c3 2 t\u22121 \u2264 2| \u03b5 t |E t\u22121 \u03b2 1/2 t min{ \u03c3 t\u22121 , 1/2},(12)", "formula_coordinates": [14.0, 92.36, 99.09, 197.08, 73.51]}, {"formula_id": "formula_65", "formula_text": "t | \u2264 \u03b2 1/2", "formula_coordinates": [14.0, 115.42, 212.77, 37.74, 12.79]}, {"formula_id": "formula_66", "formula_text": "V T := T t=1 Var ( M t | M 1 . . . M t\u22121 ) \u2264 T t=1 4| \u03b5 t | 2 E t\u22121 \u03b2 t min{ \u03c3 2 t\u22121 , 1/4} \u2264 4\u03b2 T T t=1 E t\u22121 min{ \u03c3 2 t\u22121 , 1/4} | \u03b5 t | \u2264 1 \u2264 9\u03b2 T \u03b3 T .", "formula_coordinates": [14.0, 58.82, 265.66, 227.23, 79.39]}, {"formula_id": "formula_67", "formula_text": "a = \u03b2 T +1 /2, b = \u03b2 1/2 T +1 and v = 9\u03b2 T \u03b3 T to get Pr T t=1 M t \u2265 \u03b2 T +1 /2 = Pr T t=1 M t \u2265 \u03b2 T +1 /2 and V T \u2264 9\u03b2 T \u03b3 T \u2264 exp \u2212(\u03b2 T +1 /2) 2 2(9\u03b2 T \u03b3 T ) + 2 3 (\u03b2 T +1 /2)\u03b2 1/2 T +1 = exp \u2212\u03b2 T +1 72\u03b3 T + 4 3 \u03b2 1/2 T +1 \u2264 max exp \u2212\u03b2 T +1 144\u03b3 T , exp \u22123\u03b2 1/2 T +1 8 .", "formula_coordinates": [14.0, 55.44, 409.53, 234.0, 193.43]}, {"formula_id": "formula_68", "formula_text": "max 144\u03b3 T log(T 2 /\u03b4), (8/3) log(T 2 /\u03b4) 2 \u2264 \u03b2 T +1 .", "formula_coordinates": [14.0, 59.38, 649.74, 226.11, 13.75]}, {"formula_id": "formula_69", "formula_text": "Pr T t=1 M t \u2265 \u03b2 T +1 /2 for some T \u2264 T \u22651 Pr T t=1 M t \u2265 \u03b2 T +1 /2 \u2264 T \u22652 \u03b4/T 2 \u2264 \u03b4(\u03c0 2 /6 \u2212 1) \u2264 \u03b4,", "formula_coordinates": [14.0, 343.06, 86.29, 155.57, 71.9]}, {"formula_id": "formula_70", "formula_text": "\u2200x \u2208 D \u2203[x] T \u2208 D T : x \u2212 [x] T = O(T \u2212\u03c4 /d ). (13", "formula_coordinates": [14.0, 312.71, 584.55, 224.3, 11.72]}, {"formula_id": "formula_71", "formula_text": ")", "formula_coordinates": [14.0, 537.01, 586.63, 4.43, 8.74]}, {"formula_id": "formula_72", "formula_text": "\u03b3 T = max A\u2282D T ,|A|=T I(y A ; f A ).", "formula_coordinates": [14.0, 364.37, 635.64, 120.13, 15.69]}, {"formula_id": "formula_73", "formula_text": "k(x, x ) = s\u22651 \u03bb s \u03c6 s (x)\u03c6 s (x ),", "formula_coordinates": [16.0, 100.92, 119.34, 143.04, 14.17]}, {"formula_id": "formula_74", "formula_text": "n T = V(D)(\u03b5/ \u221a d) \u2212d [log(1/\u03b4)+d log( \u221a d/\u03b5)+log V(D)]", "formula_coordinates": [16.0, 55.44, 293.54, 235.2, 18.63]}, {"formula_id": "formula_75", "formula_text": "[x] T \u2208 D T such that x \u2212 [x] T \u2264 \u03b5.", "formula_coordinates": [16.0, 75.37, 353.0, 214.08, 21.61]}, {"formula_id": "formula_76", "formula_text": "n \u22121 T T * t=1\u03bb t \u2265 T * t=1 \u03bb t \u2212 \u03b4.", "formula_coordinates": [16.0, 118.03, 421.61, 128.74, 20.09]}, {"formula_id": "formula_77", "formula_text": "D T = {x j } is \u03b5-dense with probability \u2265 1 \u2212 \u03b4. Namely, cover D with N = V(D)(\u03b5/ \u221a d) \u2212d hypercubes of sidelength \u03b5/ \u221a d, within which the maximum Euclidean distance is \u03b5. The probability of not hitting at least one cell is upper- bounded by N (1 \u2212 1/N ) n T . Since log(1 \u2212 1/N ) \u2264 \u22121/N , this is upper-bounded by \u03b4 if n T \u2265 N log(N/\u03b4). Now, let S = n \u22121 T T * t=1\u03bb t . Shawe-Taylor et al. (2005) show that E[S] \u2265 T * t=1 \u03bb t . If C is the event {D T is \u03b5\u2212dense }, then Pr(C) \u2265 1 \u2212 \u03b4. Since S \u2264 n \u22121 T trK D T = 1 in any case, we have that E[S|C] \u2265 E[S] \u2212 Pr(C c ) \u2265 T * t=1 \u03bb t \u2212 \u03b4.", "formula_coordinates": [16.0, 55.44, 470.58, 234.0, 153.49]}, {"formula_id": "formula_78", "formula_text": "\u03b3 T \u2264 1/2 1 \u2212 e \u22121 max", "formula_coordinates": [16.0, 314.14, 374.61, 83.57, 22.31]}, {"formula_id": "formula_79", "formula_text": "log |I + \u03c3 \u22122 X T T X T | = log |I + \u03c3 \u22122 X T X T T | \u2264 log |I + \u03c3 \u22122 D|", "formula_coordinates": [17.0, 329.97, 222.48, 188.94, 27.25]}], "doi": ""}