{"title": "Tractability through Exchangeability: A New Perspective on Efficient Probabilistic Inference", "authors": "Mathias Niepert; Guy Van Den Broeck", "pub_date": "", "abstract": "Exchangeability is a central notion in statistics and probability theory. The assumption that an infinite sequence of data points is exchangeable is at the core of Bayesian statistics. However, finite exchangeability as a statistical property that renders probabilistic inference tractable is less well-understood. We develop a theory of finite exchangeability and its relation to tractable probabilistic inference. The theory is complementary to that of independence and conditional independence. We show that tractable inference in probabilistic models with high treewidth and millions of variables can be explained with the notion of finite (partial) exchangeability. We also show that existing lifted inference algorithms implicitly utilize a combination of conditional independence and partial exchangeability. * Both authors contributed equally to the paper. Guy Van den Broeck is also at KU Leuven, Belgium.", "sections": [{"heading": "Introduction", "text": "Probabilistic graphical models such as Bayesian and Markov networks explicitly represent conditional independencies of a probability distribution with their structure (Pearl 1988;Lauritzen 1996;Koller and Friedman 2009;Darwiche 2009). Their wide-spread use in research and industry can largely be attributed to this structural property and their declarative nature, separating representation and inference algorithms. Conditional independencies often lead to a more concise representation and facilitate efficient algorithms for parameter estimation and probabilistic inference. It is wellknown, for instance, that probabilistic graphical models with a tree structure admit efficient inference. In addition to conditional independencies, modern inference algorithms exploit contextual independencies (Boutilier et al. 1996) to speed up probabilistic inference.\nThe time complexity of classical probabilistic inference algorithms is exponential in the treewidth (Robertson and Seymour 1986) of the graphical model. Independence and its various manifestations often reduce treewidth and treewidth has been used in the literature as the decisive factor for assessing the tractability of probabilistic inference (cf. Koller and Friedman (2009), Darwiche (2009)). However, recent algorithmic developments have shown that inference in probabilistic graphical models can be highly tractable, even in high-treewidth models without any conditional independencies. For instance, lifted probabilistic inference algorithms (Poole 2003;Kersting 2012) often perform efficient inference in densely connected graphical models with millions of random variables. With the success of lifted inference, understanding these algorithms and their tractability on a more fundamental level has become a central challenge. The most pressing question concerns the underlying statistical principle that allows inference to be tractable in the absence of independence.\nThe present paper contributes to a deeper understanding of the statistical properties that render inference tractable. We consider an inference problem tractable when it is solved by an efficient algorithm, running in time polynomial in the number of random variables. The crucial contribution is a comprehensive theory that relates the notion of finite partial exchangeability (Diaconis and Freedman 1980a) to tractability. One instance is full exchangeability where the distribution is invariant under variable permutations. We develop a theory of exchangeable decompositions that results in novel tractability conditions. Similar to conditional independence, partial exchangeability decomposes a probabilistic model so as to facilitate efficient inference. Most importantly, the notions of conditional independence and partial exchangeability are complementary, and when combined, define a much larger class of tractable models than the class of models rendered tractable by conditional independence alone.\nConditional and contextual independence are such powerful concepts because they are statistical properties of the distribution, regardless of the representation used. Partial exchangeability is such a statistical property that is independent of any representation, be it a joint probability table, a Bayesian network, or a statistical relational model. We introduce novel forms of exchangeability, discuss their sufficient statistics, and efficient inference algorithms. The resulting exchangeability framework allows us to state known liftability results as corollaries, providing a first statistical characterization of exact lifted inference. As an additional contribution, we connect the semantic notion of exchangeability to syntactic notions of tractability by showing that liftable statistical relational models have the required exchangeability properties due to their syntactic symmetries. We thereby unify notions of lifting from the exact and approximate inference community into a common framework.", "publication_ref": ["b25", "b17", "b14", "b3", "b0", "b28", "b14", "b3", "b26", "b13", "b6"], "figure_ref": [], "table_ref": []}, {"heading": "A Case Study: Markov Logic", "text": "The analysis of exchangeability and tractable inference is developed in the context of arbitrary discrete probability distributions, independent of a particular representational formalism. Nevertheless, for the sake of accessibility, we will provide examples and intuitions for Markov logic, a wellknown statistical relational language that exhibits several forms of exchangeability. Hence, after the derivation of the theoretical results in each section, we apply the theory to the problem of inference in Markov logic networks. This also allows us to link the theory to existing results from the lifted probabilistic inference literature.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Markov Logic Networks", "text": "We first introduce some standard concepts from functionfree first-order logic. An atom P (t 1 , . . . , t n ) consists of a predicate P/n of arity n followed by n argument terms t i , which are either constants, {A, B, . . . } or logical variables {x, y, . . . }. A unary atom has one argument and a binary atom has two. A formula combines atoms with connectives (e.g., \u2227, \u21d4). A formula is ground if it contains no logical variables. The groundings of a formula are obtained by instantiating the variables with particular constants.\nMany statistical relational languages have been proposed in recent years (Getoor and Taskar 2007;De Raedt et al. 2008). We will work with one such language, called Markov logic networks (MLN) (Richardson and Domingos 2006). An MLN is a set of tuples (w, f ), where w is a real number representing a weight and f is a formula in first-order logic. Let us, for example, consider the following MLN\n1.3 Smokes(x) \u21d2 Cancer(x) (1) 1.5 Smokes(x) \u2227 Friends(x, y) \u21d2 Smokes(y)(2)\nwhich states that smokers are more likely to (1) get cancer and (2) be friends with other smokers. Given a domain of constants D, a first-order MLN \u2206 induces a grounding, which is the MLN obtained by replacing each formula in \u2206 with all its groundings (using the same weight). Take for example the domain D = {A, B} (e.g., two people, Alice and Bob), the above first-order MLN represents the following grounding.", "publication_ref": ["b8", "b4", "b27"], "figure_ref": [], "table_ref": []}, {"heading": "Smokes", "text": "(A) \u21d2 Cancer(A) 1.3 Smokes(B) \u21d2 Cancer(B) 1.5 Smokes(A) \u2227 Friends(A, A) \u21d2 Smokes(A) 1.5 Smokes(A) \u2227 Friends(A, B) \u21d2 Smokes(B) 1.5 Smokes(B) \u2227 Friends(B, A) \u21d2 Smokes(A) 1.5 Smokes(B) \u2227 Friends(B, B) \u21d2 Smokes(B)\nThis ground MLN contains eight different random variables, which correspond to all groundings of atoms Smokes(x), Cancer(x) and Friends(x, y). This leads to a distribution over 2 8 possible worlds. The weight of each world is the product of the expressions exp(w), where (w, f ) is a ground MLN formula and f is satisfied by the world. The probabilities of worlds are obtained by normalizing their weights. Without loss of generality (Jha et al. 2010), we assume that first-order formulas contain no constants. Figure 1: An undirected graphical model with 9 finitely exchangeable Bernoulli variables. There are no (conditional) independencies that hold among the variables.", "publication_ref": ["b12"], "figure_ref": [], "table_ref": []}, {"heading": "Lifted Probabilistic Inference", "text": "The advent of statistical relational languages such as Markov logic has motivated a new class of lifted inference algorithms (Poole 2003). These algorithms exploit the high-level structure and symmetries of the first-order logic formulas to speed up inference (Kersting 2012). Surprisingly, they perform tractable inference even in the absence of conditional independencies. For example, when interpreting the above MLN as an (undirected) probabilistic graphical model, all pairs of random variables in {Smokes(A), Smokes(B), . . . } are connected by an edge due to the groundings of Formula 2. The model has no conditional or contextual independencies between the Smokes variables. Nevertheless, lifted inference algorithms exactly compute its single marginal probabilities in time linear in the size of the corresponding graphical model (Van den Broeck et al. 2011), scaling up to millions of random variables.\nAs lifted inference research makes algorithmic progress, the quest for the source of tractability and its theoretical properties becomes increasingly important. For exact lifted inference, most theoretical results are based on the notion of domain-lifted inference (Van den Broeck 2011).\nDefinition 1 (Domain-lifted). Domain-lifted inference algorithms run in time polynomial in |D|.\nNote that domain-lifted algorithms can be exponential in other parameters, such as the number of formulas and predicates. Our current understanding of exact lifted inference is that syntactic properties of MLN formulas permit domainlifted inference (Van den Broeck 2011;Jaeger and Van den Broeck 2012;Taghipour et al. 2013). We will review these results where relevant. Moreover, the (fractional) automorphisms of the graphical model representation have been related to lifted inference (Niepert 2012b;Bui, Huynh, and Riedel 2012;Noessner, Niepert, and Stuckenschmidt 2013;Mladenov and Kersting 2013). While there are deep connections between automorphisms and exchangeability (Niepert 2012b;2013;Bui, Huynh, and Riedel 2012;Bui, Huynh, and de Salvo Braz 2012), we refer these to future work.", "publication_ref": ["b26", "b13", "b33", "b34", "b11", "b31", "b22", "b2", "b24", "b19", "b22", "b23", "b2", "b1"], "figure_ref": [], "table_ref": []}, {"heading": "Finite Exchangeability", "text": "This section provides some background on the concept of finite partial exchangeability. We proceed by showing that particular forms of finite exchangeability permit tractable inference. For the sake of simplicity and to provide links to statistical relational models such as MLNs, we present the theory for finite sets of (upper-case) binary random variables X = {X 1 , . . . , X n }. However, the theory applies to all distributions over finite valued discrete random variables. Lower-case x denote an assignments to X.\nWe begin with the most basic form of exchangeability. Definition 2 (Full Exchangeability). A set of variables X = {X 1 , ..., X n } is fully exchangeable if and only if Pr(X 1 = x 1 , . . . , X n = x n ) = Pr(X 1 = x \u03c0(1) , . . . , X n = x \u03c0(n) ) for all permutations \u03c0 of {1, . . . , n}. Full exchangeability is best understood in the context of a finite sequence of binary random variables such as a number of coin tosses. Here, exchangeability means that it is only the number of heads that matters and not their particular order. Figure 1 depicts an undirected graphical model with 9 finitely exchangeable dependent Bernoulli variables.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Finite Partial Exchangeability", "text": "The assumption that all variables of a probabilistic model are exchangeable is often too strong. Fortunately, exchangeability can be generalized to the concept of partial exchangeability using the notion of a sufficient statistic (Diaconis and Freedman 1980b;Lauritzen et al. 1984;Lauritzen 1988). Particular instances of exchangeability such as full finite exchangeability correspond to particular statistics. Definition 3 (Partial Exchangeability). Let D i be the domain of X i , and let T be a finite set. A set of random variables X is partially exchangeable with respect to the statistic\nT : D 1 \u00d7 \u2022 \u2022 \u2022 \u00d7 D n \u2192 T if and only if T (x) = T (x ) implies Pr(x) = Pr(x ).\nThe following theorem states that the joint distribution of a set of random variables that is partially exchangeable with a statistic T is a unique mixture of uniform distributions. Theorem 1 (Diaconis and Freedman (1980a)). Let T be a finite set and let T : {0, 1} n \u2192 T be a statistic of a partially exchangeable set X. Moreover, let S t = {x \u2208 D 1 \u00d7 \u2022 \u2022 \u2022 \u00d7 D n | T (x) = t}, let U t be the uniform distribution over S t , and let Pr(S t ) = Pr(T (x) = t). Then,\nPr(X) = t\u2208T Pr(S t )U t (X).\nHence, a distribution that is partially exchangeable with respect to a statistic T can be parameterized as a unique mixture of uniform distributions. We will see that several instances of partial exchangeability render probabilistic inference tractable. Indeed, the major theme of the present paper can be summarized as finding methods for constructing the above representation and exploiting it for tractable probabilistic inference for a given probabilistic model.\nLet [[\u2022]] be the indicator function. The uniform distribution of each equivalence class S t is U t (X) = [[T (X) = t]]/|S t |; and the probability of S t is Pr(S t ) = Pr(x)|S t | for every x \u2208 S t . Hence, every value of the statistic T corresponds to one equivalence class S t of joint assignments with identical probability. We will refer to these equivalence classes as orbits. We write x \u223c e when assignments x and e agree on the values of their shared variables (Darwiche 2009). The suborbit S t,e \u2286 S t for some evidence state e is the set of those states in S t that are compatible with e, that is, S t,e = {x | T (x) = t and x \u223c e}.", "publication_ref": ["b7", "b15", "b16", "b6", "b3"], "figure_ref": [], "table_ref": []}, {"heading": "Partial Exchangeability and Probabilistic Inference", "text": "We are now in the position to relate finite partial exchangeability to tractable probabilistic inference, using notions from Theorem 1. The inference tasks we consider are -MPE inference, i.e., finding arg max y Pr(y, e) for any\ngiven assignment e to variables E \u2286 X, and marginal inference, i.e., computing Pr(e) for any given e. For a set of variables X, we say that P (x) can be computed efficiently iff it can be computed in time polynomial in |X|. We make the following complexity claims Theorem 2. Let X be partially exchangeable with statistic T . If we can efficiently -for all x, evaluate Pr(x), and -for all e and t \u2208 T decide whether there exists an x \u2208 S t,e , and if so, construct it, then the complexity of MPE inference is polynomial in |T |.\nIf we can additionally compute |S t,e | efficiently, then the complexity of marginal inference is also polynomial in |T |.\nProof. For MPE inference, we construct an x t \u2208 S t,e for each t \u2208 T , and return the one maximizing Pr(x t ). For marginal inference, we return t\u2208T Pr(x t )|S t,e |.\nIf the above conditions for tractable inference are fulfilled we say that a distribution is tractably partially exchangeable for MPE or marginal inference. We will present notions of exchangeability and related statistics T that make distributions tractably partially exchangeable. Please note that Theorem 2 generalizes to situations in which we can only efficiently compute Pr(x) up to a constant factor Z, as is often the case in undirected probabilistic graphical models.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Markov Logic Case Study", "text": "Exchangeability and independence are not mutually exclusive. Independent and identically distributed (iid) random variables are also exchangeable. Take for example the MLN", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Smokes(x)", "text": "The random variables Smokes(A), Smokes(B), . . . are independent. Hence, we can compute their marginal probabilities independently as\nPr(Smokes(A)) = Pr(Smokes(B)) = exp(1.5) exp(1.5) + 1\nThe variables are also finitely exchangeable. For example, the probability that A smokes and B does not is equal to the probability that B smokes and A does not. The sufficient statistic T (x) counts how many people smoke in the state x and the probability of a state in which n out of N people smoke is exp(1.5n)/(exp(1.5) + 1) N .\nExchangeability can occur without independence, as in the following Markov logic network", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Smokes(x) \u2227 Smokes(y)", "text": "This distribution has neither independencies nor conditional independencies. However, its variables are finitely exchangeable and the probability of a state x is only a function of the sufficient statistic T (x) counting the number of smokers in x. The probability of a state now increases by a factor of exp(1.5) with every pair of smokers. When n people smoke there are n 2 pairs and, hence, Pr(x) = exp 1.5n 2 /Z, where Z is a normalization constant. Let Y consist of all Smokes(x) variables except for Smokes(A), and let y be an assignment to Y in which m people smoke. The probability that A smokes given y is Pr (Smokes(A) | y) = exp 1.5(m + 1) 2 exp (1.5(m + 1) 2 ) + exp (1.5m 2 ) , which clearly depends on the number of smokers in y.\nHence, Smokes(A) is not independent of Y but the random variables are exchangeable with sufficient statistic n. ", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Exchangeable Decompositions", "text": "We now present novel instances of partial exchangeability that render probabilistic inference tractable. These instances generalize exchangeability of single variables to exchangeability of sets of variables. We describe the notion of an exchangeable decomposition and prove that it fulfills the tractability requirements of Theorem 2. We proceed by demonstrating that these forms commonly occur in MLNs.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Variable Decompositions", "text": "The notions of independent and exchangeable decompositions are at the core of the developed theoretical results. Definition 4 (Variable Decomposition). A variable decomposition X = {X 1 , . . . , X k } partitions X into subsets X i . We call w = max i |X i | the width of the decomposition. Definition 5 (Independent Decomposition). A variable decomposition is independent if and only if Pr factorizes as\nPr (X) = k i=1 Q i (X i ).\nDefinition 6 (Exchangeable Decomposition). A variable decomposition is exchangeable iff for all permutations \u03c0,\nPr (X 1 = x 1 , . . . , X k = x k ) = Pr X 1 = x \u03c0(1) , . . . , X k = x \u03c0(k) .\nFigure 2 depicts an example distribution Pr with 20 random variables and a decomposition into 5 subsets of width 4. The joint distribution is invariant under permutations of the 5 sequences. The corresponding sufficient statistic T counts the number of occurrences of each binary vector of length 4 and returns a tuple of counts. Please note that the definition of full finite exchangeability (Definition 2) is the special case when the exchangeable decomposition has width 1. Also note that the size of all subsets in an exchangeable decomposition equal the width.\n1 0 0 0 1 1 0 1 0 1 0 1 1 1 0 1 1 0 0 0 Pr = Pr 1 0 0 0 1 0 0 0 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 0 ... 1 0 0 0 2 ... 1 1 0 1 2 ... 0 1 0 1 1 ... 1 1 1 1 0 T(x) ( ( ) )\nVector Count\nFigure 2: An exchangeable decomposition of 20 binary random variables (the boxes) into 5 components of width 4 (the rows). The statistic T counts the occurrences of each unique binary vector.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Tractable Variable Decompositions", "text": "The core observation of the present work is that variable decompositions that are exchangeable and/or independent result in tractable probabilistic models. For independent decompositions, the following tractability guarantee is used in most existing inference algorithms. Proposition 3. Given an independent decomposition of X with bounded width, and a corresponding factorized representation of the distribution (cf. Definition 5), the complexity of MPE and marginal inference is polynomial in |X|.\nWhile the decomposition into independent components is a well-understood concept, the combination with finite exchangeability has not been previously investigated as a statistical property that facilitates tractable probabilistic inference. We can now prove the following result. Theorem 4. Suppose we can compute Pr(x) in time polynomial in |X|. Then, given an exchangeable decomposition of X with bounded width, the complexity of MPE and marginal inference is polynomial in |X|.\nProof. Following Theorem 2, we have to show that there exists a statistic T so that (a) |T | is polynomial in |X|; (b) we can efficiently decide whether an x \u2208 S t,e exists and if so, construct it; and (c) efficiently compute |S t,e | for all e and t \u2208 T . Statements (b) and (c) ensure that the assumptions of Theorem 2 hold for exchangeable decompositions, which combined with (a) proves the theorem.\nTo prove (a), let us first construct a sufficient statistic for exchangeable decompositions. A full joint assignment X = x decomposes into assignments \nX 1 = x 1 , . . . , X k = x k in\n|T | = k + 2 w \u2212 1 2 w \u2212 1 \u2264 k 2 w \u22121 \u2264 n 2 w \u22121 .\nTo prove statements (b) and (c) we have to find, for each partial assignment E = e, an algorithm that generates an\nx \u2208 S t,e and that computes |S t,e | in time polynomial in |X|. To hint at the proof strategy, we give the formula for the orbit without evidence |S t |:\nS (c1,...,c 2 w ) = k c 1 k \u2212 c 1 c 2 . . . k \u2212 2 w \u22122 i=1 c i c 2 w \u22121 .\nThe proof is very technical and deferred to the appendix.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Markov Logic Case Study", "text": "Let us consider the following MLN\n1.3 Smokes(x) \u21d2 Cancer(x) 1.5 Smokes(x) \u2227 Smokes(y)\nIt models a distribution in which every non-smoker or smoker with cancer, that is, every x satisfying the first formula, increases the probability by a factor of exp(1.3). Each pair of smokers increases the probability by a factor of exp(1.5). This model is not fully exchangeable: swapping Smokes(A) and Cancer(A) in a state yields a different probability. There are no (conditional) independencies between the Smokes(x) atoms. The variables in this MLN do have an exchangeable decomposition whose width is two, namely\nX = {{Smokes(A), Cancer(A)}, {Smokes(B), Cancer(B)}, {Smokes(C), Cancer(C)}, . . . }.\nThe sufficient statistic of this decomposition counts the number of people in each of four groups, depending on whether they smoke, and whether they have cancer. The probability of a state only depends on the number of people in each group and swapping people between groups does not change the probability of a state. Theorem 4 says that this MLN permits tractable inference. The fact that this MLN has an exchangeable decomposition is not a coincidence. In general, we can show this for MLNs of unary atoms, which are called monadic MLNs.\nTheorem 5. The variables in a monadic MLN have an exchangeable decomposition. The width of this decomposition is equal to the number of predicates.\nThe proof builds on syntactic symmetries of the MLN, called renaming automorphisms (Bui, Huynh, and Riedel 2012;Niepert 2012a). Please see the appendix for further details.\nIt now follows as a corollary of Theorems 4 and 5 that MPE and marginal inference in monadic MLNs is polynomial in |X|, and therefore also in the domain size |D|. Corollary 6. Inference in monadic MLNs is domain-lifted.", "publication_ref": ["b2", "b21"], "figure_ref": [], "table_ref": []}, {"heading": "Marginal and Conditional Exchangeability", "text": "Many distributions are not decomposable into independent or exchangeable decompositions. Similar to conditional independence, the notion of exchangeability can be extended to conditional exchangeability. We generalize exchangeability to conditional distributions, and state the corresponding tractability guarantees.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Marginal and Conditional Decomposition", "text": "Tractability results for exchangeable decompositions on all variables under consideration also extend to subsets.\nDefinition 7 (Marginal Exchangeability). When a subset Y of the variables under consideration has an exchangeable decomposition Y, we say that Y is marginally exchangeable.\nThis means that Y is still an exchangeable decomposition when considering the distribution Pr(Y) = X\\Y Pr(X).\nTheorem 7. Suppose we are given a marginally exchangeable decomposition of Y with bounded width and let Z = X \\ Y. If computing Pr(y) = z Pr(y, z) is polynomial in |X| for all y, then the complexity of MPE and marginal inference over variables Y is polynomial in |X|.\nProof. Let T be the statistic associated with the given decomposition, and let e be evidence given on E \u2286 Y. Then,\nP (e) = t\u2208T |S t,e | \u2022 z\nPr(y t,e , z), where y t,e \u2208 S t,e .\nBy the assumption that Y is marginally exchangeable and the proof of Theorem 4, we can compute |S t,e | and an y t,e \u2208 S t,e in time polynomial in |X|. An analogous argument holds for MPE inference on Pr(Y).\nWe now need to identify distributions Pr(Y, Z) for which we can compute Pr(y) efficiently. This implies tractable probabilistic inference over Y. Given a particular y, we have already seen sufficient conditions: when Z decomposes exchangeably or independently conditioned on y, Proposition 3 and Theorem 4 guarantee that computing Pr(y) is tractable. This suggests the following general notion.\nDefinition 8 (Conditional Decomposability). Let X be a set of variables with Y \u2286 X and Z = X \\ Y. We say that Z is exchangeably (independently) decomposable given Y if and only if for each assignment y to Y, there exists an exchangeable (independent) decomposition Z y of Z.\nFurthermore, we say that Z is decomposable with bounded width iff the width w of each Z y is bounded. When the decomposition can be computed in time polynomial in |X| for all y, we say that Z is efficiently decomposable.\nTheorem 8. Let X be a set of variables with Y \u2286 X and Z = X \\ Y. Suppose we are given a marginally exchangeable decomposition of Y with bounded width. Suppose further that Z is efficiently (exchangeably or independently) decomposable given Y with bounded width. If we can compute Pr(x) efficiently, then the complexity of MPE and marginal inference over variables Y is polynomial in |X|.\nProof. Following Theorem 7, we only need to show that we can compute Pr(y) = z Pr(y, z) in time polynomial in |X| for all y. When Z is exchangeably decomposable given Y, this follows from constructing Z y and employing the arguments made in the proof of Theorem 4. The case when Z is independently decomposable is analogous.\nTheorems 7 and 8 are powerful results and allow us to identify numerous probabilistic models for which inference is tractable. For instance, we will prove liftability results for Markov logic networks. However, we are only at the beginning of leveraging these tractability results to their fullest extent. Especially Theorem 7 is widely applicable because the computation of z Pr(y, z) can be tractable for many reasons. For instance, conditioned on the variables Y, the distributions Pr(y, Z) could be bounded treewidth graphical models, such as tree-structured Markov networks. Tractability for Pr(Y) follows immediately from Theorem 7.\nSince Theorem 7 only speaks to the tractability of querying variables in Y, there is the question of when we can also efficiently query the variables Z. Results from the lifted inference literature may provide a solution by bounding or approximating queries and evidence that includes Z to maintain marginal exchangeability (Van den Broeck and Darwiche 2013). The next section shows that certain restricted situations permit tractable inference on the variables in Z.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Markov Logic Case Study", "text": "Let us again consider the MLN\n1.3 Smokes(x) \u21d2 Cancer(x) 1.5 Smokes(x) \u2227 Friends(x, y) \u21d2 Smokes(y)\nhaving the marginally exchangeable decomposition Y = {{Smokes(A)}, {Smokes(B)}, {Smokes(C)}, . . . } whose width is one. To intuitively see why this decomposition is marginally exchangeable, let us consider two states y and y of the Smokes(x) atoms in which only the values of two atoms, for example Smokes(A) and Smokes(B), are swapped. There is a symmetry of the MLNs joint distribution that swaps these atoms: the renaming automorphism (Bui, Huynh, and Riedel 2012;Niepert 2012a) that swaps constants A and B in all atoms. For marginal exchangeability, we need that z Pr(y, z) = z Pr(y , z). But this holds since the renaming automorphism is an automorphism of the set of states {yz | z \u2208 D Z } -for every y, y , and z there exists an automorphism that maps yz to y z with Pr(y, z) = Pr(y , z ).\nThe given MLN has several marginally exchangeable decompositions, with the most general one being For that decomposition, the remaining Z variables {Friends(A, B), Friends(B, A), Friends(A, C), . . . } are independently decomposable given Y. The Z variables appear at most once in any formula. In a probabilistic graphical model representation, evidence on the Y variables would therefore decompose the graph into independent components. Thus, it follows from Theorem 8 that we can efficiently answer any query over the variables in Y. This insight generalizes to a large class of MLNs, called the two-variable fragment. It consists of all MLNs whose formulas contain at most two logical variables.\nTheorem 9. In a two-variable fragment MLN, let Y and Z be the ground atoms with one and two distinct arguments respectively. Then there exists a marginally exchangeable decomposition of Y, and Z is efficiently independently decomposable given Y. Each decomposition's width is at most twice the number of predicates.\nThe proof of Theorem 9 is rather technical and we refer the reader to the appendix for a detailed proof. It now follows from Theorems 8 and 9 that the complexity of inference over the unary atoms in the two-variable fragment is polynomial in the domain size |D|.\nWhat happens if our query involves variables from Zthe binary atoms? It is known in the lifted inference literature that we cannot expect efficient inference of general queries that involve the binary atoms. Assignments to the Z variables break symmetries and therefore break marginal exchangeability. This causes inference to become #P-hard as a function of the query (Van den Broeck and Davis 2012). Nevertheless, if we bound the number of binary atoms involved in the query, we can use the developed theory to show a general liftability result.\nTheorem 10. For any MLN in the two-variable fragment, MPE and marginal inference over the unary atoms and a bounded number of binary atoms is domain-lifted.\nThis corresponds to one of the strongest known theoretical results in the lifted inference literature (Jaeger and Van den Broeck 2012). We refer the interested reader to the appendix for the proof. A consequence of Theorem 10 is that we can efficiently compute all single marginals in the two-variable fragment, given arbitrary evidence on the unary atoms.", "publication_ref": ["b2", "b21", "b11"], "figure_ref": [], "table_ref": []}, {"heading": "Discussion and Conclusion", "text": "We conjecture that the concept of (partial) exchangeability has potential to contribute to a deeper understanding of tractable probabilistic models. The important role conditional independence plays in the research field of graphical models is evidence for this hypothesis. Similar to conditional independence, it might be possible to develop a theory of exchangeability that mirrors that of independence. For instance, there might be a (graphical) structural representations of particular types of partial exchangeability and corresponding logical axiomatizations (Pearl 1988). Moreover, it would be interesting to develop graphical models with exchangeability and independence, and notions like d-separation to detect marginal exchangeability and conditional decomposability from a structural representation. The first author has taken steps in this direction by introducing exchangeable variable models, a class of (non-relational) probabilistic models based on finite partial exchangeability (Niepert and Domingos 2014).\nRecently, there has been considerable interest in computing and exploiting the automorphisms of graphical models (Niepert 2012b;Bui, Huynh, and Riedel 2012). There are several interesting connections between automorphisms, exchangeability, and lifted inference (Niepert 2012a). Moreover, there are several group theoretical algorithms that one could apply to the automorphism groups to discover the structure of exchangeable variable decompositions from the structure of the graphical models. Since we presently only exploit renaming automorphisms, there is a potential for tractable inference in MLNs that goes beyond what is known in the lifted inference literature.\nPartial exchangeability is related to collective graphical models (Sheldon and Dietterich 2011) (CGMs) and cardinality-based potentials (Gupta, Diwan, and Sarawagi 2007) as these models also operate on sufficient statistics. However, probabilistic inference for CGMs is not tractable and there are no theoretical results that identify tractable CGMs models. The presented work may help to identify such situations. The presented theory generalizes the statistics of cardinality-based potentials.\nLifted Inference and Exchangeability Our case studies identified a deep connection between lifted probabilistic inference and the concepts of partial, marginal and conditional exchangeability. In this new context, it appears that exact lifted inference algorithms (de Salvo Braz, Amir, and Roth 2005;Milch et al. 2008;Jha et al. 2010;Van den Broeck et al. 2011;Gogate and Domingos 2011;Taghipour et al. 2012) can all be understood as performing essentially three steps: (i) construct a sufficient statistic T (x), (ii) generate all possible values of the sufficient statistic, and (iii) count suborbit sizes for a given statistic. For an example of (i), we can show that a compiled firstorder circuit (Van den Broeck et al. 2011) or the trace of probabilistic theorem proving (Gogate and Domingos 2011) encode a sufficient statistic in their existential quantifier and splitting nodes. Steps (ii) and (iii) are manifested in all these algorithms through summations and binomial coefficients.\nBetween Corollary 6 and Theorem 10, we have re-proven almost the entire range of liftability results from the lifted inference literature (Jaeger and Van den Broeck 2012) within the exchangeability framework, and extended these to MPE inference. There is an essential difference though: liftability results make assumptions about the syntax (e.g., MLNs), whereas our exchangeability theorems apply to all distributions. We expect Theorem 8 to be used to show liftability, and more general tractability results for many other representation languages, including but not limited to the large number of statistical relational languages that have been proposed (Getoor and Taskar 2007;De Raedt et al. 2008).", "publication_ref": ["b25", "b20", "b22", "b2", "b21", "b10", "b5", "b18", "b12", "b33", "b9", "b30", "b33", "b11", "b8", "b4"], "figure_ref": [], "table_ref": []}, {"heading": "Acknowledgments", "text": "This work was partially supported by ONR grants #N00014-12-1-0423, #N00014-13-1-0720, and #N00014-12-1-0312; NSF grants #IIS-1118122 and #IIS-0916161; ARO grant #W911NF-08-1-0242; AFRL contract #FA8750-13-2-0019; the Research Foundation-Flanders (FWO-Vlaanderen); and a Google research award to MN.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A Continued Proof of Theorem 4", "text": "Proof. To prove statements (b) and (c), we need to represent partial assignments E = e with E \u2286 X. The partial assignments decompose into partial assignments E 1 = e 1 , . . . , E k = e k in accordance with X . Each e corresponds to a string m \u2208 {0, 1, * } w where characters 0 and 1 encode assignments to variables in E and * encodes an unassigned variable in X \u2212 E . In this case, we say that e is of type m. Please note that there are 2 w distinct b and 3 w distinct m. We say that x agrees with e, denoted by x \u223c e, if and only if their shared variables have identical assignments.\nA completion c of e to x is a bijection c : {e 1 , ..., e k } \u2192 {x 1 , ..., x k } such that c(e i ) = x j implies e i \u223c x j . Every completion corresponds to a unique way to assign elements in {0, 1} to unassigned variables so as to turn the partial assignment e into the full assignment x.\nLet t = (c 1 , ..., c 2 w ) \u2208 T , let E \u2286 X, and let e \u2208 D E . Moreover, let\nd j = k =1 [[e = m j ]] for each m j \u2208 {0, 1, * } w . Consider the set of matrices A t,e = A \u2208 M(2 w , 3 w ) i a i,j = d j , j a i,j = c i and a i,j = 0 if b i \u223c m j .\nEvery A \u2208 A t,e represents a set of completions from e to x for which T (x) = t. The value a i,j indicates that each completion represented by A maps a i,j elements in {e 1 , ..., e k } of type m j to a i,j elements in {x 1 , ..., x k } of type b i . We write \u03b3(A) for the set of completions represented by A.\nWe have to prove the following statements 1. For every A \u2208 A t,e and every c \u2208 \u03b3(A) there exists an x \u2208 D X with T (x) = t and c is a completion of e to x; 2. For every x \u2208 D X with T (x) = t and every completion c of e to x there exists an A \u2208 A t,e such that c \u2208 \u03b3(A); 3. For all A, A \u2208 A t,e with A = A we have that \u03b3(A) \u2229 \u03b3(A ) = \u2205; 4. For every A \u2208 A t,e , we can efficiently compute |\u03b3(A)|, the size of the set of completions represented by A.\nTo prove statement (1), let A \u2208 A t,e and c \u2208 \u03b3(A). By the definition of A t,e , c maps a i,j elements in {e 1 , ..., e k } of type m j to a i,j elements in {x 1 , ..., x k } of type b i . By the conditions i a i,j = d j and j a i,j = c i of the definition of A t,e we have that c is a bijection. By the condition a i,j = 0 if b i \u223c m j of the definition of A t,e we have that c(e i ) = x j implies e i \u223c x j and, therefore, e \u223c x. Hence, c is a completion. Moreover, c completes e to an x with k =1 [[x = b i ]] = j a i,j = c i by the definition of A t,e . Hence, T (x) = t.\nTo prove statement (2), let x \u2208 D X with T (x) = t and let c be a completion of e to x. We construct an A with c \u2208 \u03b3(A) as follows. Since c is a completion we have that c(e i ) = x j implies e i \u223c x j and, hence, we set a i,j = 0 if b i \u223c m j . For all other entries in A we set a i,j = |{e j | c(e j ) = x i }|. Since c is surjective, we have that j a i,j = c i and since c is injective, we have that i a i,j = d j . Hence, A \u2208 A t,e .\nTo prove statement (3), let A, A \u2208 A t,e with A = A . Since A = A we have that there exist i, j such that, without loss of generality, a i,j < a i,j . Hence, every c \u2208 A maps fewer elements of type m j to elements of type b i than every c \u2208 A . Hence, c = c for every c \u2208 A and every c \u2208 A .\nTo prove statement (4), let A \u2208 A t,e . Every c \u2208 A maps a i,j elements in {e 1 , ..., e k } of type m j to a i,j elements in {x 1 , ..., x k } of type b i . Hence, the size of the set of completions represented by A is, for each 1 \u2264 j \u2264 3 w , the number of different ways to place a i,j balls of color i, 1 \u2264 i \u2264 2 w , into d j urns. Hence,\n|\u03b3(A)| = 3 w j=1 2 w i=1 d j \u2212 i\u22121 q=1 a i,q a i,j\n.\nFrom the statements ( 1)-( 4) we can conclude that This allows us to prove (b) and (c). We can construct A t,e in time polynomial in n as follows. There are 2 w 3 w entries in a 2 w \u00d7 3 w matrix and each entry has at most k different values. Hence, we can enumerate all k 6 w \u2264 n 6 w possible matrices A \u2208 M(2 w , 3 w ). We simply select those A for which the conditions in the definition of A t,e hold. For one A \u2208 A t,e we can efficiently construct one c and the x that it completes e to. This proves (b). Finally, we compute |S t,e |. This proves (c).", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "B Proof of Theorem 5", "text": "Proof. Let P 1 , ..., P N be the N unary predicates of a given MLN and let D = {1, ..., k} be the domain. After grounding, there are k ground atoms per predicate. We write P j (i) to denote the ground atom that resulted from instantiating predicate P j with domain element i. Let X = {X 1 , ..., X k } be a decomposition of the set of ground atoms with X i = {P 1 (i), P 2 (i), ..., P N (i)} for every 1 \u2264 i \u2264 k. A renaming automorphism (Bui, Huynh, and Riedel 2012;Niepert 2012a) is a permutation of the ground atoms that results from a permutation of the domain elements. The joint distribution over all ground atoms remains invariant under these permutations. Consider the permutation of ground atoms that results from swapping two domain elements i \u2194 i . This permutation acting on the set of ground atoms permutes the components X i and X i and leaves all other components invariant. Since this is possible for each pair i, i \u2208 {1, ..., k} it follows that the decomposition X is exchangeable.", "publication_ref": ["b2", "b21"], "figure_ref": [], "table_ref": []}, {"heading": "C Proof of Theorem 9", "text": "Proof. Let P 1 , ..., P M be the M unary predicates and let Q 1 , ..., Q N be the N binary predicates of a given MLN and let D = {1, ..., k} be the domain. After grounding, there are k ground atoms per unary and k 2 ground atoms per binary predicate. We write P (i) to denote the ground atom that resulted from instantiating unary predicate P with domain element i and Q (i, j) to denote the ground atom that resulted from instantiating binary predicate Q with domain elements i and j.\nLet X be the set of all ground atoms, let Y = {P (i\n) | 1 \u2264 i \u2264 k, 1 \u2264 \u2264 M } \u222a {Q (i, i) | 1 \u2264 i \u2264 k, 1 \u2264 \u2264 N } and let Z = X \u2212 Y. Moreover, let Y = {Y 1 , ..., Y k } with Y i = {P (i) | 1 \u2264 \u2264 M } \u222a {Q (i, i) | 1 \u2264 \u2264 N }.\nWe can make the same arguments as in the proof of Theorem 5 to show that Y is exchangeable. Now, we prove that the variables Z are independently decomposable given Y. Let Z i,j = {Q 1 (i, j), ..., Q N (i, j), Q 1 (j, i), ..., Q N (j, i)} for all 1 \u2264 i < j \u2264 k. Now, let f be any ground formula and let G be the set of ground atoms occurring in both f and Z. Then, either G \u2286 Z i,j or G \u2229 Z i,j = \u2205 since every formula in the MLN has at most two variables. Hence, {Z i,j | 1 \u2264 i < j \u2264 k} is a decomposition of Z with k 2 components, width 2N , and Pr(Z, y) factorizes as Pr(Z, y) = i,j i<j Q i,j (Z i,j , y).\nBy the properties of MLNs, we have that the Q i,j (Z i,j , y) are computable in time exponential in the width of the decomposition but polynomial in k.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "D Proof of Theorem 10", "text": "Proof. Suppose that the query e contains a bounded number of binary atoms whose arguments are constants from the set K. Consider the set of variables Q consisting of all unary atoms whose argument comes from K, and all binary atoms whose arguments both come from K. The unary atoms in Q are no long marginally exchangeable, because their arguments can appear asymmetrically in e. We can now answer the query by simply enumerating all states q of Q and performing inference in each Pr(Y, Z, q) separately, were all variables Y have again become marginally exchangeable, and all variables Z have become independently decomposable given Y. The construction of Y and Z is similar to the proof of Theorem 9, except that some additional binary atoms are now in Y instead of Z. These atoms have one argument in K, and one not in K, and are treated as unary. When we bound the number of binary atoms in the query, the size of Q will not be a function of the domain size, and enumerating over all states q is domain-lifted.", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Context-specific independence in Bayesian networks", "journal": "", "year": "1996", "authors": "C Boutilier; N Friedman; M Goldszmidt; D Koller"}, {"ref_id": "b1", "title": "Exact lifted inference with distinct soft evidence on every object", "journal": "", "year": "2012", "authors": "H Bui; T Huynh; R De Salvo Braz"}, {"ref_id": "b2", "title": "Automorphism groups of graphical models and lifted variational inference", "journal": "", "year": "2012", "authors": "H Bui; T Huynh; S Riedel"}, {"ref_id": "b3", "title": "Modeling and reasoning with Bayesian networks", "journal": "Cambridge University Press", "year": "2009", "authors": "A Darwiche"}, {"ref_id": "b4", "title": "Probabilistic inductive logic programming: theory and applications", "journal": "Springer-Verlag", "year": "2008", "authors": "L De Raedt; P Frasconi; K Kersting; S Muggleton"}, {"ref_id": "b5", "title": "Lifted firstorder probabilistic inference", "journal": "", "year": "2005", "authors": "R De Salvo Braz; E Amir; D Roth"}, {"ref_id": "b6", "title": "De Finetti's generalizations of exchangeability", "journal": "", "year": "1980", "authors": "P Diaconis; D Freedman"}, {"ref_id": "b7", "title": "Finite exchangeable sequences", "journal": "The Annals of Probability", "year": "1980", "authors": "P Diaconis; D Freedman"}, {"ref_id": "b8", "title": "Introduction to Statistical Relational Learning", "journal": "The MIT Press", "year": "2007", "authors": "L Getoor; B Taskar"}, {"ref_id": "b9", "title": "Probabilistic theorem proving", "journal": "", "year": "2011", "authors": "V Gogate; P Domingos"}, {"ref_id": "b10", "title": "Efficient inference with cardinality-based clique potentials", "journal": "", "year": "2007", "authors": "R Gupta; A A Diwan; S Sarawagi"}, {"ref_id": "b11", "title": "Liftability of probabilistic inference: Upper and lower bounds", "journal": "", "year": "2012", "authors": "M Jaeger; G Van Den Broeck"}, {"ref_id": "b12", "title": "Lifted inference seen from the other side: The tractable features", "journal": "", "year": "2010", "authors": "A Jha; V Gogate; A Meliou; D Suciu"}, {"ref_id": "b13", "title": "Lifted probabilistic inference", "journal": "", "year": "2012", "authors": "K Kersting"}, {"ref_id": "b14", "title": "Probabilistic Graphical Models", "journal": "The MIT Press", "year": "2009", "authors": "D Koller; N Friedman"}, {"ref_id": "b15", "title": "Extreme point models in statistics", "journal": "Scandinavian Journal of Statistics", "year": "1984", "authors": "S L Lauritzen; O E Barndorff-Nielsen; A P Dawid; P Diaconis; S Johansen"}, {"ref_id": "b16", "title": "Extremal families and systems of sufficient statistics", "journal": "Springer-Verlag", "year": "1988", "authors": "S L Lauritzen"}, {"ref_id": "b17", "title": "Graphical Models", "journal": "Oxford University Press", "year": "1996", "authors": "S L Lauritzen"}, {"ref_id": "b18", "title": "Lifted probabilistic inference with counting formulas", "journal": "", "year": "2008", "authors": "B Milch; L Zettlemoyer; K Kersting; M Haimes; L Kaelbling"}, {"ref_id": "b19", "title": "Lifted inference via k-locality", "journal": "", "year": "2013", "authors": "M Mladenov; K Kersting"}, {"ref_id": "b20", "title": "Exchangeable variable models", "journal": "", "year": "2014", "authors": "M Niepert; P Domingos"}, {"ref_id": "b21", "title": "Lifted probabilistic inference: An MCMC perspective", "journal": "", "year": "2012", "authors": "M Niepert"}, {"ref_id": "b22", "title": "Markov chains on orbits of permutation groups", "journal": "", "year": "2012", "authors": "M Niepert"}, {"ref_id": "b23", "title": "Symmetry-aware marginal density estimation", "journal": "", "year": "2013", "authors": "M Niepert"}, {"ref_id": "b24", "title": "RockIt: Exploiting Parallelism and Symmetry for MAP Inference in Statistical Relational Models", "journal": "", "year": "2013", "authors": "J Noessner; M Niepert; H Stuckenschmidt"}, {"ref_id": "b25", "title": "Probabilistic reasoning in intelligent systems: networks of plausible inference", "journal": "Morgan Kaufmann", "year": "1988", "authors": "J Pearl"}, {"ref_id": "b26", "title": "First-order probabilistic inference", "journal": "", "year": "2003", "authors": "D Poole"}, {"ref_id": "b27", "title": "Markov logic networks", "journal": "Machine learning", "year": "2006", "authors": "M Richardson; P Domingos"}, {"ref_id": "b28", "title": "Graph minors. II. Algorithmic aspects of tree-width", "journal": "Journal of algorithms", "year": "1986", "authors": "N Robertson; P Seymour"}, {"ref_id": "b29", "title": "Collective graphical models", "journal": "", "year": "2011", "authors": "D Sheldon; T Dietterich"}, {"ref_id": "b30", "title": "Lifted variable elimination with arbitrary constraints", "journal": "", "year": "2012", "authors": "N Taghipour; D Fierens; J Davis; H Blockeel"}, {"ref_id": "b31", "title": "On the complexity and approximation of binary evidence in lifted inference", "journal": "", "year": "2013", "authors": "N Taghipour; D Fierens; G Van Den Broeck; J Davis; H ; G Blockeel; A Darwiche"}, {"ref_id": "b32", "title": "Conditioning in first-order knowledge compilation and lifted probabilistic inference", "journal": "", "year": "2012", "authors": "G Van Den Broeck; Davis ; J "}, {"ref_id": "b33", "title": "Lifted probabilistic inference by firstorder knowledge compilation", "journal": "", "year": "2011", "authors": "G Van Den Broeck; N Taghipour; W Meert; J Davis; L De Raedt"}, {"ref_id": "b34", "title": "On the completeness of firstorder knowledge compilation for lifted probabilistic inference", "journal": "", "year": "2011", "authors": "G Van Den Broeck"}], "figures": [{"figure_label": "", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Figure 1 depicts the graphical representation of the corresponding ground Markov logic network.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "accordance with the given variable decomposition. Each x is a bit string b \u2208 {0, 1} w . Consider a statistic T (x) = (c 1 , . . . , c 2 w ), where each c i has a corresponding unique bit string b i \u2208 {0, 1} w and c i = k =1 [[x = b i ]]. The value c i of the statistic thus represents the number of components in the decomposition that are assigned bit string b i . Hence, we have 2 w i=1 c i = k, and we prove (a) by observing that", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "For example, Pr(Smokes(A) = 0, Cancer(A) = 1, Smokes(B) = 1, Cancer(B) = 0) = Pr(Smokes(A) = 1, Cancer(A) = 0, Smokes(B) = 0, Cancer(B) = 1).", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Y= {{Smokes(A), Cancer(A), Friends(A, A)}, {Smokes(B), Cancer(B), Friends(B, B)}, {Smokes(C), Cancer(C), Friends(C, C)}, . . . }.", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "1.3 Smokes(x) \u21d2 Cancer(x) (1) 1.5 Smokes(x) \u2227 Friends(x, y) \u21d2 Smokes(y)(2)", "formula_coordinates": [2.0, 69.96, 396.31, 222.54, 22.96]}, {"formula_id": "formula_1", "formula_text": "(A) \u21d2 Cancer(A) 1.3 Smokes(B) \u21d2 Cancer(B) 1.5 Smokes(A) \u2227 Friends(A, A) \u21d2 Smokes(A) 1.5 Smokes(A) \u2227 Friends(A, B) \u21d2 Smokes(B) 1.5 Smokes(B) \u2227 Friends(B, A) \u21d2 Smokes(A) 1.5 Smokes(B) \u2227 Friends(B, B) \u21d2 Smokes(B)", "formula_coordinates": [2.0, 71.81, 520.85, 202.88, 78.75]}, {"formula_id": "formula_2", "formula_text": "T : D 1 \u00d7 \u2022 \u2022 \u2022 \u00d7 D n \u2192 T if and only if T (x) = T (x ) implies Pr(x) = Pr(x ).", "formula_coordinates": [3.0, 54.0, 367.28, 200.18, 26.4]}, {"formula_id": "formula_3", "formula_text": "Pr(X) = t\u2208T Pr(S t )U t (X).", "formula_coordinates": [3.0, 116.1, 503.11, 114.3, 20.06]}, {"formula_id": "formula_4", "formula_text": "Pr(Smokes(A)) = Pr(Smokes(B)) = exp(1.5) exp(1.5) + 1", "formula_coordinates": [3.0, 333.64, 569.56, 209.02, 22.31]}, {"formula_id": "formula_5", "formula_text": "Pr (X) = k i=1 Q i (X i ).", "formula_coordinates": [4.0, 128.11, 494.82, 90.29, 30.32]}, {"formula_id": "formula_6", "formula_text": "Pr (X 1 = x 1 , . . . , X k = x k ) = Pr X 1 = x \u03c0(1) , . . . , X k = x \u03c0(k) .", "formula_coordinates": [4.0, 75.82, 562.33, 196.51, 25.73]}, {"formula_id": "formula_7", "formula_text": "1 0 0 0 1 1 0 1 0 1 0 1 1 1 0 1 1 0 0 0 Pr = Pr 1 0 0 0 1 0 0 0 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 0 ... 1 0 0 0 2 ... 1 1 0 1 2 ... 0 1 0 1 1 ... 1 1 1 1 0 T(x) ( ( ) )", "formula_coordinates": [4.0, 318.31, 53.17, 232.62, 95.46]}, {"formula_id": "formula_8", "formula_text": "X 1 = x 1 , . . . , X k = x k in", "formula_coordinates": [4.0, 319.5, 556.82, 237.83, 19.95]}, {"formula_id": "formula_9", "formula_text": "|T | = k + 2 w \u2212 1 2 w \u2212 1 \u2264 k 2 w \u22121 \u2264 n 2 w \u22121 .", "formula_coordinates": [4.0, 354.16, 653.54, 169.17, 23.89]}, {"formula_id": "formula_10", "formula_text": "S (c1,...,c 2 w ) = k c 1 k \u2212 c 1 c 2 . . . k \u2212 2 w \u22122 i=1 c i c 2 w \u22121 .", "formula_coordinates": [5.0, 66.62, 96.91, 216.58, 27.84]}, {"formula_id": "formula_11", "formula_text": "1.3 Smokes(x) \u21d2 Cancer(x) 1.5 Smokes(x) \u2227 Smokes(y)", "formula_coordinates": [5.0, 110.43, 194.63, 125.64, 22.96]}, {"formula_id": "formula_12", "formula_text": "X = {{Smokes(A), Cancer(A)}, {Smokes(B), Cancer(B)}, {Smokes(C), Cancer(C)}, . . . }.", "formula_coordinates": [5.0, 94.97, 347.63, 156.57, 36.91]}, {"formula_id": "formula_13", "formula_text": "P (e) = t\u2208T |S t,e | \u2022 z", "formula_coordinates": [5.0, 326.16, 354.5, 88.5, 20.06]}, {"formula_id": "formula_14", "formula_text": "1.3 Smokes(x) \u21d2 Cancer(x) 1.5 Smokes(x) \u2227 Friends(x, y) \u21d2 Smokes(y)", "formula_coordinates": [6.0, 75.77, 386.92, 194.96, 22.96]}, {"formula_id": "formula_15", "formula_text": "d j = k =1 [[e = m j ]] for each m j \u2208 {0, 1, * } w . Consider the set of matrices A t,e = A \u2208 M(2 w , 3 w ) i a i,j = d j , j a i,j = c i and a i,j = 0 if b i \u223c m j .", "formula_coordinates": [7.0, 319.5, 279.58, 238.5, 74.65]}, {"formula_id": "formula_16", "formula_text": "|\u03b3(A)| = 3 w j=1 2 w i=1 d j \u2212 i\u22121 q=1 a i,q a i,j", "formula_coordinates": [8.0, 98.11, 219.66, 139.42, 31.97]}, {"formula_id": "formula_17", "formula_text": ") | 1 \u2264 i \u2264 k, 1 \u2264 \u2264 M } \u222a {Q (i, i) | 1 \u2264 i \u2264 k, 1 \u2264 \u2264 N } and let Z = X \u2212 Y. Moreover, let Y = {Y 1 , ..., Y k } with Y i = {P (i) | 1 \u2264 \u2264 M } \u222a {Q (i, i) | 1 \u2264 \u2264 N }.", "formula_coordinates": [8.0, 319.5, 100.99, 238.5, 52.57]}], "doi": ""}