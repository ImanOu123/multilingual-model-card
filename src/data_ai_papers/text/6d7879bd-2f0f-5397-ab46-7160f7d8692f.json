{"title": "Discriminative Training and Maximum Entropy Models for Statistical Machine Translation", "authors": "Franz Josef Och; Hermann Ney", "pub_date": "", "abstract": "We present a framework for statistical machine translation of natural languages based on direct maximum entropy models, which contains the widely used source-channel approach as a special case. All knowledge sources are treated as feature functions, which depend on the source language sentence, the target language sentence and possible hidden variables. This approach allows a baseline machine translation system to be extended easily by adding new feature functions. We show that a baseline statistical machine translation system is significantly improved using this approach.", "sections": [{"heading": "Introduction", "text": "We are given a source ('French') sentence f J 1 = f 1 , . . . , f j , . . . , f J , which is to be translated into a target ('English') sentence e I 1 = e 1 , . . . , e i , . . . , e I . Among all possible target sentences, we will choose the sentence with the highest probability: 1 e I 1 = argmax\ne I 1 {P r(e I 1 |f J 1 )} (1)\nThe argmax operation denotes the search problem, i.e. the generation of the output sentence in the target language. 1 The notational convention will be as follows. We use the symbol P r(\u2022) to denote general probability distributions with (nearly) no specific assumptions. In contrast, for model-based probability distributions, we use the generic symbol p(\u2022).", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Source-Channel Model", "text": "According to Bayes' decision rule, we can equivalently to Eq. 1 perform the following maximization:\ne I 1 = argmax e I 1 {P r(e I 1 ) \u2022 P r(f J 1 |e I 1 )} (2)\nThis approach is referred to as source-channel approach to statistical MT. Sometimes, it is also referred to as the 'fundamental equation of statistical MT' (Brown et al., 1993). Here, P r(e I 1 ) is the language model of the target language, whereas P r(f J 1 |e I 1 ) is the translation model. Typically, Eq. 2 is favored over the direct translation model of Eq. 1 with the argument that it yields a modular approach. Instead of modeling one probability distribution, we obtain two different knowledge sources that are trained independently.\nThe overall architecture of the source-channel approach is summarized in Figure 1. In general, as shown in this figure, there may be additional transformations to make the translation task simpler for the algorithm. Typically, training is performed by applying a maximum likelihood approach. If the language model P r(e I 1 ) = p \u03b3 (e I 1 ) depends on parameters \u03b3 and the translation model P r(f J 1 |e I 1 ) = p \u03b8 (f J 1 |e I 1 ) depends on parameters \u03b8, then the optimal parameter values are obtained by maximizing the likelihood on a parallel training corpus f S\n1 , e S 1 (Brown et al., 1993): Global Searc\u0125\n\u03b8 = argmax \u03b8 S s=1 p \u03b8 (f s |e s ) (3) \u03b3 = argmax \u03b3 S s=1 p \u03b3 (e s )(4)\ne I 1 = argmax e I 1 {P r(e I 1 ) \u2022 P r(f J 1 |e I 1 )} P r(f J 1 |e I 1 ): Translation Model o o\nPostprocessing Target Language Text Figure 1: Architecture of the translation approach based on source-channel models.\nWe obtain the following decision rule:\ne I 1 = argmax e I 1 {p\u03b3(e I 1 ) \u2022 p\u03b8(f J 1 |e I 1 )} (5)\nState-of-the-art statistical MT systems are based on this approach. Yet, the use of this decision rule has various problems:\n1. The combination of the language model p\u03b3(e I 1 ) and the translation model p\u03b8(f J 1 |e I 1 ) as shown in Eq. 5 can only be shown to be optimal if the true probability distributions p\u03b3(e I 1 ) = P r(e I 1 ) and p\u03b8(f J 1 |e I 1 ) = P r(f J 1 |e I 1 ) are used. Yet, we know that the used models and training methods provide only poor approximations of the true probability distributions. Therefore, a different combination of language model and translation model might yield better results.", "publication_ref": ["b3", "b3"], "figure_ref": [], "table_ref": []}, {"heading": "2.", "text": "There is no straightforward way to extend a baseline statistical MT model by including additional dependencies.\n3. Often, we observe that comparable results are obtained by using the following decision rule instead of Eq. 5 (Och et al., 1999):\ne I 1 = argmax e I 1 {p\u03b3(e I 1 ) \u2022 p\u03b8(e I 1 |f J 1 )} (6)\nHere, we replaced p\u03b8(f J 1 |e I 1 ) by p\u03b8(e I 1 |f J 1 ). From a theoretical framework of the sourcechannel approach, this approach is hard to justify. Yet, if both decision rules yield the same translation quality, we can use that decision rule which is better suited for efficient search.", "publication_ref": ["b8"], "figure_ref": [], "table_ref": []}, {"heading": "Direct Maximum Entropy Translation Model", "text": "As alternative to the source-channel approach, we directly model the posterior probability P r(e I 1 |f J 1 ). An especially well-founded framework for doing this is maximum entropy (Berger et al., 1996). In this framework, we have a set of M feature functions h m (e I 1 , f J 1 ), m = 1, . . . , M . For each feature function, there exists a model parameter \u03bb m , m = 1, . . . , M . The direct translation probability is given", "publication_ref": ["b1"], "figure_ref": [], "table_ref": []}, {"heading": "Source Language Text", "text": "Preprocessing\n\u03bb 1 \u2022 h 1 (e I 1 , f J 1 ) o o Global Search argmax e I 1 M m=1 \u03bb m h m (e I 1 , f J 1 ) \u03bb 2 \u2022 h 2 (e I 1 , f J 1 ) o o . . . o o\nPostprocessing Target Language Text Figure 2: Architecture of the translation approach based on direct maximum entropy models. by:\nP r(e I 1 |f J 1 ) = p \u03bb M 1 (e I 1 |f J 1 ) (7) = exp[ M m=1 \u03bb m h m (e I 1 , f J 1 )] e I 1 exp[ M m=1 \u03bb m h m (e I 1 , f J 1 )](8)\nThis approach has been suggested by (Papineni et al., 1997;Papineni et al., 1998) for a natural language understanding task. We obtain the following decision rule:\ne I 1 = argmax e I 1 P r(e I 1 |f J 1 ) = argmax e I 1 M m=1 \u03bb m h m (e I 1 , f J 1 )\nHence, the time-consuming renormalization in Eq. 8 is not needed in search. The overall architecture of the direct maximum entropy models is summarized in Figure 2. Interestingly, this framework contains as special case the source channel approach (Eq. 5) if we use the following two feature functions:\nh 1 (e I 1 , f J 1 ) = log p\u03b3(e I 1 ) (9) h 2 (e I 1 , f J 1 ) = log p\u03b8(f J 1 |e I 1 )(10)\nand set \u03bb 1 = \u03bb 2 = 1. Optimizing the corresponding parameters \u03bb 1 and \u03bb 2 of the model in Eq. 8 is equivalent to the optimization of model scaling factors, which is a standard approach in other areas such as speech recognition or pattern recognition. The use of an 'inverted' translation model in the unconventional decision rule of Eq. 6 results if we use the feature function log P r(e I 1 |f J 1 ) instead of log P r(f J 1 |e I 1 ). In this framework, this feature can be as good as log P r(f J 1 |e I 1 ). It has to be empirically verified, which of the two features yields better results. We even can use both features log P r(e I 1 |f J 1 ) and log P r(f J 1 |e I 1 ), obtaining a more symmetric translation model.\nAs training criterion, we use the maximum class posterior probability criterion:\n\u03bb M 1 = argmax \u03bb M 1 S s=1 log p \u03bb M 1 (e s |f s ) (11)\nThis corresponds to maximizing the equivocation or maximizing the likelihood of the direct translation model. This direct optimization of the posterior probability in Bayes decision rule is referred to as discriminative training (Ney, 1995) because we directly take into account the overlap in the probability distributions. The optimization problem has one global optimum and the optimization criterion is convex.", "publication_ref": ["b9", "b10", "b6"], "figure_ref": [], "table_ref": []}, {"heading": "Alignment Models and Maximum Approximation", "text": "Typically, the probability P r(f J 1 |e I 1 ) is decomposed via additional hidden variables. In statistical alignment models P r(f J 1 , a J 1 |e I 1 ), the alignment a J 1 is introduced as a hidden variable:\nP r(f J 1 |e I 1 ) = a J 1 P r(f J 1 , a J 1 |e I 1 )\nThe alignment mapping is j \u2192 i = a j from source position j to target position i = a j . Search is performed using the so-called maximum approximation:\ne I 1 = argmax e I 1 \uf8f1 \uf8f2 \uf8f3 P r(e I 1 ) \u2022 a J 1 P r(f J 1 , a J 1 |e I 1 ) \uf8fc \uf8fd \uf8fe \u2248 argmax e I 1 P r(e I 1 ) \u2022 max a J 1 P r(f J 1 , a J 1 |e I 1 )\nHence, the search space consists of the set of all possible target language sentences e I 1 and all possible alignments a J 1 . Generalizing this approach to direct translation models, we extend the feature functions to include the dependence on the additional hidden variable. Using M feature functions of the form h m (e I 1 , f J 1 , a J 1 ), m = 1, . . . , M , we obtain the following model:\nP r(e I 1 , a J 1 |f J 1 ) = = exp M m=1 \u03bb m h m (e I 1 , f J 1 , a J 1 ) e I 1 ,a J 1 exp M m=1 \u03bb m h m (e I 1 , f J 1 , a J 1 )\nObviously, we can perform the same step for translation models with an even richer structure of hidden variables than only the alignment a J 1 . To simplify the notation, we shall omit in the following the dependence on the hidden variables of the model.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Alignment Templates", "text": "As specific MT method, we use the alignment template approach (Och et al., 1999). The key elements of this approach are the alignment templates, which are pairs of source and target language phrases together with an alignment between the words within the phrases. The advantage of the alignment template approach compared to single word-based statistical translation models is that word context and local changes in word order are explicitly considered.\nThe alignment template model refines the translation probability P r(f J 1 |e I 1 ) by introducing two hidden variables z K 1 and a K 1 for the K alignment templates and the alignment of the alignment templates:\nP r(f J 1 |e I 1 ) = z K 1 ,a K 1 P r(a K 1 |e I 1 ) \u2022 P r(z K 1 |a K 1 , e I 1 ) \u2022 P r(f J 1 |z K 1 , a K 1 , e I 1 )\nHence, we obtain three different probability distributions:\nP r(a K 1 |e I 1 ), P r(z K 1 |a K 1 , e I 1 ) and P r(f J 1 |z K 1 , a K 1 , e I 1 )\n. Here, we omit a detailed description of modeling, training and search, as this is not relevant for the subsequent exposition. For further details, see (Och et al., 1999).\nTo use these three component models in a direct maximum entropy approach, we define three different feature functions for each component of the translation model instead of one feature function for the whole translation model p(f J 1 |e I 1 ). The feature functions have then not only a dependence on f J 1 and e I 1 but also on z K 1 , a K 1 .", "publication_ref": ["b8", "b8"], "figure_ref": [], "table_ref": []}, {"heading": "Feature functions", "text": "So far, we use the logarithm of the components of a translation model as feature functions. This is a very convenient approach to improve the quality of a baseline system. Yet, we are not limited to train only model scaling factors, but we have many possibilities:\n\u2022 We could add a sentence length feature:\nh(f J 1 , e I 1 ) = I\nThis corresponds to a word penalty for each produced target word.\n\u2022 We could use additional language models by using features of the following form:\nh(f J 1 , e I 1 ) = h(e I 1 )\n\u2022 We could use a feature that counts how many entries of a conventional lexicon co-occur in the given sentence pair. Therefore, the weight for the provided conventional dictionary can be learned. The intuition is that the conventional dictionary is expected to be more reliable than the automatically trained lexicon and therefore should get a larger weight.\n\u2022 We could use lexical features, which fire if a certain lexical relationship (f, e) occurs:\nh(f J 1 , e I 1 ) = \uf8eb \uf8ed J j=1 \u03b4(f, f j ) \uf8f6 \uf8f8 \u2022 I i=1 \u03b4(e, e i )\n\u2022 We could use grammatical features that relate certain grammatical dependencies of source and target language. For example, using a function k(\u2022) that counts how many verb groups exist in the source or the target sentence, we can define the following feature, which is 1 if each of the two sentences contains the same number of verb groups:\nh(f J 1 , e I 1 ) = \u03b4(k(f J 1 ), k(e I 1 ))(12)\nIn the same way, we can introduce semantic features or pragmatic features such as the dialogue act classification.\nWe can use numerous additional features that deal with specific problems of the baseline statistical MT system. In this paper, we shall use the first three of these features. As additional language model, we use a class-based five-gram language model. This feature and the word penalty feature allow a straightforward integration into the used dynamic programming search algorithm (Och et al., 1999). As this is not possible for the conventional dictionary feature, we use n-best rescoring for this feature.", "publication_ref": ["b8"], "figure_ref": [], "table_ref": []}, {"heading": "Training", "text": "To train the model parameters \u03bb M 1 of the direct translation model according to Eq. 11, we use the GIS (Generalized Iterative Scaling) algorithm (Darroch and Ratcliff, 1972). It should be noted that, as was already shown by (Darroch and Ratcliff, 1972), by applying suitable transformations, the GIS algorithm is able to handle any type of real-valued features. To apply this algorithm, we have to solve various practical problems.\nThe renormalization needed in Eq. 8 requires a sum over a large number of possible sentences, for which we do not know an efficient algorithm. Hence, we approximate this sum by sampling the space of all possible sentences by a large set of highly probable sentences. The set of considered sentences is computed by an appropriately extended version of the used search algorithm (Och et al., 1999) computing an approximate n-best list of translations.\nUnlike automatic speech recognition, we do not have one reference sentence, but there exists a number of reference sentences. Yet, the criterion as it is described in Eq. 11 allows for only one reference translation. Hence, we change the criterion to allow R s reference translations e s,1 , . . . , e s,R s for the sentence e s :\n\u03bb M 1 = argmax \u03bb M 1 S s=1 1 R s R s r=1 log p \u03bb M 1 (e s,r |f s )\nWe use this optimization criterion instead of the optimization criterion shown in Eq. 11.\nIn addition, we might have the problem that no single of the reference translations is part of the nbest list because the search algorithm performs pruning, which in principle limits the possible translations that can be produced given a certain input sentence. To solve this problem, we define for maximum entropy training each sentence as reference translation that has the minimal number of word errors with respect to any of the reference translations.", "publication_ref": ["b4", "b4", "b8"], "figure_ref": [], "table_ref": []}, {"heading": "Results", "text": "We present results on the VERBMOBIL task, which is a speech translation task in the domain of appointment scheduling, travel planning, and hotel reser-vation (Wahlster, 1993). Table 1 shows the corpus statistics of this task. We use a training corpus, which is used to train the alignment template model and the language models, a development corpus, which is used to estimate the model scaling factors, and a test corpus. So far, in machine translation research does not exist one generally accepted criterion for the evaluation of the experimental results. Therefore, we use a large variety of different criteria and show that the obtained results improve on most or all of these criteria. In all experiments, we use the following six error criteria:\n\u2022 SER (sentence error rate): The SER is computed as the number of times that the generated sentence corresponds exactly to one of the reference translations used for the maximum entropy training.\n\u2022 WER (word error rate): The WER is computed as the minimum number of substitution, insertion and deletion operations that have to be performed to convert the generated sentence into the target sentence.\n\u2022 PER (position-independent WER): A shortcoming of the WER is the fact that it requires a perfect word order. The word order of an acceptable sentence can be different from that of the target sentence, so that the WER measure alone could be misleading. To overcome this problem, we introduce as additional measure the position-independent word error rate (PER). This measure compares the words in the two sentences ignoring the word order.\n\u2022 mWER (multi-reference word error rate): For each test sentence, there is not only used a single reference translation, as for the WER, but a whole set of reference translations. For each translation hypothesis, the edit distance to the most similar sentence is calculated (Nie\u00dfen et al., 2000).\n\u2022 BLEU score: This score measures the precision of unigrams, bigrams, trigrams and fourgrams with respect to a whole set of reference translations with a penalty for too short sentences (Papineni et al., 2001). Unlike all other evaluation criteria used here, BLEU measures accuracy, i.e. the opposite of error rate. Hence, large BLEU scores are better.\n\u2022 SSER (subjective sentence error rate): For a more detailed analysis, subjective judgments by test persons are necessary. Each translated sentence was judged by a human examiner according to an error scale from 0.0 to 1.0 (Nie\u00dfen et al., 2000).\n\u2022 IER (information item error rate): The test sentences are segmented into information items.\nFor each of them, if the intended information is conveyed and there are no syntactic errors, the sentence is counted as correct (Nie\u00dfen et al., 2000).\nIn the following, we present the results of this approach. Table 2 shows the results if we use a direct translation model (Eq. 6).\nAs baseline features, we use a normal word trigram language model and the three component models of the alignment templates. The first row shows the results using only the four baseline features with \u03bb 1 = \u2022 \u2022 \u2022 = \u03bb 4 = 1. The second row shows the result if we train the model scaling factors. We see a systematic improvement on all error rates. The following three rows show the results if we add the word penalty, an additional class-based five-gram  language model and the conventional dictionary features. We observe improved error rates for using the word penalty and the class-based language model as additional features.\nFigure 3 show how the sentence error rate (SER) on the test corpus improves during the iterations of the GIS algorithm. We see that the sentence error rates converges after about 4000 iterations. We do not observe significant overfitting.\nTable 3 shows the resulting normalized model scaling factors. Multiplying each model scaling factor by a constant positive value does not affect the decision rule. We see that adding new features also has an effect on the other model scaling factors.", "publication_ref": ["b14", "b7", "b11", "b7", "b7"], "figure_ref": ["fig_1"], "table_ref": ["tab_0", "tab_1", "tab_2"]}, {"heading": "Related Work", "text": "The use of direct maximum entropy translation models for statistical machine translation has been sug-  (Papineni et al., 1997;Papineni et al., 1998). They train models for natural language understanding rather than natural language translation. In contrast to their approach, we include a dependence on the hidden variable of the translation model in the direct translation model. Therefore, we are able to use statistical alignment models, which have been shown to be a very powerful component for statistical machine translation systems.\nIn speech recognition, training the parameters of the acoustic model by optimizing the (average) mutual information and conditional entropy as they are defined in information theory is a standard approach (Bahl et al., 1986;Ney, 1995). Combining various probabilistic models for speech and language modeling has been suggested in (Beyerlein, 1997;Peters and Klakow, 1999).", "publication_ref": ["b9", "b10", "b0", "b6", "b2", "b12"], "figure_ref": [], "table_ref": []}, {"heading": "Conclusions", "text": "We have presented a framework for statistical MT for natural languages, which is more general than the widely used source-channel approach. It allows a baseline MT system to be extended easily by adding new feature functions. We have shown that a baseline statistical MT system can be significantly improved using this framework.\nThere are two possible interpretations for a statistical MT system structured according to the sourcechannel approach, hence including a model for P r(e I 1 ) and a model for P r(f J 1 |e I 1 ). We can interpret it as an approximation to the Bayes decision rule in Eq. 2 or as an instance of a direct maximum entropy model with feature functions log P r(e I 1 ) and log P r(f J 1 |e I 1 ). As soon as we want to use model scaling factors, we can only do this in a theoretically justified way using the second interpretation. Yet, the main advantage comes from the large number of additional possibilities that we obtain by using the second interpretation.\nAn important open problem of this approach is the handling of complex features in search. An interesting question is to come up with features that allow an efficient handling using conventional dynamic programming search algorithms.\nIn addition, it might be promising to optimize the parameters directly with respect to the error rate of the MT system as is suggested in the field of pattern and speech recognition (Juang et al., 1995;Schl\u00fcter and Ney, 2001).", "publication_ref": ["b5", "b13"], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Maximum mutual information estimation of hidden markov model parameters", "journal": "", "year": "1986-04", "authors": "L R Bahl; P F Brown; P V De Souza; R L Mercer"}, {"ref_id": "b1", "title": "A maximum entropy approach to natural language processing", "journal": "Computational Linguistics", "year": "1996-03", "authors": "A L Berger; S A Della Pietra; V J Della Pietra"}, {"ref_id": "b2", "title": "Discriminative model combination", "journal": "", "year": "1997-12", "authors": "P Beyerlein"}, {"ref_id": "b3", "title": "The mathematics of statistical machine translation: Parameter estimation", "journal": "Computational Linguistics", "year": "1993", "authors": "P F Brown; S A Della Pietra; V J Della Pietra; R L Mercer"}, {"ref_id": "b4", "title": "Generalized iterative scaling for log-linear models", "journal": "Annals of Mathematical Statistics", "year": "1972", "authors": "J N Darroch; D Ratcliff"}, {"ref_id": "b5", "title": "Statistical and discriminative methods for speech recognition", "journal": "Springer Verlag", "year": "1995", "authors": "B H Juang; W Chou; C H Lee"}, {"ref_id": "b6", "title": "On the probabilistic-interpretation of neural-network classifiers and discriminative training criteria", "journal": "IEEE Trans. on Pattern Analysis and Machine Intelligence", "year": "1995-02", "authors": "H Ney"}, {"ref_id": "b7", "title": "An evaluation tool for machine translation: Fast evaluation for MT research", "journal": "", "year": "2000-05", "authors": "S Nie\u00dfen; F J Och; G Leusch; H Ney"}, {"ref_id": "b8", "title": "Improved alignment models for statistical machine translation", "journal": "", "year": "1999-06", "authors": "F J Och; C Tillmann; H Ney"}, {"ref_id": "b9", "title": "Feature-based language understanding", "journal": "", "year": "1997-09", "authors": "K A Papineni; S Roukos; R T Ward"}, {"ref_id": "b10", "title": "Maximum likelihood and discriminative training of direct translation models", "journal": "WA", "year": "1998-05", "authors": "K A Papineni; S Roukos; R T Ward"}, {"ref_id": "b11", "title": "Bleu: a method for automatic evaluation of machine translation", "journal": "", "year": "2001-09", "authors": "K A Papineni; S Roukos; T Ward; W.-J Zhu"}, {"ref_id": "b12", "title": "Compact maximum entropy language models", "journal": "", "year": "1999-12", "authors": "J Peters; D Klakow"}, {"ref_id": "b13", "title": "Model-based MCE bound to the true Bayes' error", "journal": "IEEE Signal Processing Letters", "year": "2001-05", "authors": "R Schl\u00fcter; H Ney"}, {"ref_id": "b14", "title": "Verbmobil: Translation of face-toface dialogs", "journal": "", "year": "1993-07", "authors": "W Wahlster"}], "figures": [{"figure_label": "3", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Figure 3 :3Figure 3: Test error rate over the iterations of the GIS algorithm for maximum entropy training of alignment templates.", "figure_data": ""}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_0", "figure_caption": "", "figure_data": "Characteristics of training corpus (Train),manual lexicon (Lex), development corpus (Dev),test corpus (Test).German EnglishTrain Sentences58 073Words519 523 549 921Singletons3 4531 698Vocabulary7 9394 672LexEntries12 779Ext. Vocab.11 5016 867DevSentences276Words3 1593 438PP (trigr. LM)-28.1TestSentences251Words2 6282 871PP (trigr. LM)-30.5"}, {"figure_label": "2", "figure_type": "table", "figure_id": "tab_1", "figure_caption": "Effect of maximum entropy training for alignment template approach (WP: word penalty feature, CLM: class-based language model (five-gram), MX: conventional dictionary).", "figure_data": "objective criteria [%]subjective criteria [%]SER WER PER mWER BLEU SSERIERBaseline(\u03bb m = 1)86.9 42.8 33.037.743.935.939.0ME81.7 40.2 28.734.649.732.534.8ME+WP80.5 38.6 26.932.454.129.932.2ME+WP+CLM78.1 38.3 26.932.155.029.130.9ME+WP+CLM+MX 77.8 38.4 26.831.955.228.830.90.9ME0.88ME+WP ME+WP+CLMME+WP+CLM+MXsentence error rate (SER)0.78 0.8 0.82 0.84 0.860.760.7401000 2000 3000 4000 5000 6000 7000 8000 9000 10000number of iterations"}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "", "figure_data": ": Resulting model scaling factors of maxi-mum entropy training for alignment templates; \u03bb 1 :trigram language model; \u03bb 2 : alignment templatemodel, \u03bb 3 : lexicon model, \u03bb 4 : alignment model (normalized such that 4 m=1 \u03bb m = 4).ME +WP +CLM +MX\u03bb 10.86 0.980.750.77\u03bb 22.33 2.052.242.24\u03bb 30.58 0.720.790.75\u03bb 40.22 0.250.230.24WP\u20222.63.032.78CLM\u2022\u20220.330.34MX\u2022\u2022\u20222.92gested by"}], "formulas": [{"formula_id": "formula_0", "formula_text": "e I 1 {P r(e I 1 |f J 1 )} (1)", "formula_coordinates": [1.0, 169.73, 595.7, 129.08, 25.79]}, {"formula_id": "formula_1", "formula_text": "e I 1 = argmax e I 1 {P r(e I 1 ) \u2022 P r(f J 1 |e I 1 )} (2)", "formula_coordinates": [1.0, 338.99, 292.04, 201.01, 25.79]}, {"formula_id": "formula_2", "formula_text": "\u03b8 = argmax \u03b8 S s=1 p \u03b8 (f s |e s ) (3) \u03b3 = argmax \u03b3 S s=1 p \u03b3 (e s )(4)", "formula_coordinates": [1.0, 362.29, 652.82, 324.11, 73.17]}, {"formula_id": "formula_3", "formula_text": "e I 1 = argmax e I 1 {P r(e I 1 ) \u2022 P r(f J 1 |e I 1 )} P r(f J 1 |e I 1 ): Translation Model o o", "formula_coordinates": [2.0, 95.29, 203.98, 395.03, 46.72]}, {"formula_id": "formula_4", "formula_text": "e I 1 = argmax e I 1 {p\u03b3(e I 1 ) \u2022 p\u03b8(f J 1 |e I 1 )} (5)", "formula_coordinates": [2.0, 109.49, 409.39, 189.31, 25.79]}, {"formula_id": "formula_5", "formula_text": "e I 1 = argmax e I 1 {p\u03b3(e I 1 ) \u2022 p\u03b8(e I 1 |f J 1 )} (6)", "formula_coordinates": [2.0, 361.6, 420.01, 178.4, 25.79]}, {"formula_id": "formula_6", "formula_text": "\u03bb 1 \u2022 h 1 (e I 1 , f J 1 ) o o Global Search argmax e I 1 M m=1 \u03bb m h m (e I 1 , f J 1 ) \u03bb 2 \u2022 h 2 (e I 1 , f J 1 ) o o . . . o o", "formula_coordinates": [3.0, 120.37, 162.38, 350.43, 96.49]}, {"formula_id": "formula_7", "formula_text": "P r(e I 1 |f J 1 ) = p \u03bb M 1 (e I 1 |f J 1 ) (7) = exp[ M m=1 \u03bb m h m (e I 1 , f J 1 )] e I 1 exp[ M m=1 \u03bb m h m (e I 1 , f J 1 )](8)", "formula_coordinates": [3.0, 96.09, 422.1, 202.72, 54.92]}, {"formula_id": "formula_8", "formula_text": "e I 1 = argmax e I 1 P r(e I 1 |f J 1 ) = argmax e I 1 M m=1 \u03bb m h m (e I 1 , f J 1 )", "formula_coordinates": [3.0, 95.74, 562.37, 172.06, 64.4]}, {"formula_id": "formula_9", "formula_text": "h 1 (e I 1 , f J 1 ) = log p\u03b3(e I 1 ) (9) h 2 (e I 1 , f J 1 ) = log p\u03b8(f J 1 |e I 1 )(10)", "formula_coordinates": [3.0, 359.16, 418.4, 180.85, 32.11]}, {"formula_id": "formula_10", "formula_text": "\u03bb M 1 = argmax \u03bb M 1 S s=1 log p \u03bb M 1 (e s |f s ) (11)", "formula_coordinates": [3.0, 335.82, 690.67, 204.18, 34.96]}, {"formula_id": "formula_11", "formula_text": "P r(f J 1 |e I 1 ) = a J 1 P r(f J 1 , a J 1 |e I 1 )", "formula_coordinates": [4.0, 113.58, 291.92, 143.64, 29.66]}, {"formula_id": "formula_12", "formula_text": "e I 1 = argmax e I 1 \uf8f1 \uf8f2 \uf8f3 P r(e I 1 ) \u2022 a J 1 P r(f J 1 , a J 1 |e I 1 ) \uf8fc \uf8fd \uf8fe \u2248 argmax e I 1 P r(e I 1 ) \u2022 max a J 1 P r(f J 1 , a J 1 |e I 1 )", "formula_coordinates": [4.0, 75.77, 375.0, 216.54, 87.5]}, {"formula_id": "formula_13", "formula_text": "P r(e I 1 , a J 1 |f J 1 ) = = exp M m=1 \u03bb m h m (e I 1 , f J 1 , a J 1 ) e I 1 ,a J 1 exp M m=1 \u03bb m h m (e I 1 , f J 1 , a J 1 )", "formula_coordinates": [4.0, 73.02, 591.86, 217.05, 60.05]}, {"formula_id": "formula_14", "formula_text": "P r(f J 1 |e I 1 ) = z K 1 ,a K 1 P r(a K 1 |e I 1 ) \u2022 P r(z K 1 |a K 1 , e I 1 ) \u2022 P r(f J 1 |z K 1 , a K 1 , e I 1 )", "formula_coordinates": [4.0, 326.8, 293.94, 199.6, 47.78]}, {"formula_id": "formula_15", "formula_text": "P r(a K 1 |e I 1 ), P r(z K 1 |a K 1 , e I 1 ) and P r(f J 1 |z K 1 , a K 1 , e I 1 )", "formula_coordinates": [4.0, 313.2, 364.27, 226.81, 28.8]}, {"formula_id": "formula_16", "formula_text": "h(f J 1 , e I 1 ) = I", "formula_coordinates": [4.0, 406.47, 671.15, 61.22, 15.57]}, {"formula_id": "formula_17", "formula_text": "h(f J 1 , e I 1 ) = \uf8eb \uf8ed J j=1 \u03b4(f, f j ) \uf8f6 \uf8f8 \u2022 I i=1 \u03b4(e, e i )", "formula_coordinates": [5.0, 92.9, 302.4, 193.55, 45.89]}, {"formula_id": "formula_18", "formula_text": "h(f J 1 , e I 1 ) = \u03b4(k(f J 1 ), k(e I 1 ))(12)", "formula_coordinates": [5.0, 133.17, 505.36, 165.64, 15.57]}, {"formula_id": "formula_19", "formula_text": "\u03bb M 1 = argmax \u03bb M 1 S s=1 1 R s R s r=1 log p \u03bb M 1 (e s,r |f s )", "formula_coordinates": [5.0, 315.38, 457.04, 213.66, 34.99]}], "doi": ""}