{"title": "Are Emergent Abilities of Large Language Models a Mirage?", "authors": "Rylan Schaeffer; Brando Miranda; Sanmi Koyejo", "pub_date": "2023-05-22", "abstract": "Recent work claims that large language models display emergent abilities, abilities not present in smaller-scale models that are present in larger-scale models. What makes emergent abilities intriguing is two-fold: their sharpness, transitioning seemingly instantaneously from not present to present, and their unpredictability, appearing at seemingly unforeseeable model scales. Here, we present an alternative explanation for emergent abilities: that for a particular task and model family, when analyzing fixed model outputs, emergent abilities appear due the researcher's choice of metric rather than due to fundamental changes in model behavior with scale. Specifically, nonlinear or discontinuous metrics produce apparent emergent abilities, whereas linear or continuous metrics produce smooth, continuous, predictable changes in model performance. We present our alternative explanation in a simple mathematical model, then test it in three complementary ways: we (1) make, test and confirm three predictions on the effect of metric choice using the InstructGPT/GPT-3 family on tasks with claimed emergent abilities, (2) make, test and confirm two predictions about metric choices in a metaanalysis of emergent abilities on BIG-Bench; and (3) show how to choose metrics to produce never-before-seen seemingly emergent abilities in multiple vision tasks across diverse deep networks. Via all three analyses, we provide evidence that alleged emergent abilities evaporate with different metrics or with better statistics, and may not be a fundamental property of scaling AI models. 1. Sharpness, transitioning seemingly instantaneously from not present to present Preprint. Under review.", "sections": [{"heading": "Introduction", "text": "Emergent properties of complex systems have long been studied across disciplines, from physics to biology to mathematics. The idea of emergence was popularized by Nobel Prize-winning physicist P.W. Anderson's \"More Is Different\" [1], which argues that as the complexity of a system increases, new properties may materialize that cannot be predicted even from a precise quantitative understanding of the system's microscopic details. Recently, the idea of emergence gained significant attention in machine learning due to observations that large language models (LLMs) such as GPT [3], PaLM [6] and LaMDA [30] exhibit so-called \"emergent abilities\" [33,8,28,3] (Fig. 1).\nThe term \"emergent abilities of LLMs\" was recently and crisply defined as \"abilities that are not present in smaller-scale models but are present in large-scale models; thus they cannot be predicted by simply extrapolating the performance improvements on smaller-scale models\" [33]. Such emergent abilities were first discovered in the GPT-3 family [3]. Subsequent work emphasized the discovery, writing that \"[although model] performance is predictable at a general level, performance on a specific task can sometimes emerge quite unpredictably and abruptly at scale\" [8]. These quotations collectively identify the two defining properties of emergent abilities in LLMs: Figure 1: Emergent abilities of large language models. Model families display sharp and unpredictable increases in performance at specific tasks as scale increases. Source: Fig. 2 from [33].\n2. Unpredictability, transitioning at seemingly unforeseeable model scales These emergent abilities have garnered significant interest, raising questions such as: What controls which abilities will emerge? What controls when abilities will emerge? How can we make desirable abilities emerge faster, and ensure undesirable abilities never emerge? These questions are especially pertinent to AI safety and alignment, as emergent abilities forewarn that larger models might one day, without warning, acquire undesired mastery over dangerous capabilities [29,10,17,18].\nIn this paper, we call into question the claim that LLMs possess emergent abilities, by which we specifically mean sharp and unpredictable changes in model outputs as a function of model scale on specific tasks. Our doubt stems from the observation that emergent abilities seem to appear only under metrics that nonlinearly or discontinuously scale any model's per-token error rate. For instance, as we later show, > 92% of emergent abilities on BIG-Bench tasks [28] (hand-annotated by [32]) appear under either of these two metrics: This raises the possibility of an alternative explanation for the origin of LLMs' emergent abilities: sharp and unpredictable changes might be induced by the researcher's choice of measurement, even though the model family's per-token error rate changes smoothly, continuously and predictably with increasing scale. Specifically, our alternative posits that emergent abilities are a mirage caused primarily by the researcher choosing a metric that nonlinearly or discontinuously deforms per-token error rates, and secondarily by possessing too few test data to accurately estimate the performance of smaller models, thereby causing smaller models to appear wholly unable to perform the task.\nMultiple\nTo communicate our alternative explanation, we present it as a simple mathematical model and demonstrate how it quantitatively reproduces the evidence offered in support of emergent abilities of LLMs. We then test our alternative explanation in three complementary ways:\n1. We make, test and confirm three predictions based on our alternative hypotheses using the InstructGPT [24] / GPT-3 [3] model family. The per-token probability of selecting the correct token asymptotes towards 1. (C) If the researcher scores models' outputs using a nonlinear metric such as Accuracy (which requires a sequence of tokens to all be correct), the metric choice nonlinearly scales performance, causing performance to change sharply and unpredictably in a manner that qualitatively matches published emergent abilities (inset). (D) If the researcher instead scores models' outputs using a discontinuous metric such as Multiple Choice Grade (akin to a step function), the metric choice discontinuously scales performance, again causing performance to change sharply and unpredictably. (E) Changing from a nonlinear metric to a linear metric such as Token Edit Distance, scaling shows smooth, continuous and predictable improvements, ablating the emergent ability. (F) Changing from a discontinuous metric to a continuous metric such as Brier Score again reveals smooth, continuous and predictable improvements in task performance. Consequently, emergent abilities are created by the researcher's choice of metrics, not fundamental changes in model family behavior on specific tasks with scale.\n2. We meta-analyze published benchmarks [28,33] to reveal that emergent abilities only appear for specific metrics, not for model families on particular tasks, and that changing the metric causes the emergence phenomenon to evaporate. 3. We induce never-before-seen, seemingly emergent abilities in multiple architectures across various vision tasks by intentionally changing the metrics used for evaluation.", "publication_ref": ["b0", "b2", "b5", "b29", "b32", "b7", "b27", "b2", "b32", "b2", "b7", "b32", "b28", "b9", "b16", "b17", "b27", "b31", "b23", "b2", "b27", "b32"], "figure_ref": [], "table_ref": []}, {"heading": "Alternative Explanation for Emergent Abilities", "text": "How might smooth, continuous, predictable changes in model family performance appear sharp and unpredictable? The answer is that the researcher's choice of a nonlinear or discontinuous metric can distort the model family's performance to appear sharp and unpredictable.\nTo expound, suppose that within a model family, the test loss falls smoothly, continuously and predictably with the number of model parameters. One reason to believe this is the phenomenon known as neural scaling laws: empirical observations that deep networks exhibit power law scaling in the test loss as a function of training dataset size, number of parameters or compute [13,27,11,16,9,12,15,34,14,7,26]. For concreteness, suppose we have a model family of different numbers of parameters N > 0 and assume that each model's per-token cross entropy falls as a power law with the number of parameters N for constants c > 0, \u03b1 < 0 (Fig. 2A):\nL CE (N ) = N c \u03b1\nTo be clear, we do not require this particular functional form to hold; rather, we use it for illustrative purposes. Let V denote the set of possible tokens, p \u2208 \u2206 |V |\u22121 denote the true but unknown probability distribution, andp N \u2208 \u2206 |V |\u22121 denote the N -parameter model's predicted probability distribution. The per-token cross entropy as a function of number of parameters N is:\nL CE (N ) def = \u2212 v\u2208V p(v) logp N (v)\nIn practice, p is unknown, so we substitute a one-hot distribution of the observed token v * :\nL CE (N ) = \u2212 logp N (v * )\nA model with N parameters then has a per-token probability of selecting the correct token (Fig. 2B):\np(single token correct) = exp \u2212 L CE (N ) = exp \u2212 (N/c) \u03b1\nSuppose the researcher then chooses a metric that requires selecting L tokens correctly. For example, our task might be L-digit integer addition, and a model's output is scored 1 if all L output digits exactly match all target digits with no additions, deletions or substitutions, 0 otherwise. If the probability each token is correct is independent 1 , the probability of scoring 1 is:\nAccuracy(N ) \u2248 p N (single token correct) num. of tokens = exp \u2212 (N/c) \u03b1 L\nThis choice of metric nonlinearly scales performance with increasing token sequence length. When plotting performance on a linear-log plot, one sees a sharp, unpredictable emergent ability on longer sequences (Fig. 2C) that closely matches claimed emergent abilities (inset). What happens if the researcher switches from a nonlinear metric like Accuracy, under which the per-token error rate scales geometrically in target length (App. A.3), to an approximately linear metric like Token Edit Distance, under which the per-token error rate scales quasi-linearly in target length (App. A.2)?\nToken Edit Distance(N ) \u2248 L 1 \u2212 p N (single token correct) = L 1 \u2212 exp \u2212 (N/c) \u03b1\nThe linear metric reveals smooth, continuous, predictable changes in model performance (Fig. 2E). Similarly, if the researcher uses a discontinuous metric like Multiple Choice Grade, the researcher can find emergent abilities (Fig. 2D), but switching to a continuous metric like Brier Score removes the emergent ability (Fig. 2F). In summary, sharp and unpredictable changes with increasing scale can be fully explained by three interpretable factors: (1) the researcher choosing a metric that nonlinearly or discontinuously scales the per-token error rate, (2) having insufficient resolution to estimate model performance in the smaller parameter regime, with resolution 2 set by 1/test dataset size, and\n(3) insufficiently sampling the larger parameter regime.", "publication_ref": ["b12", "b26", "b10", "b15", "b8", "b11", "b14", "b33", "b13", "b6", "b25"], "figure_ref": [], "table_ref": []}, {"heading": "Analyzing InstructGPT/GPT-3's Emergent Arithmetic Abilities", "text": "Previous papers prominently claimed the GPT [3,24] family 3 displays emergent abilities at integer arithmetic tasks [8,28,33] (Fig. 2E). We chose these tasks as they were prominently presented [3,8,28,33], and we focused on the GPT family due to it being publicly queryable. As explained mathematically and visually in Sec. 2, our alternative explanation makes three predictions:\n1. Changing the metric from a nonlinear or discontinuous metric (Fig. 2CD) to a linear or continuous metric (Fig. 2 EF) should reveal smooth, continuous, predictable performance improvement with model scale. When performance is measured by a nonlinear metric (e.g., Accuracy), the InstructGPT/GPT-3 [3,24] family's performance appears sharp and unpredictable on longer target lengths. Bottom: When performance is instead measured by a linear metric (e.g., Token Edit Distance), the family exhibits smooth, predictable performance improvements. Based on the predictable effect Accuracy has on performance, measuring performance requires high resolution. Generating additional test data increases the resolution and reveals that even on Accuracy, the InstructGPT/GPT-3 family's [3,24] performance is above chance and improves in a smooth, continuous, predictable manner that qualitatively matches the mathematical model.\n2. For nonlinear metrics, increasing the resolution of measured model performance by increasing the test dataset size should reveal smooth, continuous, predictable model improvements commensurate with the predictable nonlinear effect of the chosen metric.\n3. Regardless of metric, increasing the target string length should predictably affect the model's performance as a function of the length-1 target performance: approximately geometrically for accuracy and approximately quasilinearly for token edit distance.\nTo test these predictions, we collected outputs from the InstructGPT/GPT-3 family on two tasks: 2-shot multiplication between two 2-digit integers and 2-shot addition between two 4-digit integers.\nPrediction: Emergent Abilities Disappear With Different Metrics On both arithmetic tasks, the GPT family displays emergent abilities if the target has 4 or 5 digits and if the metric is Accuracy (Fig. 3, top) [3,8,33]. However, if one changes from nonlinear Accuracy to linear Token Edit Distance while keeping the models' outputs fixed, the family's performance smoothly, continuously and predictably improves with increasing scale (Fig. 3, bottom). This confirms our first prediction and supports our alternative explanation that the source of emergent abilities is the researcher's choice of metric, not changes in the model family's outputs. We also observe that under Token Edit Distance, increasing the length of the target string from 1 to 5 predictably decreases the family's performance in an approximately quasilinear manner, confirming the first half of our third prediction.\nPrediction: Emergent Abilities Disappear With Better Statistics We next tested our second prediction: that even on nonlinear metrics such as accuracy, smaller models do not have zero accuracy, but rather have non-zero above-chance accuracy commensurate with choosing to use accuracy as the metric. In order to accurately measure models' accuracy, we increased the resolution by generating additional test data, and found that on both arithmetic tasks, all models in the InstructGPT/GPT-3 family achieve above-chance accuracy (Fig. 4). This confirms our second prediction. We also observe that as the target string length increases, the accuracy falls approximately geometrically with the length of the target string, confirming the second half of our third prediction. These results additionally demonstrate that the researcher's choice of metric has the effect that one should predict accuracy to have, i.e., geometric decay with the target length.", "publication_ref": ["b2", "b23", "b2", "b7", "b27", "b32", "b2", "b7", "b27", "b32", "b2", "b23", "b2", "b23", "b2", "b7", "b32"], "figure_ref": ["fig_2", "fig_2", "fig_3"], "table_ref": []}, {"heading": "Meta-Analysis of Claimed Emergent Abilities", "text": "Analyzing the GPT family is possible because the models are publicly queryable. However, other model families claimed to exhibit emergent abilities are not publicly queryable, nor are their generated outputs publicly available, meaning we are limited to analyzing the published results themselves [8,33,32]. Our alternative explanation makes two predictions.\n1. At the \"population level\" of Task-Metric-Model Family triplets, emergent abilities should appear predominantly on specific metrics, not task-model family pairs, and specifically with nonlinear and/or discontinuous metrics.\n2. On individual Task-Metric-Model Family triplets that display an emergent ability, changing the metric to a linear and/or continuous metric should remove the emergent ability.\nTo test these predictions, we used to claimed emergent abilities on BIG-Bench [28,33] due to the benchmark being pertinent and publicly available.\nPrediction: Emergent Abilities Should Appear with Metrics, not Task-Model Families If emergent abilities are real, one should expect task-model family pairs to show emergence for all reasonable metrics. However, if our alternative explanation is correct, we should expect emergent abilities to appear only under certain metrics. To test this, we analyzed on which metrics emergent abilities appear. To determine whether a task-metric-model family triplet exhibits a possible emergent ability, we used a metric from previous work [28]. Letting y i \u2208 R denote model performance at model scales x i \u2208 R, sorted such that x i < x i+1 , the emergence score is:\nEmergence Score (x n , y n ) N n=1 def = sign(arg max i y i \u2212 arg min i y i )(max i y i \u2212 min i y i ) Median({(y i \u2212 y i\u22121 ) 2 } i )(1)\nWe found that most metrics used in BIG-Bench have zero task-model family pairs that exhibit emergent abilities: of the 39 preferred metrics in BIG-Bench, at most 5 display emergence (Fig. 5A). Many of the 5 are nonlinear and/or discontinuous, e.g., Exact String Match, Multiple Choice Grade, ROUGE-L-Sum (App. A.4). Notably, because BIG-Bench often scores models on tasks using multiple metrics, the lack of emergent abilities under other metrics suggests that emergent abilities do not appear when model outputs are scored using other metrics.\nBecause emergence score only suggests emergence, we also analyzed hand-annotated task-metricmodel family triplets [32], which revealed emergent abilities appear with 4/39 metrics (Fig. 5B), and 2 metrics account for > 92% of claimed emergent abilities (Fig. 5C): Multiple Choice Grade and Exact String Match. Multiple Choice Grade is discontinuous, and Exact String Match is nonlinear.", "publication_ref": ["b7", "b32", "b31", "b27", "b32", "b27", "b31"], "figure_ref": ["fig_4", "fig_4", "fig_4"], "table_ref": []}, {"heading": "Prediction: Changing Metric Removes Emergent Abilities", "text": "To test our second prediction, we focused on the LaMDA family [30] because its outputs are available through BIG-Bench. For our   analysis, we identified tasks on which LaMDA displays emergent abilities with Multiple Choice Grade, then asked whether LaMDA still displays emergent abilities on the same tasks with a different BIG-Bench metric: Brier Score [2]. Brier Score is a strictly proper scoring rule for predictions of mutually exclusive outcomes; for a binary outcome, the Brier Score simplifies to the mean squared error between the outcome and its predicted probability mass. LaMDA's emergent abilities on the discontinuous Multiple Choice Grade disappeared when we changed the metric to the continuous Brier Score (Fig. 6). These results support our alternative explanation that emergent abilities are induced by the chosen metric.", "publication_ref": ["b29", "b1"], "figure_ref": ["fig_5"], "table_ref": []}, {"heading": "Inducing Emergent Abilities in Networks on Vision Tasks", "text": "To demonstrate how emergent abilities can be induced by the researcher's choice of metric, we show how to produce emergent abilities in deep networks of various architectures: fully connected, convolutional, self-attentional. We focus on vision tasks because abrupt transitions in vision models' capabilities have not been observed to the best of our knowledge; this is one reason why emergence in large language models is considered so interesting. For the convolutional example, see App. B.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Emergent Reconstruction of CIFAR100 Natural Images by Nonlinear Autoencoders", "text": "We first induce an emergent ability to reconstruct images in shallow (i.e., single hidden layer) nonlinear autoencoders trained on CIFAR100 natural images [19]. To emphasize that the sharpness of the metric is responsible for emergent abilities, and to show that sharpness extends to metrics beyond Accuracy, we intentionally define a discontinuous metric that measures a network's ability to reconstruct  \nReconstruction c {x n } N n=1 def = 1 N n I ||x n \u2212x n || 2 < c(2)\nwhere I(\u2022) denotes an indicator variable andx n is the autoencoder's reconstruction of x n . The autoencoder family displays smoothly decreasing squared reconstruction error as the number of bottleneck units increases (Fig. 7B). Under our newly defined Reconstruction c metric and for particular choices of c, the autoencoder family exhibits a sharp and seemingly unpredictable image reconstruction ability (Fig. 7C) that qualitatively matches published emergent abilities (Fig. 7A).", "publication_ref": ["b18"], "figure_ref": ["fig_6", "fig_6", "fig_6"], "table_ref": []}, {"heading": "Emergent Classification of Omniglot Characters by Autoregressive Transformers", "text": "We next induce emergent abilities in Transformers [31] trained to autoregressively classify Omniglot handwritten characters [20], in a setup inspired by recent work [5]: Omniglot images are embedded by convolutional layers, then sequences of embedded image-image class label pairs are fed into decoder-only transformers. We measure image classification performance on sequences of length L \u2208 [1,5], again via subset accuracy: 1 if all L images are classified correctly (Fig. 8B), 0 otherwise. Causal transformers display a seemingly emergent ability to correctly classify Omniglot handwritten characters (Fig. 8C) that qualitatively matches published emergent abilities (Fig. 8A).", "publication_ref": ["b30", "b19", "b4", "b0", "b4"], "figure_ref": [], "table_ref": []}, {"heading": "Related Work", "text": "Srivastava et al. [28] observed that while accuracy at a particular task can empirically appear sharp and unpredictable, cross entropy does not; the authors then hypothesized that emergent abilities may be partially attributed to the metric. Our paper converts their discussion into precise predictions, then quantitatively tests the predictions to reveal that: metric choice is likely wholly responsible for emergent abilities; well-known and widely-used metrics (including ones already used by [28]) capture graded improvements; emergent abilities do not appear only for tasks involving multiple steps, and indeed appear most commonly on the discontinuous Multiple Choice Grade; metric choice can be used to induce emergent abilities in a novel domain (vision) in diverse architectures and tasks.\nCaballero et al. [4] explain emergence by assuming a piece-wise power law functional form; under this view, emergent abilities are real, caused by a change in the governing power law. In contrast, our work suggests that emergent abilities are induced by the researcher, even under a single power law. Michaud et al. [25] posit that emergent abilities may be real under strong data assumptions.", "publication_ref": ["b27", "b27", "b3", "b24"], "figure_ref": [], "table_ref": []}, {"heading": "Discussion", "text": "Our paper presents an alternative explanation for claimed emergent abilities of large language models. For a fixed task and a fixed model family, the researcher can choose a metric to create an emergent ability or choose a metric to ablate an emergent ability. Ergo, emergent abilities may be creations of the researcher's choices, not a fundamental property of the model family on the specific task. We emphasize that nothing in this paper should be interpreted as claiming that large language models cannot display emergent abilities; rather, our message is that previously claimed emergent abilities in [3,8,28,33] might likely be a mirage induced by researcher analyses.\nOur paper has several implications. Firstly, a task and a metric are distinct and meaningful choices when constructing a benchmark. Secondly, when choosing metric(s), one should consider the metric's effect on the per-token error rate and adapt their measuring process accordingly, e.g., if one chooses accuracy, one should make sure to have sufficient data to accurately measure accuracy to avoid the risk of drawing invalid scientific conclusions. Thirdly, when making claims about capabilities of large models, including proper controls is critical. In this particular setting, emergent abilities claims are possibly infected by a failure to control for multiple comparisons. In BIG-Bench alone, there are \u2265 220 tasks, \u223c 40 metrics per task, \u223c 10 model families, for a total of \u223c 10 6 taskmetric-model family triplets, meaning probability that no task-metric-model family triplet exhibits an emergent ability by random chance might be small. Fourthly, scientific progress can be hampered when models and their outputs are not made public for independent scientific investigation.", "publication_ref": ["b2", "b7", "b27", "b32"], "figure_ref": [], "table_ref": []}, {"heading": "A Approximate Behavior of Metrics on Sequential Data", "text": "How do different metrics behave when used to measure autoregressive model outputs? Precisely answering this question is tricky and possibly analytically unsolvable, so we provide an approximate answer here.\nNotationally, we consider N test data of length L (here, length is measured in tokens) with targets denoted t n def =(t n1 , t n2 , ...t nL ), the autoregressive model has a true-but-unknown per-token error probability of \u2208 [0, 1] and the model outputs predictiont n def =(t n1 ,t n2 , ...t nL ). This assumes that the model's per-token error probability is constant, which is empirically false, but modeling the complex dependencies of errors is beyond our scope.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A.1 Per-Token Error Probability is Resolution-Limited", "text": "Note that because we have N test data, each of length L, our resolution for viewing the per-token error probability is limited by 1/N L. Here, resolution refers to \"the smallest interval measurable by a scientific instrument; the resolving power.\" To explain what resolution means via an example, suppose one wants to measure a coin's probability of yielding heads. After a single coin flip, only two outcomes are possible (H, T), so the resolution-limited probability of heads is either 0 or 1. After two coin flips, four outcomes are possible (HH, HT, TH, TT), so the resolution-limited probability of heads is now one of 0, 0.5, 1. After F coin flips, we can only resolve the coin's probability of yielding heads up to 1/F . Consequently, we introduce a resolution-limited notation: (3)", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A.2 Token Edit Distance", "text": "We first consider an adaptation of the Levenshtein (string edit) distance for models that function on tokens rather than characters, an adaptation we term the token edit distance. The token edit distance between two token sequences t n ,t n is defined as the integer number of additions, deletions or substitutions necessary to transform t n intot n (or vice versa).\nToken Edit Distance(t n ,t n ) \nThe expected token edit distance is therefore:\nE[Token Edit Distance(t n ,t n )] \u2265 E[ L =1 I[t n =t n ]](7)\n= L =1 p(t n =t n ) (8) \u2248 L(1 \u2212 )(9)\nThe resolution-limited expected token edit distance is therefore:\nE[Token Edit Distance(t n ,t n )] N L \u2265 L 1 \u2212 N L(10)\nFrom this, we see that the expected token edit distance scales approximately linearly with the resolution-limited per-token probability. The real rate is slightly higher than linear because additions and deletions contribute an additional non-negative cost, but modeling this requires a model of how likely the model is to overproduce or underproduce tokens, which is something we do not currently possess.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A.3 Accuracy", "text": "Accuracy(t n ,t n ) def = I[No additions] I[No deletions] L l=1 I[t nl =t nl ](11)\n\u2248 L l=1 I[t nl =t nl ](12)\nAs with the Token Edit Distance (App. A.3), we ignore how likely the language model is to overproduce or underproduce tokens because we do not have a good model of this process. Continuing along,\nE[log Accuracy] = l E[log I[t nl =t nl ]](13)\n\u2264 l log E[I[t nl =t nl ]](14)\n\u2248 L log(1 \u2212 )(15)\nTaking an approximation that would make most mathematicians cry:\nE[Accuracy] \u2248 exp(E[log Accuracy]) (16) = (1 \u2212 ) L (17)(18)\nThis reveals that accuracy approximately falls geometrically with target token length. The resolution-limited expected accuracy is therefore:\nE[Accuracy] N L = (1 \u2212 ) L N L(19)\nFrom this we can see that choosing a nonlinear metric like Accuracy is affected significantly more by limited resolution because Accuracy forces one to distinguish quantities that decay rapidly.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A.4 ROUGE-L-Sum", "text": "Another BIG-Bench metric [28] is ROUGE-L-Sum [23], a metric based on the longest common subsequence (LCS) between two sequences. Section 3.2 of [23] gives the exact definition, but the key property is that ROUGE-L-Sum measures the \"union\" LCS, which means \"stitching\" together LCSs across the candidate and multiple references. As explained in the original paper: if the candidate sequence is c = w 1 w 2 w 3 w 4 w 5 , and if there are two reference sequences r 1 = w 1 w 2 w 6 w 7 w 8 and r 2 = w 1 w 3 w 8 w 9 w 5 , then LCS(r 1 , c) = w 1 w 2 and LCS(r 2 , c) = w 1 w 3 w 5 , then the union -LCS of c, r 1 , r 2 is w 1 w 2 w 3 w 5 , with length 4. Intuitively, this disproportionately benefits models with smaller error rates because their mistakes can be \"stitched\" across multiple references; this is confirmed in simulation (Fig. 9).", "publication_ref": ["b27", "b22", "b22"], "figure_ref": ["fig_10"], "table_ref": []}, {"heading": "B Inducing Emergent Abilities in Networks on Vision Tasks B.1 Emergent Classification of MNIST Handwritten Digits by Convolutional Networks", "text": "We begin by inducing an emergent classification ability in a LeNet convolutional neural network family [22], trained on the MNIST handwritten digits dataset [21]. This family displays smoothly  increasing test accuracy as the number of parameters increase (Fig. 10B). To emulate the accuracy metric used by emergence papers [8,33,28], we use subset accuracy: 1 if the network classifies K out of K (independent) test data correctly, 0 otherwise. Under this definition of accuracy, the model family displays an \"emergent\" ability to correctly classify sets of MNIST digits as K increases from 1 to 5, especially when combined with sparse sampling of model sizes (Fig. 10C). This convolutional family's emergent classification ability qualitatively matches published emergent abilities, e.g., at the BIG-Bench Grounded Mappings task [33] (Fig. 10A).", "publication_ref": ["b21", "b20", "b7", "b32", "b27", "b32"], "figure_ref": ["fig_11", "fig_11", "fig_11"], "table_ref": []}], "references": [{"ref_id": "b0", "title": "More is different: broken symmetry and the nature of the hierarchical structure of science", "journal": "Science", "year": "1972", "authors": " Philip W Anderson"}, {"ref_id": "b1", "title": "Verification of forecasts expressed in terms of probability", "journal": "Monthly weather review", "year": "1950", "authors": "W Glenn;  Brier"}, {"ref_id": "b2", "title": "Language models are few-shot learners", "journal": "", "year": "2020", "authors": "Tom Brown; Benjamin Mann; Nick Ryder; Melanie Subbiah; Jared D Kaplan; Prafulla Dhariwal; Arvind Neelakantan; Pranav Shyam; Girish Sastry; Amanda Askell"}, {"ref_id": "b3", "title": "Broken neural scaling laws", "journal": "", "year": "2022", "authors": "Ethan Caballero; Kshitij Gupta; Irina Rish; David Krueger"}, {"ref_id": "b4", "title": "Data distributional properties drive emergent in-context learning in transformers", "journal": "", "year": "2022", "authors": "C Y Stephanie; Adam Chan; Andrew Santoro; Jane X Kyle Lampinen;  Wang; K Aaditya; Pierre Harvey Singh; James Richemond; Felix Mcclelland;  Hill"}, {"ref_id": "b5", "title": "Scaling language modeling with pathways", "journal": "", "year": "2022", "authors": "Aakanksha Chowdhery; Sharan Narang; Jacob Devlin; Maarten Bosma; Gaurav Mishra; Adam Roberts; Paul Barham;  Hyung Won; Charles Chung; Sebastian Sutton;  Gehrmann"}, {"ref_id": "b6", "title": "Unified scaling laws for routed language models", "journal": "PMLR", "year": "2022", "authors": "Aidan Clark; Diego De Las; Aurelia Casas; Arthur Guy; Michela Mensch; Jordan Paganini; Bogdan Hoffmann; Blake Damoc; Trevor Hechtman; Sebastian Cai;  Borgeaud"}, {"ref_id": "b7", "title": "Predictability and surprise in large generative models", "journal": "", "year": "2022", "authors": "Deep Ganguli; Danny Hernandez; Liane Lovitt; Amanda Askell; Yuntao Bai; Anna Chen; Tom Conerly; Nova Dassarma; Dawn Drain; Nelson Elhage"}, {"ref_id": "b8", "title": "Data and parameter scaling laws for neural machine translation", "journal": "", "year": "2021", "authors": "Kevin Mitchell A Gordon; Jared Duh;  Kaplan"}, {"ref_id": "b9", "title": "Detecting emergent behavior", "journal": "", "year": "2022", "authors": "Dan Hendrycks"}, {"ref_id": "b10", "title": "Scaling laws for autoregressive generative modeling", "journal": "", "year": "2020", "authors": "Tom Henighan; Jared Kaplan; Mor Katz; Mark Chen; Christopher Hesse; Jacob Jackson; Heewoo Jun; B Tom; Prafulla Brown; Scott Dhariwal;  Gray"}, {"ref_id": "b11", "title": "Scaling laws for transfer", "journal": "", "year": "2021", "authors": "Danny Hernandez; Jared Kaplan; Tom Henighan; Sam Mccandlish"}, {"ref_id": "b12", "title": "Deep learning scaling is predictable", "journal": "", "year": "2017", "authors": "Joel Hestness; Sharan Narang; Newsha Ardalani; Gregory Diamos; Heewoo Jun; Hassan Kianinejad; Md Patwary; Mostofa Ali; Yang Yang; Yanqi Zhou"}, {"ref_id": "b13", "title": "Training compute-optimal large language models", "journal": "", "year": "2022", "authors": "Jordan Hoffmann; Sebastian Borgeaud; Arthur Mensch; Elena Buchatskaya; Trevor Cai; Eliza Rutherford; Diego De Las; Lisa Anne Casas; Johannes Hendricks; Aidan Welbl;  Clark"}, {"ref_id": "b14", "title": "Scaling scaling laws with board games", "journal": "", "year": "2021", "authors": "L Andy;  Jones"}, {"ref_id": "b15", "title": "Scaling laws for neural language models", "journal": "", "year": "2020", "authors": "Jared Kaplan; Sam Mccandlish; Tom Henighan; B Tom; Benjamin Brown; Rewon Chess; Scott Child; Alec Gray; Jeffrey Radford; Dario Wu;  Amodei"}, {"ref_id": "b16", "title": "Refining the sharp left turn threat model, part 1: claims and mechanisms", "journal": "", "year": "2022", "authors": "Victoria Krakovna; Vikrant Varma; Ramana Kumar; Mary Phuong"}, {"ref_id": "b17", "title": "Refining the sharp left turn threat model, part 2: applying alignment techniques", "journal": "", "year": "2022", "authors": "Victoria Krakovna; Vikrant Varma; Ramana Kumar; Mary Phuong"}, {"ref_id": "b18", "title": "Learning multiple layers of features from tiny images", "journal": "", "year": "2009", "authors": "Alex Krizhevsky"}, {"ref_id": "b19", "title": "Human-level concept learning through probabilistic program induction", "journal": "Science", "year": "2015", "authors": "Ruslan Brenden M Lake; Joshua B Salakhutdinov;  Tenenbaum"}, {"ref_id": "b20", "title": "The mnist database of handwritten digits", "journal": "", "year": "1998", "authors": "Yann Lecun"}, {"ref_id": "b21", "title": "Gradient-based learning applied to document recognition", "journal": "Proceedings of the IEEE", "year": "1998", "authors": "Yann Lecun; L\u00e9on Bottou; Yoshua Bengio; Patrick Haffner"}, {"ref_id": "b22", "title": "Rouge: A package for automatic evaluation of summaries", "journal": "", "year": "2004", "authors": "Chin-Yew Lin"}, {"ref_id": "b23", "title": "Aligning language models to follow instructions", "journal": "", "year": "2022", "authors": "Ryan Lowe; Jan Leike"}, {"ref_id": "b24", "title": "The quantization model of neural scaling", "journal": "", "year": "2023", "authors": "Eric J Michaud; Ziming Liu; Uzay Girit; Max Tegmark"}, {"ref_id": "b25", "title": "Scaling laws for a multi-agent reinforcement learning model", "journal": "", "year": "2022", "authors": "Oren Neumann; Claudius Gros"}, {"ref_id": "b26", "title": "A constructive prediction of the generalization error across scales", "journal": "", "year": "2019", "authors": "S Jonathan; Amir Rosenfeld; Yonatan Rosenfeld; Nir Belinkov;  Shavit"}, {"ref_id": "b27", "title": "Beyond the imitation game: Quantifying and extrapolating the capabilities of language models", "journal": "", "year": "2022", "authors": "Aarohi Srivastava; Abhinav Rastogi; Abhishek Rao; Abu Awal Md Shoeb; Abubakar Abid; Adam Fisch; R Adam; Adam Brown; Aditya Santoro; Adri\u00e0 Gupta;  Garriga-Alonso"}, {"ref_id": "b28", "title": "Future ml systems will be qualitatively different", "journal": "", "year": "2022", "authors": "Jacob Steinhardt"}, {"ref_id": "b29", "title": "Language models for dialog applications", "journal": "", "year": "2022", "authors": "Romal Thoppilan; Daniel De Freitas; Jamie Hall; Noam Shazeer; Apoorv Kulshreshtha;  Heng-Tze; Alicia Cheng; Taylor Jin; Leslie Bos; Yu Baker;  Du"}, {"ref_id": "b30", "title": "Attention is all you need. Advances in neural information processing systems", "journal": "", "year": "2017", "authors": "Ashish Vaswani; Noam Shazeer; Niki Parmar; Jakob Uszkoreit; Llion Jones; Aidan N Gomez; \u0141ukasz Kaiser; Illia Polosukhin"}, {"ref_id": "b31", "title": "137 emergent abilities of large language models", "journal": "", "year": "2022", "authors": "Jason Wei"}, {"ref_id": "b32", "title": "Emergent abilities of large language models", "journal": "", "year": "2022", "authors": "Jason Wei; Yi Tay; Rishi Bommasani; Colin Raffel; Barret Zoph; Sebastian Borgeaud; Dani Yogatama; Maarten Bosma; Denny Zhou; Donald Metzler"}, {"ref_id": "b33", "title": "Scaling vision transformers", "journal": "", "year": "2022", "authors": "Xiaohua Zhai; Alexander Kolesnikov; Neil Houlsby; Lucas Beyer"}], "figures": [{"figure_label": "", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "string exactly matches target string 0 otherwise", "figure_data": ""}, {"figure_label": "22", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "2 FFigure 2 :22Figure 2: Emergent abilities of large language models are created by the researcher's chosen metrics, not unpredictable changes in model behavior with scale. (A) Suppose the per-token cross-entropy loss decreases monotonically with model scale, e.g., L CE scales as a power law. (B)The per-token probability of selecting the correct token asymptotes towards 1. (C) If the researcher scores models' outputs using a nonlinear metric such as Accuracy (which requires a sequence of tokens to all be correct), the metric choice nonlinearly scales performance, causing performance to change sharply and unpredictably in a manner that qualitatively matches published emergent abilities (inset). (D) If the researcher instead scores models' outputs using a discontinuous metric such as Multiple Choice Grade (akin to a step function), the metric choice discontinuously scales performance, again causing performance to change sharply and unpredictably. (E) Changing from a nonlinear metric to a linear metric such as Token Edit Distance, scaling shows smooth, continuous and predictable improvements, ablating the emergent ability. (F) Changing from a discontinuous metric to a continuous metric such as Brier Score again reveals smooth, continuous and predictable improvements in task performance. Consequently, emergent abilities are created by the researcher's choice of metrics, not fundamental changes in model family behavior on specific tasks with scale.", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "Figure 3 :3Figure 3: Claimed emergent abilities evaporate upon changing the metric. Left to Right: Mathematical Model, 2-Integer 2-Digit Multiplication Task, 2-Integer 4-Digit Addition Task. Top:When performance is measured by a nonlinear metric (e.g., Accuracy), the InstructGPT/GPT-3[3,24] family's performance appears sharp and unpredictable on longer target lengths. Bottom: When performance is instead measured by a linear metric (e.g., Token Edit Distance), the family exhibits smooth, predictable performance improvements.", "figure_data": ""}, {"figure_label": "4", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Figure 4 :4Figure 4: Claimed emergent abilities evaporate upon using better statistics. Left to Right: Mathematical Model, 2-Integer 2-Digit Multiplication Task, 2-Integer 4-Digit Addition Task.Based on the predictable effect Accuracy has on performance, measuring performance requires high resolution. Generating additional test data increases the resolution and reveals that even on Accuracy, the InstructGPT/GPT-3 family's[3,24] performance is above chance and improves in a smooth, continuous, predictable manner that qualitatively matches the mathematical model.", "figure_data": ""}, {"figure_label": "5", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "Figure 5 :5Figure 5: Emergent abilities appear only for specific metrics, not task-model families. (A) Possible emergent abilities appear with at most 5 out of 39 BIG-Bench metrics. (B) Hand-annotated data by [32] reveals emergent abilities appear only under 4 preferred metrics. (C) > 92% of emergent abilities appear under one of two metrics: Multiple Choice Grade and Exact String Match.", "figure_data": ""}, {"figure_label": "6", "figure_type": "figure", "figure_id": "fig_5", "figure_caption": "Figure 6 :6Figure 6: Changing the metric when evaluating task-model family pairs causes emergent abilities to disappear. Left: The LaMDA model family displays emergent abilities when measured under the discontinuous Multiple Choice Grade. Right: The LaMDA model family's emergent abilities disappear when measured under a continuous BIG-Bench metric: Brier Score.", "figure_data": ""}, {"figure_label": "7", "figure_type": "figure", "figure_id": "fig_6", "figure_caption": "Figure 7 :7Figure 7: Induced emergent reconstruction ability in shallow nonlinear autoencoders. (A) A published emergent ability at the BIG-Bench Periodic Elements task [28]. (B) Shallow nonlinear autoencoders trained on CIFAR100 [19] display smoothly decreasing mean squared reconstruction error. (C) Using a newly defined Reconstruction c metric (Eqn. 2) induces an unpredictable change.", "figure_data": ""}, {"figure_label": "38", "figure_type": "figure", "figure_id": "fig_7", "figure_caption": "3 Figure 8 :38Figure 8: Induced emergent classification ability in autoregressive Transformers. (A) A published emergent ability on the MMLU benchmark [8]. (B) Autoregressive transformers trained to classify Omniglot images display increasing accuracy with increasing scale. (C) When accuracy is redefined as classifying all images correctly, a seemingly emergent ability appears.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_8", "figure_caption": "a b def = a rounded to the nearest integer multiple of 1/b", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_9", "figure_caption": "def=Num Substitutions + Num. Additions + Num. Deletions (n =t n ] + Num. Additions + Num. Deletions (5) \u2265 L =1 I[t n =t n ]", "figure_data": ""}, {"figure_label": "9", "figure_type": "figure", "figure_id": "fig_10", "figure_caption": "Figure 9 :9Figure 9: ROUGE-L-Sum is a sharp metric. Simulations show that as the per-token error probability slightly increase (e.g. from 0.05 to 0.1), the ROUGE-L-Sum metric sharply falls.", "figure_data": ""}, {"figure_label": "10", "figure_type": "figure", "figure_id": "fig_11", "figure_caption": "Figure 10 :10Figure 10: Induced emergent MNIST classification ability in convolutional networks. (A) A published emergent ability from the BIG-Bench Grounded Mappings task [33]. (B) LeNet trained on MNIST [21] displays a predictable, commonplace sigmoidal increase in test accuracy as model parameters increase. (C) When accuracy is redefined as correctly classifying K out of K independent test data, this newly defined metric induces a seemingly unpredictable change.", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "L CE (N ) = N c \u03b1", "formula_coordinates": [3.0, 266.51, 704.39, 78.49, 22.52]}, {"formula_id": "formula_1", "formula_text": "L CE (N ) def = \u2212 v\u2208V p(v) logp N (v)", "formula_coordinates": [4.0, 235.43, 135.47, 141.14, 23.44]}, {"formula_id": "formula_2", "formula_text": "L CE (N ) = \u2212 logp N (v * )", "formula_coordinates": [4.0, 254.03, 193.22, 103.95, 11.72]}, {"formula_id": "formula_3", "formula_text": "p(single token correct) = exp \u2212 L CE (N ) = exp \u2212 (N/c) \u03b1", "formula_coordinates": [4.0, 172.33, 240.83, 260.89, 11.72]}, {"formula_id": "formula_4", "formula_text": "Accuracy(N ) \u2248 p N (single token correct) num. of tokens = exp \u2212 (N/c) \u03b1 L", "formula_coordinates": [4.0, 155.69, 321.97, 300.11, 16.6]}, {"formula_id": "formula_5", "formula_text": "Token Edit Distance(N ) \u2248 L 1 \u2212 p N (single token correct) = L 1 \u2212 exp \u2212 (N/c) \u03b1", "formula_coordinates": [4.0, 122.32, 436.66, 356.36, 11.72]}, {"formula_id": "formula_6", "formula_text": "Emergence Score (x n , y n ) N n=1 def = sign(arg max i y i \u2212 arg min i y i )(max i y i \u2212 min i y i ) Median({(y i \u2212 y i\u22121 ) 2 } i )(1)", "formula_coordinates": [6.0, 111.28, 532.65, 392.72, 34.96]}, {"formula_id": "formula_7", "formula_text": "Reconstruction c {x n } N n=1 def = 1 N n I ||x n \u2212x n || 2 < c(2)", "formula_coordinates": [8.0, 185.67, 460.94, 318.33, 26.35]}, {"formula_id": "formula_9", "formula_text": "E[Token Edit Distance(t n ,t n )] \u2265 E[ L =1 I[t n =t n ]](7)", "formula_coordinates": [12.0, 199.84, 552.05, 304.16, 30.55]}, {"formula_id": "formula_10", "formula_text": "= L =1 p(t n =t n ) (8) \u2248 L(1 \u2212 )(9)", "formula_coordinates": [12.0, 326.01, 587.23, 177.99, 43.97]}, {"formula_id": "formula_11", "formula_text": "E[Token Edit Distance(t n ,t n )] N L \u2265 L 1 \u2212 N L(10)", "formula_coordinates": [12.0, 200.27, 670.2, 303.73, 9.65]}, {"formula_id": "formula_12", "formula_text": "Accuracy(t n ,t n ) def = I[No additions] I[No deletions] L l=1 I[t nl =t nl ](11)", "formula_coordinates": [13.0, 172.83, 136.47, 331.17, 30.55]}, {"formula_id": "formula_13", "formula_text": "\u2248 L l=1 I[t nl =t nl ](12)", "formula_coordinates": [13.0, 243.83, 171.65, 260.17, 30.55]}, {"formula_id": "formula_14", "formula_text": "E[log Accuracy] = l E[log I[t nl =t nl ]](13)", "formula_coordinates": [13.0, 222.69, 269.8, 281.31, 20.14]}, {"formula_id": "formula_15", "formula_text": "\u2264 l log E[I[t nl =t nl ]](14)", "formula_coordinates": [13.0, 290.18, 297.23, 213.82, 20.14]}, {"formula_id": "formula_16", "formula_text": "\u2248 L log(1 \u2212 )(15)", "formula_coordinates": [13.0, 290.18, 321.83, 213.82, 8.96]}, {"formula_id": "formula_17", "formula_text": "E[Accuracy] \u2248 exp(E[log Accuracy]) (16) = (1 \u2212 ) L (17)(18)", "formula_coordinates": [13.0, 230.42, 377.89, 273.58, 38.99]}, {"formula_id": "formula_18", "formula_text": "E[Accuracy] N L = (1 \u2212 ) L N L(19)", "formula_coordinates": [13.0, 239.35, 466.64, 264.65, 11.72]}], "doi": ""}