{"title": "Novelty and Redundancy Detection in Adaptive Filtering", "authors": "Yi Zhang; Jamie Callan; Thomas Minka", "pub_date": "", "abstract": "This paper addresses the problem of extending an adaptive information filtering system to make decisions about the novelty and redundancy of relevant documents. It argues that relevance and redundance should each be modelled explicitly and separately. A set of five redundancy measures are proposed and evaluated in experiments with and without redundancy thresholds. The experimental results demonstrate that the cosine similarity metric and a redundancy measure based on a mixture of language models are both effective for identifying redundant documents.", "sections": [{"heading": "INTRODUCTION", "text": "Information filtering systems monitor document streams to find documents that match information needs specified by user profiles. Most recent research on information filtering focuses on learning to become more accurate at identifying relevant documents, for example, based on long-term observations of the document stream and periodic feedback from the user. This research area is called adaptive information filtering, and system performance is typically evaluated using relevancy-based recall, precision, and utility metrics [12].\nA common complaint about information filtering systems is that they do not distinguish between documents that contain new relevant information and documents that contain information that is relevant but already known. An information filtering system would provide better service to its users if it identified three categories of documents for each user profile: i) not relevant, ii) relevant but contains no new information, and iii) relevant and contains new information. Users could then decide for themselves how to treat relevant documents that contain no new information.\nThe decision about whether a document contains new information depends on whether the relevant information in the document is covered by information in documents delivered previously. This complicates the filtering problem. The relevance of a document is traditionally a stateless Boolean value. A document is or is not relevant, without regard to where the document appears in the stream of documents. Decisions about redundancy and novelty depend very much on where in the stream a document appears.\nFor this study we defined a task and created an evaluation dataset that contains known redundant documents. We model relevance and redundancy separately, and use different similarity measures for relevancy and redundancy. We also developed and tested a variety of redundancy measures.\nThe following sections describe our efforts towards evaluating and developing algorithms for redundancy/novelty detection while filtering. We begin with a description of the problem and a review of related work. Section 4 describes algorithms for measuring redundancy. Section 5 introduces a simple thresholding algorithm for deciding how much redundancy is \"too much\". Sections 6 and 7 describe our experimental methodology and results. Section 8 concludes.", "publication_ref": ["b11"], "figure_ref": [], "table_ref": []}, {"heading": "REDUNDANCY/NOVELTY DETECTION", "text": "We want our filtering system to distinguish among relevant documents that contain new (novel) relevant information and relevant documents that don't. When a document arrives, the system must determine whether it is on topic (relevancy detection), and if it is on topic, whether it is redundant (redundancy detection). We define \"Redundant\" to mean that all of the relevant information in the document is covered by relevant documents delivered previously. 1 The task of identifying novel and redundant documents has not been addressed by prior work, because of the lack of a clear definition of redundancy, and a lack of evaluation data. In the research reported here, novelty and redundancy are defined i) over the set of relevant documents, ii) with respect to previously seen documents, and iii) as opposite endpoints of a scale. The latter point is particularly important. When we treat novelty and redundancy as Boolean values, we imply a thresholding process that maps a value on a continuous redundancy/novelty scale to a Boolean value. We tested our approach to novelty and redundancy by creating an evaluation dataset judged by undergraduate assessors A system that delivers documents that are novel and relevant must identify documents that are similar to previously delivered relevant documents in the sense of having the same topic, but also dissimilar to the previously delivered documents in the sense of containing new information. These two goals are contradictory, and it may be unrealistic to expect a single component to satisfy them both. This observation suggests a two stage approach to the problem, as shown in Figure 1. Traditional adaptive information filtering solutions can be used for relevancy filtering. It is less clear what type of algorithm should be used for redundancy filtering, and we defer discussion of solutions to Section 4; for now, we simply observe that a two-stage architecture is likely to simplify the problem.\nWe use the following notation throughout the paper. All notation is defined with respect to a particular user profile.\n\u2022 A, B: sets of documents\n\u2022 dt: a document that arrives at time t and that is being evaluated for redundancy.", "publication_ref": ["b0"], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "\u2022 D(t):", "text": "the set of all documents delivered for the profile by the time dt arrives, not including dt.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "\u2022 DR(t):", "text": "the set of all relevant documents delivered for the profile. DR(t) \u2286 D(t).", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "\u2022 R(dt):", "text": "the measure of redundancy for document dt\n\u2022 di: usually refers to a relevant document that was delivered before dt arrived.\nWe formulate the task based on the following assumptions, and they are basis for our research when acquiring redundancy judgements and developing algorithms.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Assumption 1", "text": "The redundancy of a new document dt depends on D(t), the documents the user saw before dt arrived. We use R(dt) = R(dt|D(t)) to measure this.\nAssumption 2 R(dt|D(t)) depends on all the relevant documents DR(t) the user has seen when dt arrives, so R(dt|D(t)) = R(dt|DR(t)).\nAssumption 3 For two documents set A, and B, if B A and B makes dt redundant, then A also makes dt redundant. To make it a softer assumption:\nB A \u21d2 R(dt|A) \u00a1 R(dt|B)\nInformation filtering systems based on statistical retrieval models usually compute a score indicating how well each document matches a profile; documents with scores above a profile-specific dissemination threshold are delivered. Similarly, the task of identifying redundant documents can be divided into two subtasks: calculate a score to measure how redundant each document is for a profile, then identify documents with scores above a profile-specific redundancy threshold. In our architecture (Figure 1), the second stage redundancy filter consists of two elements: i) redundancy score calculation, and ii) redundancy threshold learning.\nIn an adaptive filtering system, each of these architectural components defines a different research agenda. The scoring mechanism requires profile-specific \"anytime\" updating of redundancy measures. The threshold mechanism requires a threshold updating module. The former is the focus of the research described in this paper. Although thresholding is not the focus of this paper, we did implement a simple threshold setting algorithm to make the system more complete, and to enable evaluation of redundancy measures in the context of an operational filtering system.", "publication_ref": [], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "RELATED WORK", "text": "The research most closely related to novelty or redundancy detection in adaptive information filtering is perhaps the First Story Detection task associated with Topic Detection and Tracking (TDT) research [1]. A TDT system monitors a stream of chronologically-ordered documents, usually news stories. The First Story Detection (FSD) task is defined as detecting the first story that discusses a previouslyunknown event. An event is defined as \"something that happens at some specific time and place\" [14].\nOnline clustering approaches have been a common solution to the FSD task [10,3,2,5,4,13,15,1,14]. New stories are compared to clusters of stories about previously-known events. If the new story matches an existing cluster, it describes a known event, otherwise it describes a new event.\nOne might argue that the concepts \"event\" and \"novelty\" are related, or that solutions defined to detect events also work for novelty. However, we think this unlikely. FSD is an event-based task, and TDT researchers have developed a distinct set of methods for topic tracking. Events have certain structures and occurrence patterns in the media. Information filtering profiles, in contrast, tend to be more subjectoriented and are often intended to follow a subject area over a relatively long period of time. Distinct events might or might not occur in the stream of relevant documents. We would also expect the two tasks to be sensitive to different vocabulary patterns. Indeed, because the user profile and a stream of relevant documents define a far smaller universe of documents than encountered in the TDT task, we might expect novelty/redundancy detection in a filtering environment to be an easier task than FSD in TDT.\nFSD is a difficult problem, far from solved. The predicted and actual error rates are unacceptably high for all but a few applications [2,5]. However, the similarities of the two tasks are worth exploring, and several of the redundancy measures we investigated are motivated by work on FSD.", "publication_ref": ["b0", "b13", "b9", "b2", "b1", "b4", "b3", "b12", "b14", "b0", "b13", "b1", "b4"], "figure_ref": [], "table_ref": []}, {"heading": "REDUNDANCY MEASURES", "text": "We assume that traditional information filtering techniques are used to identify relevant documents; we recognize that the filtering system will make mistakes, i.e., it will deliver some documents that are not relevant and discard some documents that are actually relevant. However, for simplicity we assume that novelty/redundancy detection is performed on a stream of documents that are presumed to be relevant.\nWe frame this problem as finding a measure R(dt|DR(t)), based on Assumption 2 in Section 2.\nOne approach to novelty/redundancy detection is to cluster all previously delivered documents, and then to measure the redundancy of the current document by its distance to each cluster. This approach is similar to solutions for the TDT First Story Detection problem. Our concerns about this approach are that it is sensitive to clustering accuracy, and is based on strong assumptions about the nature of redundancy, which we think is user dependant.\nAnother approach is to measure redundancy based on the distance between the new document and each previously delivered document (document-document distance). This approach may be more robust than clustering, and may be a better match to how users view redundancy. When we asked assessors to annotate an evaluation dataset, we found that it was easiest for them to identify a new document as being redundant with a specific previously seen document, and harder to identify it as being redundant with a set of previously seen documents. This observation allows us to simplify the calculation of R(dt|DR(t)) by setting it equal to the value of the maximally similar value in all R(dt|di).", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "R(dt|DR(t))", "text": "= argmax d i \u2208DR(t) R(dt|di)\nAlthough duplicate detection is not our goal, it is an instructive case because it is simple. If dt and di are exact duplicates (dt = di) then R(dt|di) should have a high value because a duplicate document is maximally redundant. One natural way to measure R(dt|di) is using measures of similarity/distance/difference between dt and di.\nDocument timestamps are also an important source of evidence, because documents are more likely to be redundant with other recently delivered documents. During redundancy decisions truncating the delivery history to the most recent N documents delivered for a profile also reduces the number of documents that must be considered, which reduces computational costs. N is set to 10 in all experiments reported in this paper.\nRedundancy is not a symmetric metric. dj may cause d k to be viewed as redundant, but if the presentation order is reversed, d k and dj may both be viewed as containing novel information. A simple example is a document d k that is a subset (e.g., a paragraph) of a longer document dj . This problem characteristic motivates exploration of asymmetric forms of traditional similarity/distance/difference measures.\nBelow we present several different approaches to redundancy detection. The simple set distance measure is designed for a Boolean, set-oriented document representation. The geometric distance (cosine similarity) measure is a simple metric designed for \"bag of words\" document representations. Several variations of KL divergence and related smoothing algorithms are more complex metrics designed to measure differences in word distributions.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Set Difference", "text": "The set difference measure represents each document as a set of words. The novelty of a new document dt is measured by the number of new words in the smoothed set representation of dt. If a word wi occurred frequently in document dt but less frequently in an old document di, it is likely that new information not covered by di is covered by dt.\nSome words are expected to be frequent in a new document because they tend to be frequent in the corpus, or because they tend to be frequent in all relevant documents. There may also be topic-related stopwords, which are words that behave like stopwords in relevant documents, even if they are not stopwords in the corpus as a whole. An effective measure must compensate for both types of words.\nOur set difference measure compensates for corpus stopwords by smoothing a new document's word frequencies with word counts from all previously seen documents. It compensates for topic stopwords by smoothing a new document's word frequencies with word counts from all delivered (presumed relevant) documents.\nThus we have the following measure for the redundancy of current document dt with respect to old document di.\nR(dt|di) = Set(dt) Set(di)(1)\nWhere:\nwj \u2208 Set(d) iff Count(wj , d) > k Count(wj , d) = \u03b11 * tf w j ,d + \u03b12 * dfw j + \u03b13 * rdfw j tf w j ,d :\nthe frequency of word wj in document d dfw j :\nthe number of filtered documents that contain wj rdfw j : the number of delivered relevant documents that contain word wj (\u03b11, \u03b12, \u03b13, k) are set to (0.8, 0.2, 0.0, 2) in our experiments; they could also be learned from training data.\nWe are not using the true difference between two sets\nSet(dt) Set(di) + Set(dt) Set(di)\nhere because the words in\nSet(dt) Set(di)\nshouldn't contribute to the novelty of dt and the optimal novelty measure should be asymmetric.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Geometric Distance", "text": "There are several different geometric distance measure, such as Manhattan distance and Cosine distance [8]. Since Manhattan distance is very sensitive to document length, Cosine distance maybe more appropriate for our task. Prior research showed that a Cosine distance based measure was useful for the TDT FSD task [4].\nCosine distance is a symmetric measure related to the angle between two vectors [6]. If we represent document d as a vector d = (w1(d), w2(d), .., wn(d)) T , then:\nR(dt|di) = cos dt, di (2) = \u00a1 n k=1 w k (dt)w k (dt) dt di(3)\nIn our study, we used each unique word as one dimension, and set the tf.idf score as the weight of each dimension.", "publication_ref": ["b7", "b3", "b5"], "figure_ref": [], "table_ref": []}, {"heading": "Distributional Similarity", "text": "Probabilistic language models have shown promise for identifying relevant documents in ad-hoc IR tasks (e.g., [10,7,16]). In the language model approach, a document d is represented by a unigram word distribution \u03b8 d . Kullback-Leibler divergence, a distributional similarity measure, is one way to measure the redundancy of one document given another.\nR(dt|di) = \u2212KL(\u03b8 dt , \u03b8 d i ) (4) = \u2212 \u00a2 w i P (wi|\u03b8 dt )log( P (wi|\u03b8 d i ) P (wi|\u03b8 dt ) (5)\nwhere \u03b8 d is the language model for document d, and is a multinomial distribution. \u03b8 d can be found by maximum likelihood estimation (MLE):\nP (wi|d) = tf (wi, d) \u00a1\nw j tf (wj , d) The problem with using MLE is that if a word never occurs in document d, it will get a zero probability (P (wi|d) = 0). Thus a word in dt but not in di will make KL(\u03b8 dt , \u03b8\nd i ) = \u221e.\nSmoothing techniques are necessary to adjust the maximum likelihood estimation so that the KL-based measure is more appropriate. Prior research shows that retrieval performance is highly sensitive to smoothing parameters. Several smoothing methods have been applied to ad-hoc information retrieval and text classification (e.g., [17,9]). Based on this prior research, we selected two methods: Bayesian smoothing using Dirichlet priors, and shrinkage.", "publication_ref": ["b9", "b6", "b15", "b16", "b8"], "figure_ref": [], "table_ref": []}, {"heading": "Bayesian Smoothing Using Dirichlet Priors", "text": "This approach to smoothing uses the conjugate prior for a multinomial distribution, which is the Dirichlet distribution [17]. For a Dirichlet distribution with parameters (\u03bbp(w1), \u03bbp(w2), ..., \u03bbp(wn)) the posterior distribution using Bayesian analysis for \u03b8 d is\nP \u03bb (wi|d) = tf (wi, d) + \u03bbp(wi) \u00a1 w j (tf (wj, d) + \u03bbp(wj))(6)\nIn our experiments, if wj is in dt, we set \u03bbp(wj) = 0.5, otherwise \u03bbp(wj) = 0.", "publication_ref": ["b16"], "figure_ref": [], "table_ref": []}, {"heading": "Smoothing Using Shrinkage", "text": "This approach smooths by \"shrinking\" parameter estimates in sparse data towards the estimates in rich data [9]. This is a special case of the more general Jelinek-Mercer smoothing method, which involves deleted-interpolation estimation of linearly interpolated n-gram models [17]. For estimating the language model of document d, we can shrink its MLE estimator \u03b8 d M LE with the MLE estimator of a language model for general English \u03b8E M LE and the MLE estimator of a language model for the topic \u03b8T M LE :\n\u03b8 d = \u03bb d \u03b8 d M LE + \u03bbT \u03b8T M LE + \u03bbE\u03b8E M LE(7)\nwhere\n\u03bb d + \u03bbT + \u03bbE = 1.\n\u03bbE can be estimated from the documents the filtering system has processed, and \u03bbT can be estimated from the documents the filtering system has delivered (presumed relevant documents). We can derive empirical optimal values for \u03bb d , \u03bbT , and \u03bbE using \"leave-one-out\" cross validation as described in [9]. In our experiment, we used \"leave-0.5-out\".", "publication_ref": ["b8", "b16", "b8"], "figure_ref": [], "table_ref": []}, {"heading": "A Mixture Model", "text": "In this section we introduce a new algorithm based on a generative model of document creation. This approach uses probabilistic language models and KL distance as described in Section 4.3. However, this new mixture model measure is based on a novel view of how relevant documents are generated. We can also view it as a language model with a smoothing algorithm designed specifically for our task.\nAs shown in Figure 2, we assume each relevant document is generated by the mixture of three language models: A General English language model \u03b8E, a user-specific where\n\u03bbE + \u03bbT + \u03bb d core = 1.\nFor example, if information need is \"Star Wars\", in a relevant document words such as \"is\" and \"the\" probably come from the general English model \u03b8E. Words such as \"star\" and \"wars\" probably come from the Topic Model \u03b8T . For a document with the title \"Martin Marietta Is Given Contract For Star Wars Site\", the words \"Martin\" and \"Marietta\" are more likely to be generated from the new information model \u03b8 d core . \u03b8T is the core information of a topic, while \u03b8 d core is the core information of a particular relevant document.\nR(dt|di) = KL(\u03b8 dt core , \u03b8 d i core ) (9)\nIf we fix \u03bbE, \u03bbT , and \u03bb d core then there exists a unique optimal value for the document core model \u03b8 * d core that maximizes the likelihood of the document.\n\u03b8 * d core = argmax \u03b8 d core P (d|\u03b8E, \u03b8T , \u03b8 d core , \u03bbE, \u03bbT , \u03bb d core ) (10)\nThree points are worth noting about the mixture model.\n\u2022 Although Equations 7 and 8 look similar, the computations performed, and the final model acquired and used to calculate KL divergence, are quite different. Equation 7 uses shrinkage to increase the probability of words that occur frequently in the topic or in general English if they occur less frequently in document d. Equation 8 uses a mixture model to decrease the probability of these words. By shrinking with \u03b8E M LE and \u03b8T M LE , shrinkage smoothing reduces the distance between two documents due to those words, thus reducing their effect on the redundancy measure. With the mixture model, we directly decrease the probability of those words to reduce their effect. \u2022 This model intentionally focus on \"what's new\" in a document, thus it avoids the contradiction between identifying relevance and novelty. If the task is to deliver relevant documents, the learning algorithm will try to recognize documents similar to already delivered relevant documents (training data). If the task is to deliver only documents containing novel information, the learning algorithm must avoid documents that are similar to those already delivered. This model introduces \u03b8T and \u03b8 d core , which means the measure of relevancy and redundancy are focused on different parts of a document. For relevancy, the system would like to focus on \u03b8T , while for redundancy it should focus on \u03b8 d core . Thus the two tasks are no longer contradictory\nWe can train \u03b8T , \u03b8 d score , and \u03b8E using the EM algorithm, which has been used by others to find a language model for similar problems (e.g., [7], [16]).", "publication_ref": ["b6", "b15"], "figure_ref": ["fig_1"], "table_ref": []}, {"heading": "REDUNDANCY THRESHOLDS", "text": "When we observed human assessors making redundancy decisions, we found that two annotators working on the same topics sometimes disagreed. Sometimes the disagreement was due to differences in the assessors' internal definition of redundancy. More often one assessor might feel that a document dt should be considered redundant if a previously seen document di covered 80% of dt; the other assessor might not consider it redundant unless the coverage exceeded 95%.\nA person's tolerance for redundancy can be modeled with a user-dependent threshold that converts a redundancy score into a redundancy decision. User feedback about which documents are redundant serves as training data. Over time the system can learn to estimate the probability that a new document with a given redundancy score would be considered redundant : P (user j thinks dt is redundant|R(dt|DR(t))).\nThis two-step process first maps the document dt into a 1dimensional space R(dt|DR(t) using a redundancy measure, and then learns from training data the probability of redundancy given the value on this dimension. This approach is similar in spirit to how many adaptive filtering systems identify relevant documents (e.g., [11,18]).\nIdeally, an optimization goal should be set before deciding what kind of threshold setting algorithm to use. However, our first step is a very simple algorithm for setting thresholds. Our solution is intentionally simple, in part because of the lack of adequate test collection labelled with redundant information for a given profile, and in part because this problem is not (yet) our research focus.\nThe algorithm for learning redundancy thresholds is:\n\u2022 Initialize redundancy threshold RThreshold to a value that is so high that only very redundant documents (e.g., near duplicates) are considered redundant; and\n\u2022 For each document dt delivered (which means R(dt) < RT hreshold when dt arrives), ask the user if the document is redundant. If the document is redundant and if R(dt) > R(di) for all di \u2208 DR(t)\nthen RT hreshold = R(dt) else RT hreshold = RT hreshold \u2212 RT hreshold\u2212R(dt )", "publication_ref": ["b10", "b17"], "figure_ref": [], "table_ref": []}, {"heading": "10", "text": ". This is clearly a weak algorithm, because it only decreases the threshold. If the threshold becomes too low there is no method of increasing it again. The effectiveness of this algorithm is explored in Section 7.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "EXPERIMENTAL METHODOLOGY", "text": "", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "AP News & Wall Street Journal Dataset", "text": "We created a one gigabyte dataset by combining AP News and Wall Street Journal data from TREC CDs 1, 2, and 3. We chose these corpora because they are widely available, because information needs and relevance judgements are available from NIST, and because the two newswire corpora cover the same time period (1988 to 1990) and many of the same topics, guaranteeing some redundancy in the document stream. Documents were ordered chronologically. 50 TREC topics (101 to 150) simulated user profiles.\nThe decision about how to collect redundancy assessments depends in part upon how we view the task. If we viewed redundancy as a relationship between document dt and a set of documents, for example a subset of the documents delivered for a particular profile, it would be impossible to collect redundancy assessments. We would need to enumerate all of the possible subsets of documents delivered at time t and then ask assessors to judge whether dt is redundant with respect to each set. The number of possible subsets is 2 t\u22121 , which is impractical for all but very small values of t. Although we know that in the \"real world\" redundancy is based on the set of documents delivered previously, we can only model it as a relationship among pairs of documents. This is the approach we adopted when developing algorithms, but that decision was based in part on how we intended to collect redundancy judgements.\nWe hired undergraduate students, who were otherwise unaffiliated with our research, to read the relevant documents for a profile in chronological order and to provide redundancy judgments. The decision to restrict their attention to relevant documents is based on assumption 2 in Section 2, and is consistent with a filtering system where another component makes decisions about relevance.\nAssessors judged one topic at a time. They were instructed to make a decision for each document about whether the information it contained was redundant with document(s) seen previously for that topic, and to identify the prior document(s). Each topic was judged by two assessors and then differences were resolved by the assessors themselves.\nWe believe that in operational environments different people will have different definitions of redundancy and different redundancy thresholds. We modelled this environment by not giving assessors a precise definition of redundance. We provided two degrees of redundancy, absolutely redundant and somewhat redundant; assessors could apply them based on their expectations about how a good system should behave. If the assessor thought a person would definitely not want to read dt because it absolutely contained no new information, dt was marked as absolutely redundant. If the assessor thought that a new document had some new information that a person might want to read, even though much of the document was redundant with a prior document, the document could be marked as somewhat redundant. Documents that were not completely redundant or somewhat redundant were marked as novel.\nAn example of the redundancy assessments is shown below. The first field is a profile id. The second field is the document id of a redundant document. Subsequent document ids are the documents that preceded it in the stream and that made it redundant. A '?' indicates that a document is only partially redundant.  q121 AP880217-0031 AP880216-0137 if user q121 read document AP880216-0137, then AP880217-0031 is absolutely redundant.\nq128 AP880218-0137 AP880218-0113 AP880218-0112 if user q128 read AP880218-0113 and AP880218-0112, then AP880218-0137 is absolutely redundant.\nOn average there are about 66.5 records per TREC topic (note that a single record may relate a document to several prior documents). About 19.2 records per profile are absolutely redundant; the rest represent partial redundance.\nStudents reported that the choice of corpus (\"old\") and topics made this a dull task, so we were unable to collect assessments for all 50 topics. The results in this paper are based on a set of adjudicated assessments for 33 profiles.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "TREC Interactive Dataset", "text": "We combined the dataset used by the TREC-6, TREC-7, and TREC-8 Interactive Tracks to create a test dataset containing 210,158 documents from the 1991-1994 Financial Times of London. There are 20 TREC topics; each one defines a user profile. For each topic, TREC assessors have identified several instances. Different instances are about different aspects of the topic. A document on a topic could be mapped to multiple instances of that topic. The mapping from the relevant documents to instances is provided by NIST. In our evaluation, we treated each instance as one aspect of the topic and assumed that a user only wants to see one document on each aspect. Thus a document is redundant if the user has already seen at least one document for each instance this new document belongs to.\nSince this dataset was not created explicitly for redundancy detection, it maybe not be as well-matched to the task as the AP News/Wall Street Journal dataset described above. However, we felt that a second dataset, even one that isn't perfect, would be a useful source of information.  ", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Evaluation Methodology", "text": "We believe that it is important to evaluate a particular component of a system with a metric that is not affected by strengths and weaknesses in other parts of system. In this case, we would like to factor out how well the filtering system identifies relevant documents and sets redundancy thresholds. In our experiments we assume that the filtering system identifies relevant documents with 100% precision and recall by evaluating redundancy filtering only on a stream of documents marked relevant by NIST assessors. In some tests we also evaluate the effectiveness of redundancyscoring algorithms, and factor out the effect of the redundancy threshold algorithm, by reporting average Precision and Recall figures for redundant documents. Precision and recall are well-known metrics in IR community. We adapt them to the redundancy detection task as shown below. \nRedundancy \u2212 P recision = R \u2212 R \u2212 + N \u2212 (11) Redundancy \u2212 Recall = R \u2212 R \u2212 + R + (12) Redundancy \u2212 M istake = R + + N \u2212 R + + N \u2212 + R \u2212 + N + (13) R \u2212 , R + , N \u2212 , N + correspond", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "EXPERIMENTAL RESULTS", "text": "The five redundancy measures described in Section 4 were compared on the two datasets described in Sections 6.1 and 6.2. A redundancy score was calculated for each relevant  On both datasets the Set Difference measure is the least accurate. Representing a document as a set of Boolean word features, even with smoothing to add or delete additional words, was very ineffective.\nThe traditional cosine-similarity metric (a geometric distance measure) was very effective. This result was a small surprise, because cosine similarity is less well-justified theoretically than the language modelling approaches. The cosine similarity metric is also symmetric; we expected asymmetric measures to be a better model of this task. However, cosine similarity has been demonstrated many times and over many tasks to be a robust similarity metric. Our results add redundancy detection to the long list of tasks for which it is effective.\nThe results for the three Language Modelling algorithms confirm prior research showing the importance of selecting a good smoothing algorithm. The mixture model approach was consistently more accurate than the other two smoothing algorithms on both corpora. It was also about as effective as the cosine similarity measure on the TREC Interactive Track dataset. This approach to mixing information from corpus, topic, and a document language models provides a new point of view about how to model documents, and it does deliver improved effectiveness compared to other language modelling approaches. This result is not completely surprising, because the algorithm explicitly models what's new in a document. However, these results suggest that it is not as robust as the cosine similarity measure.\nWe also implemented a simple threshold-setting algorithm (Section 5). The threshold-setting algorithm is simple and weak, in part because we did not set an optimization goal specifying the relative rewards and penalties for delivering novel and redundant documents. However, even a simple algorithm can be used to analyze the different redundancy measures. In particular, it provides a more accurate indication of what a user might see in an operational environment.\nTables 1   redundancy measures when used with the simple redundancy threshold algorithm. Results are reported for both datasets. (The metrics are described in Section 6.3).\nIf we evaluate the redundancy measures by the percentage of mistakes they make, the Cosine Similarity and Mixture Model redundancy measures are much better than the rest. These two measures yields a reasonably low percentage of mistakes when a strict definition of redundancy is used (Table 2), but a less satisfying percentage when somewhat redundant documents are treated as redundant (Table 1). This result implies that our simple redundancy threshold algorithm models the user by treating somewhat redundant as novel. We know that a good threshold setting algorithm is important to system accuracy, and we hypothesize that threshold setting should depends on each user. Table 2 shows that reasonably good accuracy is possible when the thresholding algorithm is well-matched to the task.", "publication_ref": [], "figure_ref": [], "table_ref": ["tab_2", "tab_3", "tab_2", "tab_3"]}, {"heading": "CONCLUSION", "text": "The research reported here is a first step towards adaptive information filtering systems that learn to identify documents that are novel and redundant in addition to relevant and nonrelevant. It defines a task, an evaluation methodology, and a set of novelty/redundancy measures. A reusable corpus was created from generally available documents, a set of adjudicated redundancy judgements was created, and an existing corpus was adapted to our task.\nThe experimental results demonstrate that it is possible to identify redundant documents with reasonable accuracy. They also demonstrate the importance of a suitable redundancy-threshold algorithm, analogous to the relevancethreshold algorithm found in many information filtering systems. Our results also suggest that the algorithm itself should depend on the user model of redundancy.  available for relevance-based adaptive filtering) makes it a challenging problem. We proposed five measures for assessing the redundance of a new document with respect to a previously seen stream of documents. Our experimental results demonstrate that the well-known cosine similarity metric is effective on this new task. They also demonstrate that a new metric based on a mixture of language models can be as effective as the cosine similarity metric in some cases.\nWe believe that the metric based on a mixture of language models is an important contribution, whether or not it was the most effective algorithm for this task. We believe that viewing documents as a mix of information covered by corpus, topic, and \"new information\" models is an appropriate model of an information filtering task. The results reported here are a first attempt to apply this approach to a realistic task; we expect to see other attempts in the future.\nThis research is only a first attempt at redundancy/novelty detection in an adaptive filtering environment, so there are many open problems for future research. Our research on profile-specific \"anytime\" updating of redundancy measures just scratches the surface. Although cosine similarity worked well in our experiments, we believe that the underlying redundancy relationship is asymmetric, and that asymmetric measures will eventually be more accurate. It is also likely that other features, such as timestamp, document source, phrases, and proper names will be important sources of evidence for novelty decisions.\nOur research measured redundancy based on documentdocument pairs, which is easy to assess and easy to model, but the underlying task is probably better modelled by comparing clusters of delivered documents to the new document. The best choice may be problem-specific, e.g., depending upon corpus or profile characteristics.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "ACKNOWLEDGMENTS", "text": "We thank John Lafferty, Chengxiang Zhai, Yiming Yang, Chun Jin, and Wei Xu for their very helpful discussions and recommendations. This material is based on work supported by Air Force Research Laboratory contract F30602-98-C-0110. Any opinions, findings, conclusions or recommendations expressed in this paper are the authors', and do not necessarily reflect those of the sponsors.", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Topic detection and tracking pilot study", "journal": "", "year": "2001", "authors": "J Allan; J Carbonell; G Doddington; J Yamron; Y Yang"}, {"ref_id": "b1", "title": "First story detetion in TDT is hard", "journal": "", "year": "2000", "authors": "J Allan; V Lavrenko; H Jin"}, {"ref_id": "b2", "title": "On-line new event detection and tracking", "journal": "", "year": "1998", "authors": "J Allan; R Papka; V Lavrenko"}, {"ref_id": "b3", "title": "Topic Detection and Tracking Workshop Report", "journal": "", "year": "2001-11", "authors": "J Carbonell; Y Yang; R Brown; C Jin; J Zhang"}, {"ref_id": "b4", "title": "First story detection: Combining similarity and novelty based approaches", "journal": "", "year": "2001", "authors": "M Franz; A Ittycheriah; J S Mccarley; T Ward"}, {"ref_id": "b5", "title": "Pictures of relevance", "journal": "Journal of the American Society for Information Science", "year": "1987", "authors": "W P Jones; G W Furnas"}, {"ref_id": "b6", "title": "Twenty-one at TREC-8: using language technology for information retrieval", "journal": "", "year": "1999", "authors": "W Kraaij; R Pohlmann; D Hiemstra"}, {"ref_id": "b7", "title": "Measures of distributional similarity", "journal": "", "year": "1999", "authors": "L Lee"}, {"ref_id": "b8", "title": "Improving text classification by shrinkage in a hierarchy of classes", "journal": "", "year": "1998", "authors": "A Mccallum; R Rosenfeld; T Mitchell; A Y Ng"}, {"ref_id": "b9", "title": "A hidden markov model information retrieval system", "journal": "", "year": "2001", "authors": "D R H Miller; T Leek; R Schwartz"}, {"ref_id": "b10", "title": "Threshold setting in adaptive filtering", "journal": "Journal of Documentation", "year": "2000", "authors": "S Robertson"}, {"ref_id": "b11", "title": "The TREC-9 Filtering track report", "journal": "", "year": "2001", "authors": "S Robertson; D Hull"}, {"ref_id": "b12", "title": "TNO at TDT2001: Language model-based topic detection", "journal": "", "year": "2001", "authors": "M Spitters; W Kraaij"}, {"ref_id": "b13", "title": "Combining semantic and syntactic document classifiers to improve first story detection", "journal": "", "year": "2001", "authors": "N Stokes; J Carthy"}, {"ref_id": "b14", "title": "Dragon's tracking and detection systems for the TDT2000 evaluation", "journal": "", "year": "1998", "authors": "J Yamron; S Knecht; P Van Mulbregt"}, {"ref_id": "b15", "title": "Model-based feedback in the language modeling approach to information retrieval", "journal": "", "year": "2001", "authors": "C Zhai; J Lafferty"}, {"ref_id": "b16", "title": "A study of smoothing methods for language models applied to ad hoc information retrieval", "journal": "", "year": "2001", "authors": "C Zhai; J Lafferty"}, {"ref_id": "b17", "title": "Maximum likelihood estimation for filteirng thresholds", "journal": "", "year": "2001", "authors": "Y Zhang; J Callan"}], "figures": [{"figure_label": "1", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Figure 1 :1Figure 1: A system that includes traditional document filtering (for relevance) as well as second stage novelty/redundancy detection.", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Figure 2 :2Figure 2: A mixture model for generating relevant documents.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "\u2022We must fix the values of \u03bbE, \u03bbT , and \u03bb d core . If we train \u03bb's and \u03b8 d core together, we get \u03bb d core = 1 and \u03b8 d core = \u03b8 d M LE , which is the unsmoothed language model for document d; the benefit of smoothing is lost.", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "Figure 3 :3Figure 3: Comparing redundancy measures on AP News & Wall Street Journal data. Documents are considered redundant if an assessor marked it absolutely redundant or somewhat redundant.", "figure_data": ""}, {"figure_label": "4", "figure_type": "figure", "figure_id": "fig_6", "figure_caption": "Figure 4 :4Figure 4: Comparing redundancy measures on AP News & Wall Street Journal data. Documents are considered redundant only if an assessor marked it as absolutely redundant. The Language Model (LM) measures using Shrinkage and Dirichlet Prior smoothing perform equally, thus overlap.", "figure_data": ""}, {"figure_label": "5", "figure_type": "figure", "figure_id": "fig_8", "figure_caption": "Figure 5 :5Figure5:Comparing redundancy measure on TREC Interactive Track data. A document about aspect(s) already covered by previously delivered documents is considered redundant.", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_0", "figure_caption": "For simplicity, we will use Precision and Recall to refer to Redundancy-Precision and Redundancy-Recall in the rest of this paper.", "figure_data": "to the number of documentsthat fall into the following categories:Redundant Non-RedundantDeliveredR +N +Not DeliveredR \u2212N \u2212"}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "Average performance of different redundancy measures with a simple thresholding algorithm, measured on 33 topics with the AP News & Wall Street Journal dataset. Both absolutely redundant and somewhat redundant documents are treated as redundant.", "figure_data": "MeasureRecall Precision MistakeSet Distance0.360.2928.1%Cosine Distance0.480.3318.7%LM: Shrinkage0.3750.4521%LM: Dirichlet Prior0.3750.4521%LM: Mixture Model0.460.4016.7%"}, {"figure_label": "2", "figure_type": "table", "figure_id": "tab_3", "figure_caption": "", "figure_data": "Average performance of different redun-dancy measures with a simple thresholding algo-rithm, measured on 33 topics with the AP News& Wall Street Journal dataset. Only absolutely re-dundant documents are treated as redundant."}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_4", "figure_caption": "The extremely small amount of training data (less than what is", "figure_data": "MeasureRecall Precision MistakeSet Distance0.430.2846.8%Cosine Distance0.450.4434.5%LM: Shrinkage0.790.3353.3%LM: Dirichlet Prior0.730.3449.0%LM: Mixture Model0.180.5128.4%"}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_5", "figure_caption": "Average performance of different redundancy measures with a simple thresholding algorithm, measured on 20 topics with the TREC Interactive dataset.", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "B A \u21d2 R(dt|A) \u00a1 R(dt|B)", "formula_coordinates": [2.0, 76.2, 640.56, 216.57, 19.12]}, {"formula_id": "formula_1", "formula_text": "= argmax d i \u2208DR(t) R(dt|di)", "formula_coordinates": [3.0, 146.02, 294.36, 107.54, 10.51]}, {"formula_id": "formula_2", "formula_text": "R(dt|di) = Set(dt) Set(di)(1)", "formula_coordinates": [3.0, 364.68, 201.23, 191.25, 8.97]}, {"formula_id": "formula_3", "formula_text": "wj \u2208 Set(d) iff Count(wj , d) > k Count(wj , d) = \u03b11 * tf w j ,d + \u03b12 * dfw j + \u03b13 * rdfw j tf w j ,d :", "formula_coordinates": [3.0, 316.8, 230.4, 222.96, 31.03]}, {"formula_id": "formula_4", "formula_text": "Set(dt) Set(di) + Set(dt) Set(di)", "formula_coordinates": [3.0, 354.84, 332.64, 162.96, 8.97]}, {"formula_id": "formula_5", "formula_text": "Set(dt) Set(di)", "formula_coordinates": [3.0, 400.68, 368.58, 71.28, 8.26]}, {"formula_id": "formula_6", "formula_text": "R(dt|di) = cos dt, di (2) = \u00a1 n k=1 w k (dt)w k (dt) dt di(3)", "formula_coordinates": [3.0, 367.2, 530.04, 188.75, 34.0]}, {"formula_id": "formula_7", "formula_text": "R(dt|di) = \u2212KL(\u03b8 dt , \u03b8 d i ) (4) = \u2212 \u00a2 w i P (wi|\u03b8 dt )log( P (wi|\u03b8 d i ) P (wi|\u03b8 dt ) (5)", "formula_coordinates": [3.0, 348.0, 683.04, 207.95, 38.35]}, {"formula_id": "formula_8", "formula_text": "P (wi|d) = tf (wi, d) \u00a1", "formula_coordinates": [4.0, 122.28, 94.32, 90.23, 25.06]}, {"formula_id": "formula_9", "formula_text": "d i ) = \u221e.", "formula_coordinates": [4.0, 257.76, 145.68, 35.14, 10.15]}, {"formula_id": "formula_10", "formula_text": "P \u03bb (wi|d) = tf (wi, d) + \u03bbp(wi) \u00a1 w j (tf (wj, d) + \u03bbp(wj))(6)", "formula_coordinates": [4.0, 98.16, 331.44, 194.75, 25.04]}, {"formula_id": "formula_11", "formula_text": "\u03b8 d = \u03bb d \u03b8 d M LE + \u03bbT \u03b8T M LE + \u03bbE\u03b8E M LE(7)", "formula_coordinates": [4.0, 89.28, 505.08, 203.63, 9.02]}, {"formula_id": "formula_12", "formula_text": "\u03bb d + \u03bbT + \u03bbE = 1.", "formula_coordinates": [4.0, 80.39, 521.88, 74.4, 9.02]}, {"formula_id": "formula_13", "formula_text": "\u03bbE + \u03bbT + \u03bb d core = 1.", "formula_coordinates": [4.0, 343.43, 331.56, 91.2, 9.02]}, {"formula_id": "formula_14", "formula_text": "R(dt|di) = KL(\u03b8 dt core , \u03b8 d i core ) (9)", "formula_coordinates": [4.0, 365.76, 452.16, 190.18, 10.15]}, {"formula_id": "formula_15", "formula_text": "\u03b8 * d core = argmax \u03b8 d core P (d|\u03b8E, \u03b8T , \u03b8 d core , \u03bbE, \u03bbT , \u03bb d core ) (10)", "formula_coordinates": [4.0, 316.8, 503.96, 249.7, 11.38]}, {"formula_id": "formula_16", "formula_text": "then RT hreshold = R(dt) else RT hreshold = RT hreshold \u2212 RT hreshold\u2212R(dt )", "formula_coordinates": [5.0, 76.2, 651.96, 205.43, 21.09]}, {"formula_id": "formula_17", "formula_text": "Redundancy \u2212 P recision = R \u2212 R \u2212 + N \u2212 (11) Redundancy \u2212 Recall = R \u2212 R \u2212 + R + (12) Redundancy \u2212 M istake = R + + N \u2212 R + + N \u2212 + R \u2212 + N + (13) R \u2212 , R + , N \u2212 , N + correspond", "formula_coordinates": [6.0, 316.8, 502.04, 239.02, 85.32]}], "doi": ""}