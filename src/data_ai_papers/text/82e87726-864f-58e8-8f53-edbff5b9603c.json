{"title": "3D Registration with Maximal Cliques", "authors": "Xiyu Zhang; Jiaqi Yang; Shikun Zhang; Yanning Zhang", "pub_date": "2023-05-18", "abstract": "As a fundamental problem in computer vision, 3D point cloud registration (PCR) aims to seek the optimal pose to align a point cloud pair. In this paper, we present a 3D registration method with maximal cliques (MAC). The key insight is to loosen the previous maximum clique constraint, and mine more local consensus information in a graph for accurate pose hypotheses generation: 1) A compatibility graph is constructed to render the affinity relationship between initial correspondences. 2) We search for maximal cliques in the graph, each of which represents a consensus set. We perform node-guided clique selection then, where each node corresponds to the maximal clique with the greatest graph weight. 3) Transformation hypotheses are computed for the selected cliques by the SVD algorithm and the best hypothesis is used to perform registration. Extensive experiments on U3M, 3DMatch, 3DLoMatch and KITTI demonstrate that MAC effectively increases registration accuracy, outperforms various state-of-the-art methods and boosts the performance of deep-learned methods. MAC combined with deep-learned methods achieves stateof-the-art registration recall of 95.7% / 78.9% on 3DMatch / 3DLoMatch.", "sections": [{"heading": "Introduction", "text": "Point cloud registration (PCR) is an important and fundamental problem in 3D computer vision and has a wide range of applications in localization [13], 3D object detection [17] and 3D reconstruction [25]. Given two 3D scans of the same object (or scene), the goal of PCR is to estimate a six-degree-of-freedom (6-DoF) pose transformation that accurately aligns the two input point clouds. Using pointto-point feature correspondences is a popular and robust solution to the PCR problem. However, due to the limitations of existing 3D keypoint detectors & descriptors, the limited overlap between point clouds and data noise, corre- spondences generated by feature matching usually contain outliers, resulting in great challenges to accurate 3D registration.\nThe problem of 3D registration by handling correspondences with outliers has been studied for decades. We classify them into geometric-only and deep-learned methods. For geometric-only methods [5,6,21,31,32,[39][40][41][42], random sample consensus (RANSAC) and its variants perform an iterative sampling strategy for registration. Although RANSAC-based methods are simple and efficient, their performance is highly vulnerable when the outlier rate increases, and it requires a large number of iterations to obtain acceptable results. Also, a series of global registration methods based on branch-and-bound (BnB) are proposed to search the 6D parameter space and obtain the optimal global solution. The main weakness of these methods is the high computational complexity, especially when the correspondence set is of a large magnitude and has an extremely high outlier rate. For deep-learned methods, some [1-4, 9, 10, 14, 16, 18, 19, 27, 36] focus on improving one module in the registration process, such as investigating more discriminate keypoint feature descriptors or more effective correspondence selection techniques, while the others [22,30,44] focus on registration in an end-to-end manner. However, deep-learned based methods require a large amount of data for training and usually lack generalization on different datasets. At present, it is still very challenging to achieve accurate registrations in the presence of heavy outliers and in cross-dataset conditions.\nIn this paper, we propose a geometric-only 3D registration method based on maximal cliques (MAC). The key insight is to loosen the previous maximum clique constraint, and mine more local consensus information in a graph to generate accurate pose hypotheses. We first model the initial correspondence set as a compatibility graph, where each node represents a single correspondence and each edge between two nodes indicates a pair of compatible correspondences. Second, we search for maximal cliques in the graph and then use node-guided clique filtering to match each graph node with the appropriate maximal clique containing it. Compared with the maximum clique, MAC is a looser constraint and is able to mine more local information in a graph. This helps us to achieve plenty of correct hypotheses from a graph. Finally, transformation hypotheses are computed for the selected cliques by the SVD algorithm. The best hypothesis is selected to perform registration using popular hypothesis evaluation metrics in the RANSAC family. To summarize, our main contributions are as follows:\n\u2022 We introduce a hypothesis generation method named MAC. Our MAC method is able to mine more local information in a graph, compared with the previous maximum clique constraint. We demonstrate that hypotheses generated by MAC are of high accuracy even in the presence of heavy outliers.\n\u2022 Based on MAC, we present a novel PCR method, which achieves state-of-the-art performance on U3M, 3DMatch, 3DLoMatch and KITTI datasets. Notably, our geometric-only MAC method outperforms several state-of-the-art deep learning methods [3,9,19,27]. MAC can also be inserted as a module into multiple deep-learned frameworks [1,10,18,30,44] to boost their performance. MAC combined with GeoTransformer achieves the state-of-the-art registration recall of 95.7% / 78.9% on 3DMatch / 3DLoMatch.", "publication_ref": ["b12", "b16", "b24", "b4", "b5", "b20", "b30", "b31", "b38", "b39", "b40", "b41", "b21", "b29", "b43", "b2", "b8", "b18", "b26", "b0", "b9", "b17", "b29", "b43"], "figure_ref": [], "table_ref": []}, {"heading": "Related Work", "text": "", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Geometric-only PCR Methods", "text": "Various geometric-only methods [6,8,20,37,46] have been proposed recently. Typically, RANSAC and its variants [5,13,31,32,[39][40][41] remain the dominant approaches to the problem of estimating a 6-DoF pose from correspondences. RANSAC iteratively samples correspondences from the initial set, generating and evaluating geometric estimations for each subset until a satisfactory solution is obtained. Efficient and robust evaluation metrics are extremely important for using RANSAC to achieve accurate registration. To address the current problems of timeconsuming and noise-sensitive evaluation metrics, [41] analyzes the contribution of inliers and outliers during the computation and proposed several metrics that can effectively improve the registration performance of RANSAC. A large number of variants have also been proposed to achieve further improvement. For example, Rusu et al. [32] presented the simple consensus-based initial alignment (SAC-IA) method, which samples correspondences spread out on the point cloud and leverages the Huber penalty for evaluation. Graph cut RANSAC (GC-RANSAC) [5] uses the graph-cut algorithm before model re-fitting in the local optimization step. Compatibility-guided sample consensus (CG-SAC) [31] additionally considers the normal information of key points during the sampling process. Yang et al. [40] proposed the sample consensus by sampling compatibility triangles (SAC-COT) method, which generates estimations by ranking and sampling ternary loops from the compatibility graph. Although many previous efforts have been made, these methods suffer from low time efficiency and limited accuracy in cases with high outlier rates.\nA series of globally optimal methods based on BnB have been proposed recently. Yang et al. [42] proposed globally optimal ICP (GO-ICP), which rationalizes the planning of ICP update tasks at different stages, and its biggest advantage is that it minimizes the local optimum. Bustos and Chin [6] presented guaranteed outlier removal (GORE), which calculates the tight lower bound and tight upper bound for each correspondence and reduces the size of correspondence set by rejecting true outliers. Motivated by GORE, Li [21] proposed a polynomial time outlier removal method, which seeks the tight lower and upper bound by calculating the costs of correspondence matrix (CM) and augmented correspondence matrix (ACM). However, BnB techniques are sensitive to the cardinality of the input and are time-consuming for large-scale inputs.", "publication_ref": ["b5", "b7", "b19", "b36", "b45", "b4", "b12", "b30", "b31", "b38", "b39", "b40", "b40", "b31", "b4", "b30", "b39", "b41", "b5", "b20"], "figure_ref": [], "table_ref": []}, {"heading": "Deep-learned PCR Methods", "text": "In addition to geometric-only methods, recent works also adopt deep learning techniques to perform PCR. Some methods aim to detect more repeatable keypoints [4,18] and extract more descriptive features [1,10]. FCGF [10] computes the features in a single pass through a fully convolutional neural network without keypoint detection. D3Feat [4] uses a fully convolutional network to obtain local information of point clouds and a joint learning framework to achieve 3D local feature detection and description. Predator [18] applies an attention mechanism to extract salient points in overlapping regions of the point clouds, thus achieving robust registration in the presence of low overlap rates. Spinnet [1] extracts local features which are rotationally invariant and sufficiently informative to enable accurate registration. Some methods [3,9,14,27] focus on efficiently distinguishing correspondences as inliers and outliers. Deep global registration (DGR) [9] and 3DReg-Net [27] classify a given correspondence by training endto-end neural networks and using operators such as sparse convolution and point-by-point MLP. PointDSC [3] explicitly explores spatial consistency for removing outlier correspondences and 3D point cloud registration. Fu et al. [14] proposed a registration framework that utilizes deep graph matching (RGM) that can find robust and accurate pointto-point correspondences. More recently, several methods [30,44] follow the detection-free methods and estimate the transformation in an end-to-end way. CoFiNet [44] extracts correspondences from coarse to fine without keypoint detection. GeoTransformer [30] learns geometric features for robust superpoint matching and is robust in low-overlap cases and invariant to rigid transformation.\nWhile deep learning techniques have demonstrated a great potential for PCR, these methods require a large amount of training data and their generalization is not always promising. By contrast, MAC does not require any training data and achieves more advanced performance than several deep-learned methods. Moreover, MAC can be served as a drop-on module in deep learning frameworks to boost their performance.", "publication_ref": ["b3", "b17", "b0", "b9", "b9", "b3", "b17", "b0", "b2", "b8", "b13", "b26", "b8", "b26", "b2", "b13", "b29", "b43", "b43", "b29"], "figure_ref": [], "table_ref": []}, {"heading": "MAC", "text": "", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Problem Formulation", "text": "For two point clouds P s and P t to be aligned, we first extract local features for them using geometric or learned descriptors. Let p s and p t denote the points in the P s and P t , respectively. An initial correspondence set C initial = {c} is formed by matching feature descriptors, where c = (p s , p t ). MAC estimates the 6-DoF pose transformation between P s and P t from C initial .\nOur method is technically very simple, and its pipeline is shown in Fig. 2.", "publication_ref": [], "figure_ref": ["fig_1"], "table_ref": []}, {"heading": "Graph Construction", "text": "The graph space can more accurately depict the affinity relationship between correspondences than the Euclidean space. Therefore, we model the initial correspondences as a compatibility graph, where correspondences are represented by nodes and edges link nodes that are geometrically compatible. Here, we consider two approaches to construct a compatibility graph.\n\u2022 First Order Graph. The first order graph (FOG) is constructed based on the rigid distance constraint between the correspondence pair (c i , c j ), which can be quantitatively measured as:\nS dist (c i , c j ) = p s i \u2212 p s j \u2212 p t i \u2212 p t j .(1)\nThe compatibility score between c i and c j is given as:\nS cmp (c i , c j ) = exp(\u2212 S dist (c i , c j ) 2 2d 2 cmp ),(2)\nwhere d cmp is a distance parameter. Notably, if S cmp (c i , c j ) is greater than a threshold t cmp , c i and c j form an edge e ij and S cmp (c i , c j ) is the weight of e ij , otherwise S cmp (c i , c j ) will be set to 0. Since the compatibility graph is undirected, the weight matrix W F OG is symmetric.\n\u2022 Second Order Graph. The previous study [8] proposes a second order compatibility measure, which relates to the number of commonly compatible correspondences in the global set. The second order graph (SOG) evolves from FOG. The weight matrix W SOG can be calculated as:\nW SOG = W F OG \u2299 (W F OG \u00d7 W F OG ),(3)\nwhere \u2299 represents the element-wise product between two matrices.\nBoth graph construction methods can adapt to our frameworks. Compared with FOG, 1) SOG has stricter edge construction conditions and a higher degree of compatibility with adjacent nodes; 2) SOG is sparser, which facilitates a more rapid search of cliques. In Sec. 4.5, we experimentally compare FOG and SOG in our MAC framework.", "publication_ref": ["b7"], "figure_ref": [], "table_ref": []}, {"heading": "Search Maximal Cliques", "text": "", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Given an undirected graph", "text": "G = (V, E), clique C = (V \u2032 , E \u2032 ), V \u2032 \u2286 V, E \u2032 \u2286 E is a subset of G, in\nwhich any two nodes are connected by edges. A maximal clique is a clique that cannot be extended by adding any nodes. In particular, the maximal clique with the most nodes is the maximum clique of a graph. Searching for Maximal cliques. To generate hypotheses, RANSAC-based methods repeatedly take random samples from the correspondence set. Nevertheless, they fail to fully mine the affinity relationships between correspondences. Theoretically, inliers would form cliques in the graph, because inliers are usually geometrically compatible with each other. Previous works [23,24,28,37] focus on searching for maximum cliques in the graph, however, the maximum clique is a very tight constraint that only focuses on the global consensus information in a graph. Instead, we loosen the constraint and leverage maximal cliques to mine more local graph information.\nBy using the igraph maximal cliques function in the igraph 1 C++ library, which makes use of a modified Bron-Kerbosch algorithm [12], the search of maximal cliques can be very efficient. The process's worst time complexity is O(d(n \u2212 d)3 (d/3) ), where d is the degeneracy of the graph. Note that d is typically small in our problem because the graph is usually sparse when dealing with point cloud correspondences. Node-guided Clique Selection. After executing the maximal clique searching procedure, we obtain the maximal clique set MAC initial . In practice, MAC initial usually contains tens of thousands of maximal cliques, which will make it very time-consuming if we consider all maximal cliques. We introduce a node-guided clique selection method in this section to reduce |MAC initial |. First, we calculate the weight for each clique in MAC initial . Given a clique C i = (V i , E i ), the weight w Ci is calculated as:\nw Ci = ej \u2208Ei w ej ,(4)\nwhere w ej represents the weight of edge e j in W SOG . A node may be included by multiple maximal cliques and we 1 https://igraph.org only retain the one with the greatest weight for that node. Then, duplicated cliques are removed from the rest, obtaining MAC selected . The motivation behind this is to use information about the local geometric structure around graph nodes to find the best consistent set of corresponding nodes.\nIt is clear that the number of maximal cliques |MAC selected | will not exceed |V|. We could send these maximal cliques directly to the following stages for 3D registration. However, when |V| is quite large, the number of retained maximal cliques can still be very large. Here, we propose several techniques to further filter the maximal cliques.\n\u2022 Normal consistency. In the maximal cliques, we find that the normal consistency is satisfied between each correspondence. Given two correspondences c i = (p s i , p t i ), c j = (p s j , p t j ) and the normal vectors n s i , n s j , n t i , n t j at the four points, the angular difference \u03b1 s ij = \u2220(n s i , n s j ), \u03b1 t ij = \u2220(n t i , n t j ) between the normal vectors can be calculated then. The following inequality ought to hold if c i and c j are normal consistent:\nsin\u03b1 s ij \u2212 sin\u03b1 t ij < t \u03b1 ,(5)\nwhere t \u03b1 is a threshold for determining whether the angular differences are similar.\n\u2022 Clique ranking. We organize MAC selected in a descending order using the clique's weight w Ci . The top-K ones are supposed to be more likely to produce correct hypotheses. This makes it flexible to control the number of hypotheses.\nThese techniques' experimental analysis is presented in Sec. 4.5.", "publication_ref": ["b22", "b23", "b27", "b36", "b0", "b11"], "figure_ref": [], "table_ref": []}, {"heading": "Hypothesis Generation and Evaluation", "text": "Each maximal clique filtered from the previous step represents a consistent set of correspondences. By applying the SVD algorithm to each consistency set, we can obtain a set of 6-DoF pose hypotheses.\n\u2022 Instance-equal SVD. Transformation estimation of correspondences is often implemented with SVD. Instance-equal means that the weights of all correspondences are equal.\n\u2022 Weighted SVD. Assigning weights to correspondences is commonly adopted by recent PCR methods [8,9,27,30]. Correspondence weights can be derived by solving the eigenvectors of a compatibility matrix constructed for a compatibility graph. Here, we take the primary eigenvalues of W SOG as correspondence weights.\nThe final goal of MAC is to estimate the optimal 6-DoF rigid transformation (composed of a rotation pose R * \u2208 SO(3) and a translation pose t * \u2208 R 3 ) that maximizes the objective function as follow:\n(R * , t * ) = arg max R,t N i=1 s(c i ),(6)\nwhere c i \u2208 C initial , N = |C initial |, and s(c i ) represents the score of c i . We consider several RANSAC hypothesis evaluation metrics here [41], including mean average error (MAE), mean square error (MSE) and inlier count. Their behaviors will be experimentally compared in Sec. 4.5. The best hypothesis is taken to perform 3D registration then.", "publication_ref": ["b7", "b8", "b26", "b29", "b40"], "figure_ref": [], "table_ref": []}, {"heading": "Experiments", "text": "", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Experimental Setup", "text": "Datasets. We consider four datasets, i.e, the objectscale dataset U3M [26], the scene-scale indoor datasets 3DMatch [45] & 3DLoMatch [18], and the scene-scale outdoor dataset KITTI [15]. U3M has 496 point cloud pairs. 3DLoMatch is the subset of 3DMatch, where the overlap rate of the point cloud pairs ranges from 10% to 30%, which is very challenging. For KITTI, we follow [3,8] and obtain 555 pairs of point clouds for testing. Evaluation Criteria. We follow [40] that employs the root mean square error (RMSE) metric to evaluate the 3D point cloud registration performance on the U3M object-scale dataset. In addition, we employ the rotation error (RE) and translation error (TE) to evaluate the registration results on the scene-scale dataset. By referring to the settings in [9], the registration is considered successful when the RE \u2264 15\u00b0, TE \u2264 30 cm on 3DMatch & 3DLoMatch datasets, and RE \u2264 5\u00b0, TE \u2264 60 cm on KITTI dataset. We define a dataset's registration accuracy as the ratio of success cases to the number of point cloud pairs to be registered. Implementation Details. Our method is implemented in C++ based on the point cloud library (PCL) [33] and igraph library. For U3M, we use the Harris3D (H3D) [34] keypoint detector and the signatures of histograms of orientation (SHOT) [35] descriptor for initial correspondence generation as in [43]. For 3DMatch and 3DLoMatch datasets, we use the fast point features histograms (FPFH) [32] descriptor and fully convolutional geometric features (FCGF) [10] descriptor to generate the initial correspondence set. ", "publication_ref": ["b25", "b44", "b17", "b14", "b2", "b7", "b39", "b8", "b32", "b33", "b34", "b42", "b31", "b9"], "figure_ref": [], "table_ref": []}, {"heading": "Results on U3M Dataset", "text": "We perform an extensive comparison in Fig. 3. Here, the following methods are tested, including SAC-COT [40], OSAC [38], SAC-IA [32], RANSAC [13], SC 2 -PCR [8], FGR [46], GO-ICP [42], and PPF [11], where the former four are RANSAC-based methods. The RMSE threshold is varied from 0.5 pr to 5 pr with a step of 0.5 pr.\nThe results indicate that MAC performs best and significantly outperforms all tested RANSAC-fashion estimators, such as SAC-COT, OSAC, SAC-IA, and RANSAC. The registration performance of MAC based on the MAE evaluation metric is the best on U3M.   [20], FGR [46], RANSAC [13], TEASER++ [37], CG-SAC [31], SC 2 -PCR [8], 3DRegNet [27], DGR [9], DHVR [19] and PointDSC [3]. Results are shown in Tables 1 and 2.\nThe following conclusions can be made: 1) regardless of which descriptor is used, MAC outperforms all compared methods on both 3DMatch and 3DLoMatch datasets, indicating its strong ability to register indoor scene point clouds; 2) even compared with deep-learned methods, MAC still achieves better performance without any data training; 3) in addition to the registration recall (RR) metric, MAC achieves the best RE and TE metrics. This indicates that registrations by MAC are very accurate and MAC is able to align low overlapping data. Boosting deep-learned methods with MAC. Several kinds of state-of-the-art deep-learned methods are integrated with MAC for evaluation. The considered methods are FCGF [10], SpinNet [1], Predator [18], CoFiNet [44] and Geo-Transformer [30]. Each method is tested under a different number of samples, which refer to the number of sampled points or correspondences. Results are reported in Table 3.\nRemarkably, MAC dramatically improves the registration recall under all tested methods on both 3DMatch and 3DLoMatch datasets. Notably, the performance of Spin-Net, Predator and CoFiNet after boosting by MAC exceeds ", "publication_ref": ["b39", "b37", "b31", "b12", "b7", "b45", "b41", "b10", "b19", "b45", "b12", "b36", "b30", "b7", "b26", "b8", "b18", "b2", "b9", "b0", "b17", "b43", "b29"], "figure_ref": [], "table_ref": ["tab_0", "tab_2"]}, {"heading": "Results on KITTI Dataset", "text": "In Table 4, the results of DGR [9], PointDSC [3], TEASER++ [37], RANSAC [13], CG-SAC [31], SC 2 -PCR [8] and MAC are reported for comparison.\nAs shown by the table, in terms of the registration recall performance, MAC presents the best and is tied for the best results with FPFH and FCGF descriptor settings, respectively. MAC also has a lower TE than the state-ofthe-art geometric-only method SC 2 -PCR. Note that outdoor point clouds are significantly sparse and non-uniformly distributed. The registration experiments on the object, indoor scene, and outdoor scene datasets consistently verify that MAC holds good generalization ability in different application contexts.", "publication_ref": ["b8", "b2", "b36", "b12", "b30", "b7"], "figure_ref": [], "table_ref": []}, {"heading": "Analysis Experiments", "text": "In this section, we perform ablation studies and analysis experiments on both 3DMatch and 3DLoMatch datasets. We progressively experiment with the techniques proposed in Sec. 3, and the results are shown in Table 5. The quality of generated hypotheses is analyzed in Table 6. The performance upper bound is studied in Table 7. Table 8 presents the time efficiency analysis of MAC. Performing feature matching selection. Before 3D registration, a popular way is to perform outlier rejection to reduce the correspondence set. Here we employ geometric consistency (GC) [7], which is independent of the feature space and associates the largest consistent cluster relating to the compatibility among correspondences.\nBy comparing Row 1 and 2 of Table 5, GC has a negative impact on MAC performance, potentially due to that some inliers are also removed in this process. This demonstrates that MAC can still perform well even if the initial correspondence set is directly utilized as input without any filtering. Graph construction choices. We test the performance of MAC by using different graph construction approaches.\nAs shown in Row 1 and 3 of Table 5, the registration recall obtained by using SOG is 1.6% higher than using FOG when combined with FPFH, and 0.06% higher when combined with FCGF on 3DMatch. Also, the registration recall obtained by using SOG is 0.12% higher than using FOG when combined with FPFH, and 0.56% higher when combined with FCGF on 3DLoMatch. Therefore, SOG is more suitable for MAC. Detailed analyzing descriptions can be found in the supplementary. Maximum or maximal clique. To justify the advantages of maximal cliques, we change the search strategy of MAC to the maximum cliques and test the registration performance.\nAs shown in Row 1 and 9 in Table 5, applying maximal cliques surpasses maximum by 9.8% when combined with FPFH, and 5.55% higher when combined with FCGF on 3DMatch. Besides, the registration recall obtained by using maximal cliques is 8.03% higher than using the maximum cliques when combined with FPFH and 10.45% higher when combined with FCGF on 3DLoMatch. There are several reasons for this: 1) maximal cliques include the maximum cliques and additionally consider local graph constraints, so the search for maximal cliques can make use of both local and global information in the compatibility graph; 2) the maximum clique is a very tight constraint which requires maximizing the number of mutually compatible correspondences, but it does not guarantee the opti-mal result. Node-guided clique selection. We compare the performance with and without node-guided (NG) clique selection for maximal cliques search.\nComparing Row 1 and 4 in Table 5, using NG achieves a recall improvement of 0.37% when combined with FPFH, and 0.5% improvement when combined with FCGF on 3DMatch. Also, using NG achieves a recall improvement of 0.23% with FPFH and 0.73% improvement with FCGF on 3DLoMatch. It is worth noting that while NG improves recall, the mean RE and mean TE are also decreasing. For example, NG reduces the mean RE by 0.1\u00b0and the mean TE by 0.11 cm with FPFH on 3DLoMatch. NG effectively reduces the number of calculations in the subsequent steps and promises accurate hypotheses. Different approaches for clique filtering. We test the effectiveness of the two filtering methods, normal consistency and clique ranking.\n1) Normal consistency: comparing Row 1 and 8 in Table 5, NC slightly degrades MAC's performance. 2) Clique ranking: Row 10 to 14 demonstrate that the registration recall tends to increase as K increases, suggesting that larger K yields a subset of cliques that generate more correct hypotheses. Remarkably, setting K to 100 can already achieve outstanding performance. Employing instance-equal or weighted SVD. The comparisons of instance-equal and weighted SVD are shown in Rows 1 and 5 of Table 5  Weighted SVD is slightly inferior to instance-equal SVD. This suggests that samples in MACs are already very consistent, indicating no additional weighting strategies are required.\nVarying hypothesis evaluation metrics. Here we compare three evaluation metrics, including MAE, MSE and inlier count, for MAC hypothesis evaluation.\nAs shown in Row 1, 6 and 7, MAC with MAE achieves the best performance. In Table 5, MAE achieves a recall improvement of 0.24% when combined with FPFH, and 0.31% improvement when combined with FCGF on 3DMatch compared with the commonly used inlier count metric. Also, MAE has a 1.74% improvement when combined with FPFH, and 0.05% when combined with FCGF on 3DLoMatch compared with inlier count. MAE is also very effective in reducing RE and TE. For instance, MAE reduces the mean RE by 0.35\u00b0and the mean TE by 0.49 cm with FPFH on 3DLoMatch. Comparison with RANSAC hypotheses. We evaluate the quality of the generated hypotheses by comparing the hypotheses from RANSAC and MAC with the ground truth transformation. The results are shown in Table 6.\nCompared to RANSAC, which randomly selects correspondences and generates hypotheses from the correspondence set without geometric constraints, MAC effectively generates more convincing hypotheses from maximal cliques in the compatibility graph, which fully exploits the consensus information in the graph. The performance upper bound of MAC. Given an ideal hypothesis evaluation metric, allowing a point cloud pair can be aligned as long as correct hypotheses can be generated. This can test the performance upper bound of MAC. We vary the judging threshold for the number of generated correct hypotheses and report the results in Table 7.  Impressively, MAC-1 achieves registration recalls of 98.46% / 91.24% on 3DMatch / 3DLoMatch. This indicates that even on low overlapping datasets, MAC is able to produce correct hypotheses for most point cloud pairs. In addition, we can deduce that MAC's performance can be further improved with better hypothesis evaluation metrics. Time consumption of MAC. We employ Predator [18] to generate correspondences with different magnitudes to test the time performance of MAC. The time consumption is reported in Table 8.\nThe following observations can be made. 1) In general, MAC can complete 3D registration in only tens of milliseconds when the number of correspondences is smaller than 1000. Even with an input with 2500 correspondences, the time consumption is about 0.29 seconds. Note that MAC is implemented on the CPU only. 2) As the number of correspondences increases from 250 to 2500, there is an increase in time cost for graph construction due to W SOG computation taking more time. 3) When the number of correspondences reaches 5000, there is a large rise in the time cost of MAC's registration. The significant increase in the input size makes the search for maximal cliques more timeconsuming. However, MAC is not sensitive to the cardinality of the input correspondence set, as verified in Table 3. Hence, using sparse inputs for MAC can produce outstanding performance while making registration efficient.", "publication_ref": ["b6", "b17"], "figure_ref": [], "table_ref": ["tab_4", "tab_6", "tab_8", "tab_4", "tab_4", "tab_4", "tab_4", "tab_4", "tab_4", "tab_6", "tab_8", "tab_2"]}, {"heading": "Conclusion", "text": "In this paper, we presented MAC to solve PCR by using the maximal clique constraint to generate precise pose hypotheses from correspondences. Our method achieves state-of-the-art performance on all tested datasets and can adapt to deep-learned methods to boost their performance. Limitation. As shown in Table 7 and Table 1, MAC produces accurate hypotheses but may fail to find them. In the future, we plan to develop a more convincing hypothesis evaluation technique utilizing semantic information.", "publication_ref": [], "figure_ref": [], "table_ref": ["tab_0"]}, {"heading": "3D Registration with Maximal Cliques", "text": "Supplementary Material  As shown in Fig. 4: 1) SOG considers the commonly compatible matches in the global set of the matched pairs rather than only the geometric consistency, making it more consistent and more robust in the case of high outlier rates; 2) SOG is sparser than FOG, and therefore beneficial in making the search of cliques more rapid.", "publication_ref": [], "figure_ref": ["fig_3"], "table_ref": []}, {"heading": "A. Comparison of FOG and SOG", "text": "The weights of the edge e ij = (c i , c j ) in the FOG are transformed as follows to obtain the corresponding secondorder weights:\nw SOG (e ij ) = w F OG (e ij )\u2022 e ik \u2208E e jk \u2208E\nw F OG (e ik ) \u2022 w F OG (e jk ) .", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "(7)", "text": "If no remaining nodes form edges with both c i and c j , w SOG (e ij ) will be 0, which demonstrates that e ij will be removed from SOG then. In Fig. 4(b), the four edges e 12 , e 56 , e 78 and e 89 are removed, and the whole graph is divided into subgraphs that contain several cliques naturally.", "publication_ref": [], "figure_ref": ["fig_3"], "table_ref": []}, {"heading": "B. Additional Experiments", "text": "The information of all tested datasets is presented in Table 9. Results on ETH. Additionally, we also test our method on the outdoor dataset ETH [29], which contains more complex geometries compared with 3DMatch [45]. FPFH [32], FCGF [10], and Spinnet [1] are employed to generate correspondences, from which registration will then be performed by RANSAC-50K and MAC. The number of sampled points or correspondences is set to 5000. Registration is considered successful when the RE \u2264 15\u00b0and TE \u2264 30 cm. The quality of generated correspondence and registration results are reported in Table 10  The results suggest that when a defect in a descriptor leads to a very low inlier rate for generating the correspondence set, MAC is still effective in finding the accurate consistent subset from it, thus greatly boosting the registration recall. The registration recall obtained by using MAC is 24.2% higher than RANSAC when combined with FPFH, and 18.51% higher when combined with FCGF.", "publication_ref": ["b28", "b44", "b31", "b9", "b0"], "figure_ref": [], "table_ref": ["tab_10", "tab_0"]}, {"heading": "Dataset", "text": "Data type Nuisances Application scenario # Matching pairs U3M [26] Object Limited overlap, self-occlusion Registration 496 3DMatch [45] Indoor scene Occlusion, real noise Registration 1623 3DLoMatch [18] Indoor scene Limited overlap, occlusion, real noise Registration 1781 KITTI [15] Outdoor scene Clutter, occlusion, real noise Detection, registration, segmentation 555 ETH [29] Outdoor scene Limited overlap, clutter, occlusion, real noise Feature description, registration 713 ", "publication_ref": ["b25", "b44", "b17", "b14", "b28"], "figure_ref": [], "table_ref": []}, {"heading": "C. Visualizations", "text": "We show more registration results in Figs. 5-8.  ", "publication_ref": [], "figure_ref": ["fig_4"], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Spinnet: Learning a general surface descriptor for 3d point cloud registration", "journal": "", "year": "2006", "authors": "Sheng Ao; Qingyong Hu; Bo Yang; Andrew Markham; Yulan Guo"}, {"ref_id": "b1", "title": "Pointnetlk: Robust & efficient point cloud registration using pointnet", "journal": "", "year": "2019", "authors": "Yasuhiro Aoki; Hunter Goforth; Simon Rangaprasad Arun Srivatsan;  Lucey"}, {"ref_id": "b2", "title": "Pointdsc: Robust point cloud registration using deep spatial consistency", "journal": "IEEE", "year": "2006", "authors": "Xuyang Bai; Zixin Luo; Lei Zhou; Hongkai Chen; Lei Li; Zeyu Hu; Hongbo Fu; Chiew-Lan Tai"}, {"ref_id": "b3", "title": "Joint learning of dense detection and description of 3d local features", "journal": "", "year": "2020", "authors": "Xuyang Bai; Zixin Luo; Lei Zhou; Hongbo Fu; Long Quan; Chiew-Lan Tai"}, {"ref_id": "b4", "title": "Graph-cut ransac", "journal": "", "year": "2005", "authors": "Daniel Barath; Ji\u0159\u00ed Matas"}, {"ref_id": "b5", "title": "Guaranteed outlier removal for point cloud registration with correspondences", "journal": "IEEE Transactions on Pattern Analysis and Machine Intelligence", "year": "2017", "authors": "Alvaro Parra Bustos; Tat-Jun Chin"}, {"ref_id": "b6", "title": "3d free-form object recognition in range images using local surface patches", "journal": "Pattern Recognition Letters", "year": "2007", "authors": "Hui Chen; Bir Bhanu"}, {"ref_id": "b7", "title": "Sc2-pcr: A second order spatial compatibility for efficient and robust point cloud registration", "journal": "", "year": "2006", "authors": "Zhi Chen; Kun Sun; Fan Yang; Wenbing Tao"}, {"ref_id": "b8", "title": "Deep global registration", "journal": "IEEE", "year": "2006", "authors": "Christopher Choy; Wei Dong; Vladlen Koltun"}, {"ref_id": "b9", "title": "Fully convolutional geometric features", "journal": "", "year": "2005", "authors": "Christopher Choy; Jaesik Park; Vladlen Koltun"}, {"ref_id": "b10", "title": "Model globally, match locally: Efficient and robust 3d object recognition", "journal": "IEEE", "year": "2010", "authors": "Bertram Drost; Markus Ulrich; Nassir Navab; Slobodan Ilic"}, {"ref_id": "b11", "title": "Listing all maximal cliques in sparse graphs in near-optimal time", "journal": "Springer", "year": "2010", "authors": "David Eppstein; Maarten L\u00f6ffler; Darren Strash"}, {"ref_id": "b12", "title": "Random sample consensus: a paradigm for model fitting with applications to image analysis and automated cartography", "journal": "Communications of the ACM", "year": "1981", "authors": "A Martin; Robert C Fischler;  Bolles"}, {"ref_id": "b13", "title": "Robust point cloud registration framework based on deep graph matching", "journal": "", "year": "2021", "authors": "Kexue Fu; Shaolei Liu; Xiaoyuan Luo; Manning Wang"}, {"ref_id": "b14", "title": "Are we ready for autonomous driving? the kitti vision benchmark suite", "journal": "IEEE", "year": "2012", "authors": "Andreas Geiger; Philip Lenz; Raquel Urtasun"}, {"ref_id": "b15", "title": "The perfect match: 3d point cloud matching with smoothed densities", "journal": "", "year": "2019", "authors": "Zan Gojcic; Caifa Zhou; Jan D Wegner; Andreas Wieser"}, {"ref_id": "b16", "title": "3d object recognition in cluttered scenes with local surface features: A survey", "journal": "IEEE Transactions on Pattern Analysis and Machine Intelligence", "year": "2014", "authors": "Yulan Guo; Mohammed Bennamoun; Ferdous Sohel; Min Lu; Jianwei Wan"}, {"ref_id": "b17", "title": "Predator: Registration of 3d point clouds with low overlap", "journal": "", "year": "2006", "authors": "Shengyu Huang; Zan Gojcic; Mikhail Usvyatsov; Andreas Wieser; Konrad Schindler"}, {"ref_id": "b18", "title": "Deep hough voting for robust global registration", "journal": "", "year": "2006", "authors": "Junha Lee; Seungwook Kim; Minsu Cho; Jaesik Park"}, {"ref_id": "b19", "title": "A spectral technique for correspondence problems using pairwise constraints", "journal": "", "year": "2005", "authors": "Marius Leordeanu;  Hebert"}, {"ref_id": "b20", "title": "A practical o (n2) outlier removal method for point cloud registration", "journal": "", "year": "2021", "authors": "Jiayuan Li"}, {"ref_id": "b21", "title": "Lepard: Learning partial point cloud matching in rigid and deformable scenes", "journal": "", "year": "", "authors": "Yang Li; Tatsuya Harada"}, {"ref_id": "b22", "title": "A planted clique perspective on hypothesis pruning", "journal": "IEEE Robotics and Automation Letters", "year": "", "authors": "Muyuan Lin; Varun Murali; Sertac Karaman"}, {"ref_id": "b23", "title": "Kclosest points and maximum clique pruning for efficient and effective 3-d laser scan matching", "journal": "IEEE Robotics and Automation Letters", "year": "2022", "authors": "Yu-Kai Lin; Wen-Chieh Lin; Chieh-Chih Wang"}, {"ref_id": "b24", "title": "Automatic correspondence for 3d modeling: an extensive review", "journal": "International Journal of Shape Modeling", "year": "2005", "authors": "Mohammed Ajmal S Mian; Robyn A Bennamoun;  Owens"}, {"ref_id": "b25", "title": "A novel representation and feature matching algorithm for automatic pairwise registration of range images", "journal": "International Journal of Computer Vision", "year": "2006", "authors": "Mohammed Ajmal S Mian; Robyn A Bennamoun;  Owens"}, {"ref_id": "b26", "title": "3dregnet: A deep neural network for 3d point registration", "journal": "IEEE", "year": "2006", "authors": "Srikumar Dias Pais;  Ramalingam; Jacinto C Venu Madhav Govindu; Rama Nascimento; Pedro Chellappa;  Miraldo"}, {"ref_id": "b27", "title": "A practical maximum clique algorithm for matching with pairwise constraints", "journal": "", "year": "2019", "authors": "Alvaro Parra; Tat-Jun Chin; Frank Neumann; Tobias Friedrich; Maximilian Katzmann"}, {"ref_id": "b28", "title": "Challenging data sets for point cloud registration algorithms", "journal": "The International Journal of Robotics Research", "year": "2012", "authors": "Fran\u00e7ois Pomerleau; Ming Liu; Francis Colas; Roland Siegwart"}, {"ref_id": "b29", "title": "Geometric transformer for fast and robust point cloud registration", "journal": "", "year": "2006", "authors": "Zheng Qin; Hao Yu; Changjian Wang; Yulan Guo; Yuxing Peng; Kai Xu"}, {"ref_id": "b30", "title": "Compatibility-guided sampling consensus for 3-d point cloud registration", "journal": "IEEE Transactions on Geoscience and Remote Sensing", "year": "2006", "authors": "Siwen Quan; Jiaqi Yang"}, {"ref_id": "b31", "title": "Fast point feature histograms (fpfh) for 3d registration", "journal": "IEEE", "year": "2005", "authors": "Nico Radu Bogdan Rusu; Michael Blodow;  Beetz"}, {"ref_id": "b32", "title": "3d is here: Point cloud library (pcl)", "journal": "IEEE", "year": "2011", "authors": "Bogdan Radu; Steve Rusu;  Cousins"}, {"ref_id": "b33", "title": "Harris 3d: a robust extension of the harris operator for interest point detection on 3d meshes. The Visual Computer", "journal": "", "year": "2011", "authors": "Ivan Sipiran; Benjamin Bustos"}, {"ref_id": "b34", "title": "Unique signatures of histograms for local surface description", "journal": "Springer", "year": "2010", "authors": "Federico Tombari; Samuele Salti; Luigi Di Stefano"}, {"ref_id": "b35", "title": "You only hypothesize once: Point cloud registration with rotation-equivariant descriptors", "journal": "", "year": "", "authors": "Haiping Wang; Yuan Liu; Zhen Dong; Wenping Wang"}, {"ref_id": "b36", "title": "Teaser: Fast and certifiable point cloud registration", "journal": "IEEE Transactions on Robotics", "year": "2006", "authors": "Heng Yang; Jingnan Shi; Luca Carlone"}, {"ref_id": "b37", "title": "A fast and robust local descriptor for 3d point cloud registration", "journal": "Information Sciences", "year": "2016", "authors": "Jiaqi Yang; Zhiguo Cao; Qian Zhang"}, {"ref_id": "b38", "title": "Correspondence selection with loose-tight geometric voting for 3d point cloud registration", "journal": "IEEE Transactions on Geoscience and Remote Sensing", "year": "2022", "authors": "Jiaqi Yang; Jiahao Chen; Siwen Quan; Wei Wang; Yanning Zhang"}, {"ref_id": "b39", "title": "Sac-cot: Sample consensus by sampling compatibility triangles in graphs for 3-d point cloud registration", "journal": "IEEE Transactions on Geoscience and Remote Sensing", "year": "2005", "authors": "Jiaqi Yang; Zhiqiang Huang; Siwen Quan; Zhaoshuai Qi; Yanning Zhang"}, {"ref_id": "b40", "title": "Toward efficient and robust metrics for ransac hypotheses and 3d rigid registration", "journal": "IEEE Transactions on Circuits and Systems for", "year": "2005", "authors": "Jiaqi Yang; Zhiqiang Huang; Siwen Quan; Qian Zhang; Yanning Zhang; Zhiguo Cao"}, {"ref_id": "b41", "title": "Go-icp: A globally optimal solution to 3d icp pointset registration", "journal": "IEEE Transactions on Pattern Analysis and Machine Intelligence", "year": "2005", "authors": "Jiaolong Yang; Hongdong Li; Dylan Campbell; Yunde Jia"}, {"ref_id": "b42", "title": "Ranking 3d feature correspondences via consistency voting", "journal": "Pattern Recognition Letters", "year": "2019", "authors": "Jiaqi Yang; Yang Xiao; Zhiguo Cao; Weidong Yang"}, {"ref_id": "b43", "title": "Cofinet: Reliable coarse-to-fine correspondences for robust pointcloud registration", "journal": "", "year": "2006", "authors": "Hao Yu; Fu Li; Mahdi Saleh; Benjamin Busam; Slobodan Ilic"}, {"ref_id": "b44", "title": "Learning local geometric descriptors from rgb-d reconstructions", "journal": "", "year": "2017", "authors": "Andy Zeng; Shuran Song; Matthias Nie\u00dfner; Matthew Fisher; Jianxiong Xiao; Thomas Funkhouser"}, {"ref_id": "b45", "title": "Fast global registration", "journal": "Springer", "year": "2005", "authors": "Qian-Yi Zhou; Jaesik Park; Vladlen Koltun"}], "figures": [{"figure_label": "1", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Figure 1 .1Figure 1. Comparison of maximal and maximum cliques on a low overlapping point cloud pair. Maximal cliques (MAC) effectively choose the optimal 6-DoF transformation hypothesis with low rotation error (RE) and translation error (TE) for two point clouds with a low inlier ratio, while the maximum clique fails in this case.", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Figure 2 .2Figure 2. Pipeline of MAC. 1. Construct a graph for the initial correspondence set. 2. Select a set of maximal cliques from the graph as the consistent sets. 3. Generate and evaluate the hypotheses according to the consistent sets. 4. Select the best hypothesis to perform 3D registration.", "figure_data": ""}, {"figure_label": "4", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Figure 4 .4Figure 4. An example that illustrates the relationship between FOG and SOG. (a) FOG and its weight matrix. (b) SOG and its weight matrix.", "figure_data": ""}, {"figure_label": "5", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "Figure 5 .5Figure 5. Registration process-visualizations of MAC on 3DMatch.", "figure_data": ""}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_0", "figure_caption": "Registration results on 3DMatch dataset.", "figure_data": "60MAC(MAE)MAC(MSE)Registration recall (%)20 30 40 50MAC(# inlier) SC 2 -PCR SAC-COT OSAC SAC-IA RANSAC FGR GO-ICP PPF100.5 011.522.533.544.55RMSE threshold (pr)Figure 3. Registration performance of tested point cloud registra-tion methods on U3M.FPFHFCGFRR(%) RE(\u00b0) TE(cm) RR(%) RE(\u00b0) TE(cm)i) TraditionalSM [20]55.882.948.1586.572.297.07FGR [46]40.914.9610.2578.932.908.41RANSAC-1M [13]64.204.0511.3588.423.059.42RANSAC-4M [13]66.103.9511.0391.442.698.38GC-RANSAC [5]67.652.336.8792.052.337.11TEASER++ [37]75.482.487.3185.772.738.66CG-SAC [31]78.002.406.8987.522.427.66SC 2 -PCR [8]83.732.186.7093.162.096.51ii) Deep learned3DRegNet [27]26.313.759.6077.762.748.13DGR [9]32.842.457.5388.852.287.02DHVR [19]67.102.787.8491.932.257.08PointDSC [3]72.952.186.4591.872.106.54MAC84.101.966.1893.721.896.03"}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "Performance boosting for deep-learned methods when combined with MAC.", "figure_data": ""}, {"figure_label": "5", "figure_type": "table", "figure_id": "tab_4", "figure_caption": "FOG SOG GC MC NG NC CR SVD W-SVD MAE MSE # inlier", "figure_data": "RR(%)RE(\u00b0)TE(cm)"}, {"figure_label": "6", "figure_type": "table", "figure_id": "tab_6", "figure_caption": "Comparison of the number of correct hypotheses generated by MAC and RANSAC on 3DMatch and 3DLoMatch.", "figure_data": "3DMatch3DLoMatchRR(%)RR(%)MAC-198.4691.24MAC-597.1083.32MAC-1096.4377.93MAC-2094.7070.47MAC-5091.1356.37MAC-origin93.7259.85Table 7. Registration recall on 3DMatch with FCGF setting basedon judging MAC's hypotheses. MAC-n: a point cloud pair is con-sidered alignable if at least n hypotheses are correct."}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_7", "figure_caption": "16%) 1579.61 (48.37%) 65.40 (2.00%) 733.38 (22.47%) 3265.42", "figure_data": "# correspondencesGraph ConstructionSearch Maximal CliquesNode-guided Clique SelectionPose EstimationTotal2501.03 (14.55%)5.24 (74.01%)0.58 (8.19%)0.23 (3.25%)7.085004.07 (17.54%)15.67 (67.51%)3.12 (13.44%)0.35 (1.51%)23.21100016.90 (29.85%)36.60 (64.65%)1.88 (3.32%)1.23 (2.18%)56.612500153.92 (53.29%) 104.03 (36.02%)4.97 (1.72%)25.93 (8.97%)288.855000887.03 (27."}, {"figure_label": "8", "figure_type": "table", "figure_id": "tab_8", "figure_caption": "Average consumed time (ms) per point cloud pair on the 3DMatch dataset. Predator is used for generating correspondences.", "figure_data": ""}, {"figure_label": "11", "figure_type": "table", "figure_id": "tab_9", "figure_caption": "and Table 11, respectively. Registration recall (%) boosting for various descriptors combined with MAC on ETH dataset.", "figure_data": "Gazebo Summer Winter Autumn Summer WoodAvg.FPFH [32]0.420.240.210.260.29FCGF [10]2.341.251.351.681.62Spinnet [1]16.6713.7312.2014.6714.40Table 10. Inlier ratio (%) of generated correspondence on ETHdataset.Gazebo Summer Winter Autumn Summer WoodAvg.FPFH [32]16.8510.0310.4310.4011.92FCGF [10]54.3528.0352.1751.2042.78Spinnet [1]98.3783.05100.0099.2092.57FPFH+MAC46.74 29.89\u219127.68 17.65\u219133.04 22.61\u219143.20 32.80\u219136.12 24.20\u2191FCGF+MAC75.54 21.19\u219142.91 14.88\u219171.30 19.13\u219173.60 22.40\u219161.29 18.51\u2191Spinnet+MAC98.91 0.54\u219187.54 4.49\u2191100.00 -100.00 0.80\u219194.67 2.10\u2191"}, {"figure_label": "9", "figure_type": "table", "figure_id": "tab_10", "figure_caption": "Information of all tested datasets. MAC working with Spinnet achieves a registration recall of 94.67% on ETH. Time and memory analysis. Efficiency and memory consumption results of several well-performed methods are shown in Tables12 and 13, respectively. Regarding efficiency experiments, all methods have been tested for ten rounds, and the mean and standard deviation results are reported. All methods were executed in the CPU. The results indicate that MAC is quite lightweight and efficient when the input correspondence number is less than 2.5k. 24\u00b10.81 78.38\u00b10.89 240.46\u00b12.18 1401.97\u00b112.24 5504.11\u00b110.32 TEASER++ 6.40\u00b11.88 6.68\u00b10.66 16.74\u00b11.21 104.24\u00b10.53 484.93\u00b11.87 SC 2 -PCR 19.34\u00b10.63 63.23\u00b10.55 215.98\u00b11.24 1282.73\u00b14.05 5210.17\u00b18.30 MAC 7.32\u00b10.55 23.32\u00b10.38 56.45\u00b11.41 282.67\u00b17.83 3259.38\u00b112.66 Table 12. Comparisons on average time consumption (ms).", "figure_data": "# Corr.250500100025005000PointDSC 32.# Corr.250500100025005000PointDSC3531.46 3538.26 3582.57 3634.22 3736.10TEASER++ 1631.92 1634.77 2029.22 2266.84 2484.83SC 2 -PCR448.01453.18508.40621.27690.22MAC15.5917.4323.4952.79150.86"}], "formulas": [{"formula_id": "formula_0", "formula_text": "S dist (c i , c j ) = p s i \u2212 p s j \u2212 p t i \u2212 p t j .(1)", "formula_coordinates": [3.0, 343.68, 467.9, 201.43, 12.69]}, {"formula_id": "formula_1", "formula_text": "S cmp (c i , c j ) = exp(\u2212 S dist (c i , c j ) 2 2d 2 cmp ),(2)", "formula_coordinates": [3.0, 359.42, 513.97, 185.7, 27.16]}, {"formula_id": "formula_2", "formula_text": "W SOG = W F OG \u2299 (W F OG \u00d7 W F OG ),(3)", "formula_coordinates": [3.0, 345.6, 704.17, 199.51, 9.68]}, {"formula_id": "formula_3", "formula_text": "G = (V, E), clique C = (V \u2032 , E \u2032 ), V \u2032 \u2286 V, E \u2032 \u2286 E is a subset of G, in", "formula_coordinates": [4.0, 50.11, 207.17, 236.25, 20.94]}, {"formula_id": "formula_4", "formula_text": "w Ci = ej \u2208Ei w ej ,(4)", "formula_coordinates": [4.0, 132.61, 639.38, 153.76, 20.08]}, {"formula_id": "formula_5", "formula_text": "sin\u03b1 s ij \u2212 sin\u03b1 t ij < t \u03b1 ,(5)", "formula_coordinates": [4.0, 392.58, 333.13, 152.54, 12.69]}, {"formula_id": "formula_6", "formula_text": "(R * , t * ) = arg max R,t N i=1 s(c i ),(6)", "formula_coordinates": [5.0, 106.65, 132.6, 179.72, 30.32]}, {"formula_id": "formula_7", "formula_text": "w SOG (e ij ) = w F OG (e ij )\u2022 e ik \u2208E e jk \u2208E", "formula_coordinates": [11.0, 50.11, 512.01, 130.28, 27.61]}], "doi": ""}