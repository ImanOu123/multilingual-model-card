{"title": "Linguistic Regularities in Sparse and Explicit Word Representations", "authors": "Omer Levy; Yoav Goldberg", "pub_date": "", "abstract": "Recent work has shown that neuralembedded word representations capture many relational similarities, which can be recovered by means of vector arithmetic in the embedded space. We show that Mikolov et al.'s method of first adding and subtracting word vectors, and then searching for a word similar to the result, is equivalent to searching for a word that maximizes a linear combination of three pairwise word similarities. Based on this observation, we suggest an improved method of recovering relational similarities, improving the state-of-the-art results on two recent word-analogy datasets. Moreover, we demonstrate that analogy recovery is not restricted to neural word embeddings, and that a similar amount of relational similarities can be recovered from traditional distributional word representations.", "sections": [{"heading": "Introduction", "text": "Deep learning methods for language processing owe much of their success to neural network language models, in which words are represented as dense real-valued vectors in R d . Such representations are referred to as distributed word representations or word embeddings, as they embed an entire vocabulary into a relatively low-dimensional linear space, whose dimensions are latent continuous features. The embedded word vectors are trained over large collections of text using variants of neural networks (Bengio et al., 2003;Collobert and Weston, 2008;Mnih and Hinton, 2008;Mikolov et al., 2011;Mikolov et al., 2013b). The word embeddings are designed to capture what Turney ( 2006) calls attributional similarities between vocabulary items: words that appear in similar contexts will be close to each other in the projected space. The effect is grouping of words that share semantic (\"dog cat cow\", \"eat devour\") or syntactic (\"cars hats days\", \"emptied carried danced\") properties, and are shown to be effective as features for various NLP tasks (Turian et al., 2010;Collobert et al., 2011;Socher et al., 2011;Al-Rfou et al., 2013). We refer to such word representations as neural embeddings or just embeddings.\nRecently, Mikolov et al. (2013c) demonstrated that the embeddings created by a recursive neural network (RNN) encode not only attributional similarities between words, but also similarities between pairs of words. Such similarities are referred to as linguistic regularities by Mikolov et al. and as relational similarities by Turney (2006). They capture, for example, the gender relation exhibited by the pairs \"man:woman\", \"king:queen\", the language-spoken-in relation in \"france:french\", \"mexico:spanish\" and the pasttense relation in \"capture:captured\", \"go:went\". Remarkably, Mikolov et al. showed that such relations are reflected in vector offsets between word pairs (apples \u2212 apple \u2248 cars \u2212 car), and that by using simple vector arithmetic one could apply the relation and solve analogy questions of the form \"a is to a * as b is to -\" in which the nature of the relation is hidden. Perhaps the most famous example is that the embedded representation of the word queen can be roughly recovered from the representations of king, man and woman: queen \u2248 king \u2212 man + woman The recovery of relational similarities using vector arithmetic on RNN-embedded vectors was evaluated on many relations, achieving state-of-the-art results in relational similarity identification tasks (Mikolov et al., 2013c;Zhila et al., 2013). It was later demonstrated that relational similarities can be recovered in a similar fashion also from embeddings trained with different architectures (Mikolov et al., 2013a;Mikolov et al., 2013b). This fascinating result raises a question: to what extent are the relational semantic properties a result of the embedding process? Experiments in (Mikolov et al., 2013c) show that the RNN-based embeddings are superior to other dense representations, but how crucial is it for a representation to be dense and low-dimensional at all? An alternative approach to representing words as vectors is the distributional similarity representation, or bag of contexts. In this representation, each word is associated with a very highdimensional but sparse vector capturing the contexts in which the word occurs. We call such vector representations explicit, as each dimension directly corresponds to a particular context. These explicit vector-space representations have been extensively studied in the NLP literature (see (Turney and Pantel, 2010;Baroni and Lenci, 2010) and the references therein), and are known to exhibit a large extent of attributional similarity (Pereira et al., 1993;Lin, 1998;Lin and Pantel, 2001;Sahlgren, 2006;Kotlerman et al., 2010).\nIn this study, we show that similarly to the neural embedding space, the explicit vector space also encodes a vast amount of relational similarity which can be recovered in a similar fashion, suggesting the explicit vector space representation as a competitive baseline for further work on neural embeddings. Moreover, this result implies that the neural embedding process is not discovering novel patterns, but rather is doing a remarkable job at preserving the patterns inherent in the wordcontext co-occurrence matrix.\nA key insight of this work is that the vector arithmetic method can be decomposed into a linear combination of three pairwise similarities (Section 3). While mathematically equivalent, we find that thinking about the method in terms of the decomposed formulation is much less puzzling, and provides a better intuition on why we would expect the method to perform well on the analogy recovery task. Furthermore, the decomposed form leads us to suggest a modified optimization objective (Section 6), which outperforms the state-ofthe-art at recovering relational similarities under both representations.", "publication_ref": ["b4", "b8", "b21", "b16", "b18", "b27", "b9", "b26", "b0", "b19", "b19", "b35", "b17", "b18", "b19", "b29", "b2", "b24", "b15", "b14", "b25", "b12"], "figure_ref": [], "table_ref": []}, {"heading": "Explicit Vector Space Representation", "text": "We adopt the traditional word representation used in the distributional similarity literature (Turney and Pantel, 2010). Each word is associated with a sparse vector capturing the contexts in which it occurs. We call this representation explicit, as each dimension corresponds to a particular context.\nFor a vocabulary V and a set of contexts C, the result is a |V |\u00d7|C| sparse matrix S in which S ij corresponds to the strength of the association between word i and context j. The association strength between a word w \u2208 V and a context c \u2208 C can take many forms. We chose to use the popular positive pointwise mutual information (PPMI) metric: where |corpus| is the number of items in the corpus, f req(w, c) is the number of times word w appeared in context c in the corpus, and f req(w), f req(c) are the corpus frequencies of the word and the context respectively. The use of PMI in distributional similarity models was introduced by Church and Hanks (1990) and widely adopted (Dagan et al., 1994;Turney, 2001). The PPMI variant dates back to at least (Niwa and Nitta, 1994), and was demonstrated to perform very well in Bullinaria and Levy (2007).\nIn this work, we take the linear contexts in which words appear. We consider each word surrounding the target word w in a window of 2 to each side as a context, distinguishing between different sequential positions. For example, in the sentence a b c d e the contexts of the word c are a \u22122 , b \u22121 , d +1 and e +2 . Each vector's dimenstion is thus |C| \u2248 4 |V |. Empirically, the number of non-zero dimensions for vocabulary items in our corpus ranges between 3 (for some rare tokens) and 474,234 (for the word \"and\"), with a mean of 1595 and a median of 415.\nAnother popular choice of context is the syntactic relations the word participates in (Lin, 1998;Pad\u00f3 and Lapata, 2007;Levy and Goldberg, 2014). In this paper, we chose the sequential context as it is compatible with the information available to the state-of-the-art neural embedding method we are comparing against.", "publication_ref": ["b29", "b7", "b10", "b30", "b22", "b6", "b15", "b23", "b13"], "figure_ref": [], "table_ref": []}, {"heading": "Analogies and Vector Arithmetic", "text": "Mikolov et al. demonstrated that vector space representations encode various relational similarities, which can be recovered using vector arithmetic and used to solve word-analogy tasks.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Analogy Questions", "text": "In a word-analogy task we are given two pairs of words that share a relation (e.g. \"man:woman\", \"king:queen\"). The identity of the fourth word (\"queen\") is hidden, and we need to infer it based on the other three (e.g. answering the question: \"man is to woman as king is to -?\"). In the rest of this paper, we will refer to the four words as a:a * , b:b * . Note that the type of the relation is not explicitly provided in the question, and solving the question correctly (by a human) involves first inferring the relation, and then applying it to the third word (b).", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Vector Arithmetic", "text": "Mikolov et al. showed that relations between words are reflected to a large extent in the offsets between their vector embeddings (queen \u2212 king \u2248 woman \u2212 man), and thus the vector of the hidden word b * will be similar to the vector b \u2212 a + a * , suggesting that the analogy question can be solved by optimizing:\narg max b * \u2208V (sim (b * , b \u2212 a + a * ))\nwhere V is the vocabulary excluding the question words b, a and a * , and sim is a similarity measure. Specifically, they used the cosine similarity measure, defined as:\ncos (u, v) = u \u2022 v u v resulting in: arg max b * \u2208V (cos (b * , b \u2212 a + a * )) (1)\nSince cosine is inverse to the angle, high cosine similarity (close to 1) means that the vectors share a very similar direction. Note that this metric normalizes (and thus ignores) the vectors' lengths, unlike the Euclidean distance between them. For reasons that will be clear later, we refer to (1) as the 3COSADD method.\nAn alternative to 3COSADD is to require that the direction of transformation be conserved:\narg max b * \u2208V (cos (b * \u2212 b, a * \u2212 a))(2)\nThis basically means that b * \u2212 b shares the same direction with a * \u2212 a, ignoring the distances. We refer to this method as PAIRDIRECTION. Though it was not mentioned in the paper, Mikolov et al. (2013c) used PAIRDIRECTION for solving the semantic analogies of the SemEval task, and 3COSADD for solving the syntactic analogies. 1", "publication_ref": ["b19"], "figure_ref": [], "table_ref": []}, {"heading": "Reinterpreting Vector Arithmetic", "text": "In Mikolov et al.'s experiments, all word-vectors were normalized to unit length. Under such normalization, the arg max in ( 1) is mathematically equivalent to (derived using basic algebra):\narg max b * \u2208V (cos (b * , b) \u2212 cos (b * , a) + cos (b * , a * ))\n(3) This means that solving analogy questions with vector arithmetic is mathematically equivalent to seeking a word (b * ) which is similar to b and a * but is different from a. Relational similarity is thus expressed as a sum of attributional similarities. While ( 1) and ( 3) are equal, we find the intuition as to why (3) ought to find analogies clearer.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Empirical Setup", "text": "We derive explicit and neural-embedded vector representations, and compare their capacities to recover relational similarities using objectives 3COSADD (eq. 3) and PAIRDIRECTION (eq. 2).\nUnderlying Corpus and Preprocessing Previous reported results on the word analogy tasks using vector arithmetics were obtained using proprietary corpora. To make our experiments reproducible, we selected an open and widely accessible corpus -the English Wikipedia. We extracted all sentences from article bodies (excluding titles, infoboxes, captions, etc) and filtered nonalphanumeric tokens, allowing mid-token symbols as apostrophes, hyphens, commas, and periods. All the text was lowercased. Duplicates and sentences with less than 5 tokens were then removed. Overall, we retained a corpus of about 1.5 billion tokens, in 77.5 million sentences.\nWord Representations To create contexts for both embedding and sparse representation, we used a window of two tokens to each side (5grams, in total), ignoring words that appeared less than 100 times in the corpus. The filtered vocabulary contained 189,533 terms. 2 The explicit vector representations were created as described in Section 2. The neural embeddings were created using the word2vec software 3 accompanying (Mikolov et al., 2013b). We embedded the vocabulary into a 600 dimensional space, using the state-of-the-art skip-gram architecture, the negative-training approach with 15 negative samples (NEG-15), and sub-sampling of frequent words with a parameter of 10 \u22125 . The parameter settings follow (Mikolov et al., 2013b).", "publication_ref": ["b18", "b18"], "figure_ref": [], "table_ref": []}, {"heading": "Evaluation Conditions", "text": "We evaluate the different word representations using the three datasets used in previous work. Two of them (MSR and GOOGLE) contain analogy questions, while the third (SEMEVAL) requires ranking of candidate word pairs according to their relational similarity to a set of supplied word pairs.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Open Vocabulary", "text": "The open vocabulary datasets (MSR and GOOGLE) present questions of the form \"a is to a * as b is to b * \", where b * is hidden, and must be guessed from the entire vocabulary. Performance on these datasets is measured by micro-averaged accuracy.\nThe MSR dataset 4 (Mikolov et al., 2013c) contains 8000 analogy questions. The relations portrayed by these questions are morpho-syntactic, and can be categorized according to parts of speech -adjectives, nouns and verbs. Adjective relations include comparative and superlative (good is to best as smart is to smartest). Noun relations include single and plural, possessive and non-possessive (dog is to dog's as cat is to cat's). Verb relations are tense modifications (work is to worked as accept is to accepted).\nThe GOOGLE dataset 5 (Mikolov et al., 2013a) contains 19544 questions. It covers 14 relation types, 7 of which are semantic in nature and 7 are morpho-syntactic (enumerated in Section 8). The dataset was created by manually constructing example word-pairs of each relation, and providing all the pairs of word-pairs (within each relation type) as analogy questions.\nOut-of-vocabulary words 6 were removed from both test sets.", "publication_ref": ["b19", "b17"], "figure_ref": [], "table_ref": []}, {"heading": "Closed Vocabulary", "text": "The SEMEVAL dataset contains the collection of 79 semantic relations that appeared in SemEval 2012 Task 2: Measuring Relation Similarity (Jurgens et al., 2012). Each relation is exemplified by a few (usually 3) characteristic word-pairs. Given a set of several dozen target word pairs, which supposedly have the same relation, the task is to rank the target pairs according to the degree in which this relation holds. This can be cast as an analogy question in the following manner: For example, take the Recipient:Instrument relation with the prototypical word pairs king:crown and police:badge. To measure the degree that a target word pair wife:ring has the same relation, we form the two analogy questions \"king is to crown as wife is to ring\" and \"police is to badge as wife is to ring\". We calculate the score of each analogy, and average the results. Note that as opposed to the first two test sets, this one does not require searching the entire vocabulary for the most suitable word in the corpus, but rather to rank a list of existing word pairs.\nFollowing previous work, performance on SE-MEVAL was measured using accuracy, macroaveraged across all the relations.", "publication_ref": ["b11"], "figure_ref": [], "table_ref": []}, {"heading": "Preliminary Results", "text": "Our first experiment uses 3COSADD (method (3) in Section 3) to measure the prevalence of linguistic regularities within each representation.   The results in Table 2 show that the PAIRDI-RECTION method is better than 3COSADD on the restricted-vocabulary SEMEVAL task (accuracy jumps from 38% to 45%), but fails at the open-vocabulary questions in GOOGLE and MSR.\nWhen the method does work, the numbers for the explicit and embedded representations are again comparable to one another. Why is PAIRDIRECTION performing so well on the SEMEVAL task, yet so poorly on the others? Recall that the PAIRDIRECTION objective focuses on the similarity of b * \u2212 b and a * \u2212 a, but does not take into account the spatial distances between the individual vectors. Relying on direction alone, while ignoring spatial distance, is problematic when considering the entire vocabulary as candidates (as is required in the MSR and GOOGLE tasks). We are likely to find candidates b * that have the same relation to b as reflected by a \u2212 a * but are not necessarily similar to b. As a concrete example, in man:woman, king:?, we are likely to recover feminine entities, but not necessarily royal ones. The SEMEVAL test set, on the other hand, already provides related (and therefore geometrically close) candidates, leaving mainly the direction to reason about.", "publication_ref": [], "figure_ref": [], "table_ref": ["tab_2"]}, {"heading": "Refining the Objective Function", "text": "The 3COSADD objective, as expressed in (3), reveals a \"balancing act\" between two attractors and one repeller, i.e. two terms that we wish to maximize and one that needs to be minimized:\narg max b * \u2208V (cos (b * , b) \u2212 cos (b * , a) + cos (b * , a * ))\nA known property of such linear objectives is that they exhibit a \"soft-or\" behavior and allow one sufficiently large term to dominate the expression. This behavior is problematic in our setup, because each term reflects a different aspect of similarity, and the different aspects have different scales. For example, king is more royal than it is masculine, and will therefore overshadow the gender aspect of the analogy. It is especially true in the case of explicit vector representations, as each aspect of the similarity is manifested by a different set of features with varying sizes and weights.\nA case in point is the analogy question \"London is to England as Baghdad is to -?\", which we answer using: arg max x\u2208V (cos (x, en) \u2212 cos (x, lo) + cos (x, ba))\nWe seek a word (Iraq) which is similar to England (both are countries), is similar to Baghdad (similar geography/culture) and is dissimilar to London (different geography/culture). Maximizing the sum yields an incorrect answer (under both representations): Mosul, a large Iraqi city. Looking at the computed similarities in the explicit vector representation, we see that both Mosul and Iraq are very close to Baghdad, and are quite far from England and London: While Iraq is much more similar to England than Mosul is (both being countries), both similarities (0.049 and 0.031 in explicit, 0.130 and 0.153 in embedded) are small and the sums are dominated by the geographic and cultural aspect of the analogy: Mosul and Iraq's similarity to Baghdad (0.24 and 0.20 in explicit, 0.75 and 0.63 in embedded).\n(EXP) \u2191 England \u2193 London \u2191 Baghdad\nTo achieve better balance among the different aspects of similarity, we propose switching from an additive to a multiplicative combination:\narg max b * \u2208V cos (b * , b) cos (b * , a * ) cos (b * , a) + \u03b5 (4) (\u03b5 = 0.001 is used to prevent division by zero)\nThis is equivalent to taking the logarithm of each term before summation, thus amplifying the differences between small quantities and reducing the differences between larger ones. Using this objective, Iraq is scored higher than Mosul (0.259 vs 0.236, 0.736 vs 0.691). We refer to objective (4) as 3COSMUL. 7", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Main Results", "text": "We repeated the experiments, this time using the 3COSMUL method.  3COSMUL outperforms the state-of-the-art (3COSADD) on these two datasets. Moreover, the results illustrate that a comparable amount of relational similarities can be recovered with both representations. This suggests that the linguistic regularities apparent in neural embeddings are not a consequence of the embedding process, but rather are well preserved by it.\nOn SEMEVAL, 3COSMUL preformed on par with 3COSADD , recovering a similar amount of analogies with both explicit and neural representations (38.37% and 38.67%, respectively).", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Error Analysis", "text": "With 3COSMUL, both the explicit vectors and the neural embeddings recover similar amounts of analogies, but are these the same patterns, or perhaps different types of relational similarities?", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Agreement between Representations", "text": "Considering the open-vocabulary tasks (MSR and GOOGLE), we count the number of times both representations guessed correctly, both guessed incorrectly, and when one representations leads to the right answer while the other does not (Table 4). While there is a large amount of agreement between the representations, there is also a nonnegligible amount of cases in which they complement each other. If we were to run in an oracle setup, in which an answer is considered correct if it is correct in either representation, we would have achieved an accuracy of 71.9% on the MSR dataset and 77.8% on GOOGLE.   ", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Breakdown by Relation Type", "text": "Table 5 presents the amount of analogies discovered in each representation, broken down by relation type. Some trends emerge: the explicit representation is superior in some of the more semantic tasks, especially geography related ones, as well as the ones superlatives and nouns. The neural embedding, however, has the upper hand on most verb inflections, comparatives, and family (gender) relations. Some relations (currency, adjectives-to-adverbs, opposites) pose a challenge to both representations, though are somewhat better handled by the embedded representations. Finally, the nationality-adjectives and present-participles are equally handled by both representations.", "publication_ref": [], "figure_ref": [], "table_ref": ["tab_8"]}, {"heading": "Default-Behavior Errors", "text": "The most common error pattern under both representations is that of a \"default behavior\", in which one central representative word is provided as an answer to many questions of the same type. For example, the word \"Fresno\" is returned 82 times as an incorrect answer in the city-in-state relation in the embedded representation, and the word \"daughter\" is returned 47 times as an incorrect answer in the family relation in the explicit represen-  tation. Loosely, \"Fresno\" is identified by the embedded representation as a prototypical location, while \"daughter\" is identified by the explicit representation as a prototypical female. Under a definition in which a default behavior error is one in which the same incorrect answer is returned for a particular relation 10 or more times, such errors account for 49% of the errors in the explicit representation, and for 39% of the errors in the embedded representation. Table 6 lists the 15 most common default errors under both representations. In most default errors the category of the default word is closely related to the analogy question, sharing the category of either the correct answer, or (as in the case of \"Fresno\") the question word. Notable exceptions are the words \"who\", \"and\", \"be\" and \"smith\" that are returned as default answers in the explicit representation, and which are very far from the intended relation. It seems that in the explicit representation, some very frequent function words act as \"hubs\" and confuse the model. In fact, the performance gap between the representations in the past-tense and plural-verb relations can be attributed specifically to such function-word errors: 23.4% of the mistakes in past-tense relation are due to the explicit representation's default answer of \"who\" or \"and\", while 19% of the mistakes in the plural-verb relations are due to default answers of \"is/and/that/who\".", "publication_ref": [], "figure_ref": [], "table_ref": ["tab_10"]}, {"heading": "Verb-inflection Errors", "text": "A correct solution to the morphological analogy task requires recovering both the correct in-flection (requiring syntactic similarity) and the correct base word (requiring semantic similarity). We observe that linguistically, the morphological distinctions and similarities tend to rely on a few common word forms (for example, the \"walk:walking\" relation is characterized by modals such as \"will\" appearing before \"walk\" and never before \"walking\", and be verbs appearing before walking and never before \"walk\"), while the support for the semantic relations is spread out over many more items. We hypothesize that the morphological distinctions in verbs are much harder to capture than the semantics. Indeed, under both representations, errors in which the selected word has a correct form with an incorrect inflection are over ten times more likely than errors in which the selected word has the correct inflection but an incorrect base form.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Interpreting Relational Similarities", "text": "The ability to capture relational similarities by performing vector (or similarity) arithmetic is remarkable. In this section, we try and provide intuition as to why it works.\nConsider the word \"king\"; it has several aspects, high-level properties that it implies, such as royalty or (male) gender, and its attributional similarity with another word is based on a mixture of those aspects; e.g. king is related to queen on the royalty and the human axes, and shares the gender and the human aspect with man. Relational similarities can be viewed as a composition of attributional similarities, each one reflecting a different aspect. In \"man is to woman as king is to queen\", the two main aspects are gender and royalty. Solving the analogy question involves identifying the relevant aspects, and trying to change one of them while preserving the other.\nHow are concepts such as gender, royalty, or \"cityness\" represented in the vector space? While the neural embeddings are mostly opaque, one of the appealing properties of explicit vector representations is our ability to read and understand the vectors' features. For example, king is represented in our explicit vector space by 51,409 contexts, of which the top 3 are tut +1 , jeongjo +1 , adulyadej +2 -all names of monarchs. The explicit representation allows us to glimpse at the way different aspects are represented. To do so, we choose a representative pair of words that share an aspect, intersect their vectors, and inspect the highest scoring  The top features of each aspect, recovered by pointwise multiplication of words that share that aspect. The result of pointwise multiplication is an \"aspect vector\" in which the features common to both words, characterizing the relation, receive the highest scores. The feature scores (not shown) correspond to the weight the feature contributes to the cosine similarity between the vectors. The superscript marks the position of the feature relative to the target word.\nfeatures in the intersection. Table 7 presents the top (most influential) features of each aspect. Many of these features are names of people or places, which appear rarely in our corpus (e.g. Adeliza, a historical queen, and Nzinga, a royal family) but are nonetheless highly indicative of the shared concept. The prevalence of rare words stems from PMI, which gives them more weight, and from the fact that words like woman and queen are closely related (a queen is a woman), and thus have many features in common. Ordering the features of woman queen by prevalence reveals female pronouns (\"she\", \"her\") and a long list of common feminine names, reflecting the expected aspect shared by woman and queen. Word pairs that share more specific aspects, such as capital cities or countries, show features that are characteristic of their shared aspect (e.g. capital cities have embassies and meetups, while immigration is associated with countries). It is also interesting to observe how the relatively syntactic \"superlativity\" aspect is captured with many regional possessives (\"america's\", \"asia's\", \"world's\").", "publication_ref": [], "figure_ref": [], "table_ref": ["tab_12"]}, {"heading": "Related Work", "text": "Relational similarity (and answering analogy questions) was previously tackled using explicit representations. Previous approaches use taskspecific information, by either relying on a (word-pair, connectives) matrix rather than the standard (word, context) matrix (Turney and Littman, 2005;Turney, 2006), or by treating analogy detection as a supervised learning task (Baroni and Lenci, 2009;Jurgens et al., 2012;Turney, 2013). In contrast, the vector arithmetic approach followed here is unsupervised, and works on a generic single-word representation. Even though the training process is oblivious to the task of analogy detection, the resulting representation is able to detect them quite accurately. Turney (2012) as-sumes a similar setting but with two types of word similarities, and combines them with products and ratios (similar to 3COSMUL) to recover a variety of semantic relations, including analogies.\nArithmetic combination of explicit word vectors is extensively studied in the context of compositional semantics (Mitchell and Lapata, 2010), where a phrase composed of two or more words is represented by a single vector, computed by a function of its component word vectors. Blacoe and Lapata (2012) compare different arithmetic functions across multiple representations (including embeddings) on a range of compositionality benchmarks. To the best of our knowledge such methods of word vector arithmetic have not been explored for recovering relational similarities in explicit representations.", "publication_ref": ["b28", "b32", "b1", "b11", "b34", "b20", "b5"], "figure_ref": [], "table_ref": []}, {"heading": "Discussion", "text": "Mikolov et al. showed how an unsupervised neural network can represent words in a space that \"naturally\" encodes relational similarities in the form of vector offsets. This study shows that finding analogies through vector arithmetic is actually a form of balancing word similarities, and that, contrary to the recent findings of Baroni et al. (2014), under certain conditions traditional word similarities induced by explicit representations can perform just as well as neural embeddings on this task.\nLearning to represent words is a fascinating and important challenge with implications to most current NLP efforts, and neural embeddings in particular are a promising research direction. We believe that to improve these representations we should understand how they work, and hope that the methods and insights provided in this work will help to deepen our grasp of current and future investigations of word representations.", "publication_ref": ["b3"], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Polyglot: Distributed word representations for multilingual nlp", "journal": "", "year": "2013", "authors": "Rami Al-Rfou; Bryan Perozzi; Steven Skiena"}, {"ref_id": "b1", "title": "One distributional memory, many semantic spaces", "journal": "", "year": "2009", "authors": "Marco Baroni; Alessandro Lenci"}, {"ref_id": "b2", "title": "Distributional memory: A general framework for corpus-based semantics", "journal": "Computational Linguistics", "year": "2010", "authors": "Marco Baroni; Alessandro Lenci"}, {"ref_id": "b3", "title": "Dont count, predict! a systematic comparison of context-counting vs. context-predicting semantic vectors", "journal": "Association for Computational Linguistics", "year": "2014-06", "authors": "Marco Baroni; Georgiana Dinu; Germ\u00e1n Kruszewski"}, {"ref_id": "b4", "title": "A neural probabilistic language model", "journal": "Journal of Machine Learning Research", "year": "2003", "authors": "Yoshua Bengio; R\u00e9jean Ducharme; Pascal Vincent; Christian Jauvin"}, {"ref_id": "b5", "title": "A comparison of vector-based representations for semantic composition", "journal": "Association for Computational Linguistics", "year": "2012-07", "authors": "William Blacoe; Mirella Lapata"}, {"ref_id": "b6", "title": "Extracting semantic representations from word cooccurrence statistics: A computational study", "journal": "Behavior Research Methods", "year": "2007", "authors": "John A Bullinaria; Joseph P Levy"}, {"ref_id": "b7", "title": "Word association norms, mutual information, and lexicography", "journal": "Computational linguistics", "year": "1990", "authors": "Kenneth Ward Church; Patrick Hanks"}, {"ref_id": "b8", "title": "A unified architecture for natural language processing: Deep neural networks with multitask learning", "journal": "", "year": "2008", "authors": "Ronan Collobert; Jason Weston"}, {"ref_id": "b9", "title": "Natural language processing (almost) from scratch", "journal": "The Journal of Machine Learning Research", "year": "2011", "authors": "Ronan Collobert; Jason Weston; L\u00e9on Bottou; Michael Karlen; Koray Kavukcuoglu; Pavel Kuksa"}, {"ref_id": "b10", "title": "Similarity-based estimation of word cooccurrence probabilities", "journal": "Association for Computational Linguistics", "year": "1994", "authors": "Ido Dagan; Fernando Pereira; Lillian Lee"}, {"ref_id": "b11", "title": "Semeval-2012 task 2: Measuring degrees of relational similarity", "journal": "", "year": "2012", "authors": "A David;  Jurgens; D Peter;  Turney; M Saif; Keith J Mohammad;  Holyoak"}, {"ref_id": "b12", "title": "Directional distributional similarity for lexical inference", "journal": "Natural Language Engineering", "year": "2010", "authors": "Lili Kotlerman; Ido Dagan; Idan Szpektor; Maayan Zhitomirsky-Geffet"}, {"ref_id": "b13", "title": "Dependencybased word embeddings", "journal": "Short Papers", "year": "2014", "authors": "Omer Levy; Yoav Goldberg"}, {"ref_id": "b14", "title": "Dirt: discovery of inference rules from text", "journal": "", "year": "2001", "authors": "Dekang Lin; Patrick Pantel"}, {"ref_id": "b15", "title": "Automatic retrieval and clustering of similar words", "journal": "Association for Computational Linguistics", "year": "1998", "authors": "Dekang Lin"}, {"ref_id": "b16", "title": "Extensions of recurrent neural network language model", "journal": "IEEE", "year": "2011", "authors": "Tomas Mikolov; Stefan Kombrink; Lukas Burget; J H Cernocky; Sanjeev Khudanpur"}, {"ref_id": "b17", "title": "Efficient estimation of word representations in vector space", "journal": "CoRR", "year": "2013", "authors": "Tomas Mikolov; Kai Chen; Greg Corrado; Jeffrey Dean"}, {"ref_id": "b18", "title": "Distributed representations of words and phrases and their compositionality", "journal": "", "year": "2013-12-05", "authors": "Tomas Mikolov; Ilya Sutskever; Kai Chen; Gregory S Corrado; Jeffrey Dean"}, {"ref_id": "b19", "title": "Linguistic regularities in continuous space word representations", "journal": "", "year": "2013-06", "authors": "Tomas Mikolov; Yih Wen-Tau; Geoffrey Zweig"}, {"ref_id": "b20", "title": "Composition in distributional models of semantics", "journal": "Cognitive Science", "year": "2010", "authors": "Jeff Mitchell; Mirella Lapata"}, {"ref_id": "b21", "title": "A scalable hierarchical distributed language model", "journal": "", "year": "2008", "authors": "Andriy Mnih; Geoffrey E Hinton"}, {"ref_id": "b22", "title": "Cooccurrence vectors from corpora vs. distance vectors from dictionaries", "journal": "", "year": "1994", "authors": "Yoshiki Niwa; Yoshihiko Nitta"}, {"ref_id": "b23", "title": "Dependency-based construction of semantic space models", "journal": "Computational Linguistics", "year": "2007", "authors": "Sebastian Pad\u00f3; Mirella Lapata"}, {"ref_id": "b24", "title": "Distributional clustering of english words", "journal": "Association for Computational Linguistics", "year": "1993", "authors": "Fernando Pereira; Naftali Tishby; Lillian Lee"}, {"ref_id": "b25", "title": "The Word-Space Model: Using distributional analysis to represent syntagmatic and paradigmatic relations between words in highdimensional vector spaces", "journal": "", "year": "2006", "authors": "Magnus Sahlgren"}, {"ref_id": "b26", "title": "Semi-supervised recursive autoencoders for predicting sentiment distributions", "journal": "Association for Computational Linguistics", "year": "2011", "authors": "Richard Socher; Jeffrey Pennington; H Eric; Andrew Y Huang; Christopher D Ng;  Manning"}, {"ref_id": "b27", "title": "Word representations: a simple and general method for semi-supervised learning", "journal": "Association for Computational Linguistics", "year": "2010", "authors": "Joseph Turian; Lev Ratinov; Yoshua Bengio"}, {"ref_id": "b28", "title": "Corpus-based learning of analogies and semantic relations", "journal": "", "year": "2005", "authors": "D Peter; Michael L Turney;  Littman"}, {"ref_id": "b29", "title": "From frequency to meaning: Vector space models of semantics", "journal": "Journal of Artificial Intelligence Research", "year": "2010", "authors": "D Peter; Patrick Turney;  Pantel"}, {"ref_id": "b30", "title": "Mining the web for synonyms: Pmi-ir versus lsa on toefl", "journal": "", "year": "2001", "authors": "D Peter;  Turney"}, {"ref_id": "b31", "title": "European Conference on Machine Learning", "journal": "Springer-Verlag", "year": "", "authors": ""}, {"ref_id": "b32", "title": "Similarity of semantic relations", "journal": "Computational Linguistics", "year": "2006", "authors": "D Peter;  Turney"}, {"ref_id": "b33", "title": "Domain and function: A dualspace model of semantic relations and compositions", "journal": "Journal of Artificial Intelligence Research", "year": "2012", "authors": "D Peter;  Turney"}, {"ref_id": "b34", "title": "Distributional semantics beyond words: Supervised learning of analogy and paraphrase", "journal": "CoRR", "year": "2013", "authors": "D Peter;  Turney"}, {"ref_id": "b35", "title": "Combining heterogeneous models for measuring relational similarity", "journal": "Association for Computational Linguistics", "year": "2013-06", "authors": "Alisa Zhila; Wen-Tau Yih; Christopher Meek; Geoffrey Zweig; Tomas Mikolov"}], "figures": [{"figure_label": "", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Sij = P P M I(wi, cj) P P M I(w, c) = 0 P M I(w, c) < 0 P M I(w, c) otherwise P M I(w, c) = log P (w,c) P (w)P (c) = log f req(w,c)|corpus| f req(w)f req(c)", "figure_data": ""}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_1", "figure_caption": "Performance of 3COSADD on different tasks with the explicit and neural embedding representations.The results in Table1show that a large amount of relational similarities can be recovered with both representations. In fact, both representations achieve the same accuracy on the SEMEVAL task. However, there is a large performance gap in favor of the neural embedding in the open-vocabulary MSR and GOOGLE tasks.Next, we run the same experiment with PAIRDIRECTION (method (2) in Section 3).", "figure_data": "Representation MSR GOOGLE SEMEVALEmbedding9.26%14.51%44.77%Explicit0.66%0.75%45.19%"}, {"figure_label": "2", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "Performance of PAIRDIRECTION on different tasks with the explicit and neural embedding representations.", "figure_data": ""}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_4", "figure_caption": "presents the results, showing that the multiplicative objective recovers more relational similarities in both representations. The improvements achieved in the explicit representation are especially dramatic, with an absolute increase of over 20% correctly identified relations in the MSR and GOOGLE datasets.", "figure_data": "Objective RepresentationMSRGOOGLE3COSADDEmbedding Explicit53.98% 29.04%62.70% 45.05%3COSMULEmbedding Explicit59.09% 56.83%66.72% 68.24%"}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_5", "figure_caption": "Comparison of 3COSADD and 3COSMUL.", "figure_data": ""}, {"figure_label": "4", "figure_type": "table", "figure_id": "tab_7", "figure_caption": "Agreement between the representations on openvocabulary tasks.", "figure_data": "RelationEmbedding Explicitcapital-common-countries90.51%99.41%capital-world77.61%92.73%city-in-state56.95%64.69%currency14.55%10.53%family (gender inflections)76.48%60.08%GOOGLEgram1-adjective-to-adverb gram2-opposite gram3-comparative gram4-superlative24.29% 37.07% 86.11% 56.72%14.01% 28.94% 77.85% 63.45%gram5-present-participle63.35%65.06%gram6-nationality-adjective89.37%90.56%gram7-past-tense65.83%48.85%gram8-plural (nouns)72.15%76.05%gram9-plural-verbs71.15%55.75%MSRadjectives nouns verbs45.88% 56.96% 69.90%56.46% 63.07% 52.97%"}, {"figure_label": "5", "figure_type": "table", "figure_id": "tab_8", "figure_caption": "Breakdown of relational similarities in each representation by relation type, using 3COSMUL.", "figure_data": ""}, {"figure_label": "6", "figure_type": "table", "figure_id": "tab_10", "figure_caption": "", "figure_data": ": Common default-behavior errors under both repre-sentations. EMB / EXP: the number of time the word wasreturned as an incorrect answer for the given relation underthe embedded or explicit representation."}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_11", "figure_caption": "+1 ketevan +1 adeliza +1 nzinga +1 gunnhild +1 impregnate \u22122 hippolyta +1 Royalty queen king savang +1 uncrowned \u22121 pmare +1 sisowath +1 nzinga +1 tupou +1 uvea +2 majesty \u22121 Currency yen ruble devalue \u22122 banknote +1 denominated +1 billion \u22121 banknotes +1 pegged +2 coin +1 Country germany australia emigrates \u22122 1943-45 +2 pentathletes \u22122 emigrated \u22122 emigrate \u22122 hong-kong \u22121 Capital berlin canberra hotshots \u22121 embassy \u22122 1925-26 +2 consulate-general +2 meetups \u22122 nunciature \u22122 Superlative sweetest tallest freshest +2 asia's \u22121 cleveland's \u22122 smartest +1 world's \u22121 city's \u22121 america's \u22121 Height taller tallest regnans \u22122 skyscraper +1 skyscrapers +1 6'4 +2 windsor's \u22121 smokestacks +1 burj +2", "figure_data": "AspectExamplesTop FeaturesFemalewoman queenestrid"}, {"figure_label": "7", "figure_type": "table", "figure_id": "tab_12", "figure_caption": "", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "arg max b * \u2208V (sim (b * , b \u2212 a + a * ))", "formula_coordinates": [3.0, 111.89, 455.33, 138.48, 19.83]}, {"formula_id": "formula_1", "formula_text": "cos (u, v) = u \u2022 v u v resulting in: arg max b * \u2208V (cos (b * , b \u2212 a + a * )) (1)", "formula_coordinates": [3.0, 72.0, 539.51, 218.27, 73.55]}, {"formula_id": "formula_2", "formula_text": "arg max b * \u2208V (cos (b * \u2212 b, a * \u2212 a))(2)", "formula_coordinates": [3.0, 113.82, 749.02, 176.45, 19.83]}, {"formula_id": "formula_3", "formula_text": "arg max b * \u2208V (cos (b * , b) \u2212 cos (b * , a) + cos (b * , a * ))", "formula_coordinates": [3.0, 309.92, 255.45, 212.98, 19.83]}, {"formula_id": "formula_4", "formula_text": "arg max b * \u2208V (cos (b * , b) \u2212 cos (b * , a) + cos (b * , a * ))", "formula_coordinates": [5.0, 74.64, 602.9, 212.98, 19.83]}, {"formula_id": "formula_5", "formula_text": "(EXP) \u2191 England \u2193 London \u2191 Baghdad", "formula_coordinates": [5.0, 320.36, 310.89, 165.58, 9.27]}, {"formula_id": "formula_6", "formula_text": "arg max b * \u2208V cos (b * , b) cos (b * , a * ) cos (b * , a) + \u03b5 (4) (\u03b5 = 0.001 is used to prevent division by zero)", "formula_coordinates": [5.0, 332.3, 575.39, 193.24, 45.65]}], "doi": ""}