{"title": "PLMP -Point-Line Minimal Problems in Complete Multi-View Visibility", "authors": "Timothy Duff; Kathl\u00e9n Kohn", "pub_date": "", "abstract": "We present a complete classification of all minimal problems for generic arrangements of points and lines completely observed by calibrated perspective cameras. We show that there are only 30 minimal problems in total, no problems exist for more than 6 cameras, for more than 5 points, and for more than 6 lines. We present a sequence of tests for detecting minimality starting with counting degrees of freedom and ending with full symbolic and numeric verification of representative examples. For all minimal problems discovered, we present their algebraic degrees, i.e. the number of solutions, which measure their intrinsic difficulty. It shows how exactly the difficulty of problems grows with the number of views. Importantly, several new minimal problems have small degrees that might be practical in image matching and 3D reconstruction.", "sections": [{"heading": "Introduction", "text": "Minimal 1 problems [37,50,24,26,28,29,25,30] play an important role in 3D reconstruction [48,49,47], image matching [44], visual odometry [39,4] and visual localization [52,46,51]. Many minimal problems have been described and solved and new minimal problems are constantly appearing. In this paper, we present a step towards a complete characterization of all minimal problems for points, lines and their incidences in calibrated multi-view geometry. This is a grand challenge, especially when dealing with partial visibility due to occlusions and missing detections. Here we provide a complete characterization for the case of complete multi-view visibility. Informally, a Figure 1: (1-st row) Points (red) and lines (blue) get detected independently as well as in arrangements with points incident to lines [36]. (2-nd row) Examples of some interesting arrangements of points and lines providing new minimal problems. See Tab. 1 for the complete classification of minimal problems for points, lines and their arrangements in multiple images with complete multi-view visibility. minimal problem is a 3D reconstruction problem recovering camera poses and world coordinates from given images such that random input instances have a finite positive number of solutions. Contribution We give a complete classification of minimal problems for generic arrangements of points and lines, including their incidences, completely observed by any number of calibrated perspective cameras. We consider calibrated scenarios since it avoids many degeneracies [15].\nWe show that there are exactly 30 minimal point-line problems (up to an arbitrary number of lines in the case of two views) when considering complete visibility (Tab. 1). In particular, there is no such minimal problem for seven or more cameras. For 6, 5, 4 and 3 cameras, there are 1, 3, 6 and 17 minimal problems, respectively. For two views, there are three combinatorial constellations of five points which yield minimal problems. We observe that each minimal point-line problem has at most five points and at most six lines (except for arbitrarily many lines in the case of two views.) Problems 5000 2 [37], 3200 3 [13,34], 3010 0 , 1040 0 [21] have been known before, all other 26 minimal problems in Tab. 1, as far as we know, are new.\nFor each minimal problem, we compute its algebraic degree which is its number of solutions over the complex numbers for generic images. This degree measures the intrinsic difficulty of a minimal problem. We observe how this degree generally grows with the number of cameras, but we also found several minimal problems with small degrees (32, 40 and 64), which might be practical in image matching and 3D reconstruction [47].\nWe consider generic minimal problems, i.e. the problems that have a finite number of complex solutions and are generic in the sense that random noise in image measurements does not change the number of solutions. For instance, the classical problem of five points in two views [37] is minimal and one can add arbitrarily many lines to the arrangement in 3-space; as long as it contains five points in sufficiently generic position, it is still minimal. On the other hand, the problem of four points in three views [31,18,40,42] is overconstrained when all measurements and equations are used. It becomes inconsistent for noisy image measurements. Thus it is not a minimal problem for us. We assume complete visibility, i.e. all points and lines are observed in all images and all observed information is used to formulate minimal problems. Complete pointline incidence correspondences arise when, e.g., SIFT point features [32] are considered together with their orientation, lines are constructed from matched affine frames [35], or obtained as simultaneous point and line detections [36], Fig. 1 2 . On the other hand, we do not cover cases that require partial visibility, e.g., 3 PPP + 1 PPL in [21]. Full account for partial visibility is a much harder task and will be addressed in the future.\nWe explicitly model point-line incidences. Several lines may be incident to a single point (n-quiver) and several points may be dependent by lying on a single line. We assume that such relations are not broken by image noise since they are constructed by the feature detection process.\nOur problem formulation uses direct geometrical determinantal constraints as in [19,41], not multi-view tensors, since it works for any number of cameras and can model point-line incidences. On the other hand, our formulation is not the most economical for the minimal problem with five independent points in two views (5000 2 in Tab. 1). This problem has degree 20 in our formulation while the degree is only 10 when reformulated [38] as a problem of finding the essential matrix. 3 Structure of the paper The paper is organized as follows. We review previous work in Sec. 2. Section 3 defining main concepts is followed by problem specification in Sec. 4. All candidates for minimal problems satisfying balanced counts of degrees of freedom are identified in Sec. 5. Section 6 presents our parameterization of the problems for computational purposes. Procedures for checking the minimality and computing the degrees using symbolic and numerical methods from algebraic geometry are presented in Sec. 7.", "publication_ref": ["b0", "b36", "b49", "b23", "b25", "b27", "b28", "b24", "b29", "b47", "b48", "b46", "b43", "b38", "b3", "b51", "b45", "b50", "b35", "b14", "b36", "b12", "b33", "b20", "b46", "b36", "b30", "b17", "b39", "b41", "b31", "b34", "b35", "b20", "b18", "b40", "b37", "b2"], "figure_ref": ["fig_1", "fig_1"], "table_ref": []}, {"heading": "Previous work", "text": "Here we review the most relevant work for point-line incidences and minimal problems. See [30,25,21] for references on minimal problems in general. Using correspondences of non-incident points and lines in three uncalibrated views was considered in works on the trifocal tensor [16]. The early work on point-line incidences [19] introduced n-quivers, i.e. points incident with n lines in uncalibrated views, and studied minimal problems arising from three 1quivers in three affine views and three 3-quivers in three perspective views, as well as the overconstrained problem of four 2-quivers in three views.\nUncalibrated multi-view constraints for points, lines and their incidences appeared in [33]. In [41], non-incident points and lines in uncalibrated views were studied and four points and three lines in three views, two points and six lines in three views, and nine lines in three views cases were presented. The solver for the latter case has recently appeared in [27]. Absolute pose of cameras with unknown focal length from 2D-3D quiver correspondences has been solved in [23] for two points and 1-quiver, for one 1-quiver and one 2-quiver, and for four lines. In [11], an important case, when lines incident to points arise from tangent lines to curves, is presented. It motivates the case with three points and tangent lines at two points (case 3002 1 in Tab. 1). Work [36] presents several minimal problems for generalized camera absolute pose computation from 2D-3D correspondences of non-incident points and lines with focus on cases when a closed-form solution could be found. In [10,45], parallelism and perpendicularity of lines in space were exploited to find calibrated relative pose from lines and points. Recent work [55] investigates calibrated relative camera pose problems from two views with 2quivers with known angles between the 3D lines generating the quivers. Minimal problems for finding the relative pose from three such correspondences for the generic as well as several more specific cases is derived. Our closest generalization of this result is that one can obtain calibrated relative pose of three cameras from one 2-quiver and two independent points in three views without knowing angles in 3D. Recently, minimal problems were constructed for local multi-features including lines incident to points as well as more complex features [7,5,6]. They build on SIFT di-rections [32] or more elaborate local affine features [35] to reduce the number of samples needed in RANSAC [43] to verify tentative matches. The most relevant previous work Recent theoretical results [20,1,2,3,53,54] made steps towards characterizing some of the classes of minimal problems. The most relevant work [21] provided a classification for three calibrated views that can be formulated using linear constraints on the trifocal tensor [15]. In [21], 66 minimal problems for three calibrated views were presented and their algebraic degrees computed. The lowest degree 160 has been observed for one PPP and four PPL constraints while the highest degree 4912 has been observed for 11 PLL constraints. Out of 66 problems in [21] the ones that can be modeled with complete visibility are (1 PPP + 4 LLL) and (3 PPP + 1 LLL). These two minimal problems appear as 1040 0 and 3010 0 in Tab. 1. The other 15 minimal problems in three views that we discovered do not appear in [21] since the point-line incidences were not considered.", "publication_ref": ["b29", "b24", "b20", "b15", "b18", "b32", "b40", "b26", "b22", "b10", "b35", "b9", "b44", "b54", "b6", "b4", "b5", "b31", "b34", "b42", "b19", "b0", "b1", "b2", "b52", "b53", "b20", "b14", "b20", "b20", "b20"], "figure_ref": [], "table_ref": []}, {"heading": "Notation and concepts", "text": "We use nomenclature from [15]. Points and lines in space are in the projective space P 3 , image points are in P 2 and are represented by homogeneous coordinates. We consider the Grassmannians G 1,3 and G 1,2 which are the spaces of lines in P 3 and P 2 , respectively. SO(3) stands for the special orthogonal group, i.e. rotations, defined algebraicly as 3 \u00d7 3 matrices R such that RR \u22ba = I, det R = 1. All is considered over an arbitrary field F unless explicitly specified. Coefficients of equations originate from the field Q of rational numbers. Solutions of the equations are in the field C of complex numbers. We carry out symbolic computations in a finite field Z p for a prime p for the sake of exactness and computational efficiency. Numerical algorithms use floating point to approximate complex numbers. 4 ", "publication_ref": ["b14", "b3"], "figure_ref": [], "table_ref": []}, {"heading": "Problem Specification", "text": "Our main result applies to problems in which points, lines, and point-line incidences are observed. We first introduce a point-line problem as a tuple (p, l, I, m) specifying that p points and l lines in space, which are incident according to a given incidence relation I \u2282 {1, . . . , p} \u00d7 {1, . . . , l} (i.e. (i, j) \u2208 I means that the i-th point is on the j-th line) are projected to m views. So a point-line problem captures the numbers of points, lines and views as well as the incidences between points and lines. We will model intersecting lines by requiring that each intersection point of two lines has to be one of the p points in the point-line problem. Throughout this article we will only consider incidence relations which can be realized by a point-line arrangement in P 3 . In particular, two distinct lines cannot be incident to the same two distinct points. In addition, we will always assume that the incidence relation I is complete in the sense that every incidence which is automatically implied by the incidences in I must also be contained in I. An instance of a point-line problem is specified by the following data:\n(1) A point-line arrangement in space consisting of p points X 1 , . . . , X p and l lines L 1 , . . . , L l in P 3 which are incident exactly as specified by I \u2282 {1, . . . , p} \u00d7 {1, . . . , l}. Hence, the point X i is on the line L j if and only if (i, j) \u2208 I. We write\nX p,l,I = (X, L) \u2208 P 3 p \u00d7 (G 1,3 ) l \u2200(i, j) \u2208 I \u2236 X i \u2208 L j\nfor the associated variety of point-line arrangements. Note that this variety also contains degenerate arrangements, where not all points and lines have to be pairwise distinct or where there are more incidences between points and lines than those specified by I.\n(2) A list of m calibrated cameras which are represented by matrices\nP 1 = [R 1 t 1 ], . . . , P m = [R m t m ]\nwith R 1 , . . . , R m \u2208 SO(3) and t 1 , . . . , t m \u2208 F 3 .\n(3) The joint image consisting of the projections x v,1 , . . . , x v,p \u2208 P 2 of the points X 1 , . . . , X p and the projections \u2113 v,1 , . . . , \u2113 v,l \u2208 G 1,2 of the lines L 1 , . . . , L l by the cameras P 1 , . . . , P m to the v = 1, . . . , m views. We write\nY p,l,I,m = (x, \u2113) \u2208 P 2 m p \u00d7 (G 1,2 ) m l \u2200v = 1, . . . , m \u2200(i, j) \u2208 I \u2236 x v,i \u2208 \u2113 v,j\nfor the image variety which consists of all m-tuples of twodimensional point-line arrangements which satisfy the incidences specified by I.\nGiven a joint image, we want to recover an arrangement in space and cameras yielding the given joint image. We refer to a pair of such an arrangement and such a list of m cameras as a solution of the point-line problem for the given joint image. We note that an m-tuple in Y p,l,I,m does not necessarily admit a solution, i.e. a priori it does not have to be a joint image of a common point-line arrangement in 3-space.\nTo fix the arbitrary space coordinate system [15], we set P 1 = [I 0] and the first coordinate of t 2 to 1. Hence, our camera configurations are parameterized by\nC m = (P 1 , . . . , P m ) \u2208 F 3\u00d74 m P i = [R i t i ], R i \u2208 SO(3), t i \u2208 F 3 , R 1 = I, t 1 = 0, t 2,1 = 1 .\nWe will always assume that the camera positions in an instance of a point-line problem are sufficiently generic such that the following three natural conditions are satisfied for each camera: Firstly, two distinct lines or points in the given arrangement in 3-space are viewed as distinct lines or points. Secondly, a point and a line in the space arrangement, which are not incident in 3-space, are viewed as nonincident. Thirdly, three non-colinear points in the space arrangement are viewed as non-colinear points.\nWe say that a point-line problem is minimal if a generic image tuple in Y p,l,I,m has a nonzero finite number of solutions. We may phrase this definition formally: Remark 1. For a given a minimal problem (p, l, I, m), the joint camera map \u03a6 p,l,I,m maps X p,l,I \u00d7 C m onto a constructible subset of Y p,l,I,m of the same dimension. Given a solution for a generic joint image (x, \u2113) when F = R or C, there exists a ball around (x, \u2113), say B \u01eb (x, \u2113), and for each solution\nDefinition 1. Let \u03a6 p,l,I,m \u2236 X p,l,I \u00d7 C m \u21e2 Y p,\n(X, C) \u2208 \u03a6 \u22121 p,l,I,m (x, \u2113) a ball B \u03b4 (X, C) such that \u03a6 p,l,I,m (B \u03b4 (X, C)) \u2282 B \u01eb (x, \u2113).\nIn this sense, we may deduce that solutions to minimal problems are stable under perturbation of the data. The joint camera map \u03a6 p,l,I,m reflects that we want to recover world points and lines as well as camera poses from a given joint image. In the case of complete visibility, this is equivalent to only recovering camera poses. We formalize this observation in Lemma 2 and Corollary 2.\nOver the complex numbers, the cardinality of the preimage \u03a6 \u22121 p,l,I,m (x, \u2113) is the same for every generic joint image (x, \u2113) of a minimal point-line problem (p, l, I, m). We refer to this cardinality as the degree of the minimal problem. Our goal is to list all minimal point-line problems and to compute their degrees. For this, we pursue the following strategy:\nStep 1: A classical statement from algebraic geometry states for a dominant map \u03d5 \u2236 X \u21e2 Y from a variety X to another variety Y that the preimage \u03d5 \u22121 (y) of a generic point y in Y has dimension dim(X) \u2212 dim(Y ). When \u03d5 is a linear map between linear spaces, this is simply the ranknullity theorem of linear algebra. As the generic preimage of the joint camera map \u03a6 p,l,I,m associated to a minimal point-line problem (p, l, I, m) is zero-dimensional, we see that every minimal point-line problem must satisfy the 5 Dominant maps are analogs of surjective maps in birational geometry. equality dim(X p,l,I \u00d7C m ) = dim(Y p,l,I,m ). This motivates the following definition. Definition 2. We say that a point-line problem (p, l, I, m) is balanced if dim(X p,l,I \u00d7 C m ) = dim(Y p,l,I,m ).\nAs we have now established that all minimal point-line problems are balanced, we classify all balanced point-line problems in Sec. 5. We will see that there are only finitely many such problems, explicitly given in Tab. 1, up to arbitrarily many lines in the case of two views; see Remark 2.\nStep 2: The classical statement from algebraic geometry mentioned above further implies that a balanced pointline problem (p, l, I, m) is minimal if and only if its joint camera map \u03a6 p,l,I,m is dominant. Hence, to determine the exhaustive list of all minimal point-line problems, we only have to check for each balanced point-line problem in Tab. 1 if its joint camera map is dominant. We perform this check computationally, as described in Sec. 7.\nStep 3: Finally, we use symbolic and numerical computations to calculate the degrees of the minimal point-line problems. We describe these computations in Sec. 7.", "publication_ref": ["b14", "b4"], "figure_ref": [], "table_ref": []}, {"heading": "Balanced Point-Line Problems", "text": "To understand balanced point-line problems we need to derive formulas for the dimensions of the varieties X p,l,I , C m and Y p,l,I,m . As SO(3) is three-dimensional, and we set the first camera to [I 0] and one parameter in the second camera to 1, the parameter space of camera configurations for m \u2265 2 has dimension dim(C m ) = 6m \u2212 7.\nLet us now consider a generic point-line arrangement in X p,l,I . Some of its points may be dependent on other points, in the sense that such a dependent point lies on a line spanned by two other points. In any arrangement of points in 3-space, each minimal set of independent points has the same cardinality. For our arrangement of p points we denote this cardinality by p f (the upper index f stands for free). We write p d = p \u2212 p f for the number of dependent points. Each free point is defined by three parameters. A dependent point X is only defined by one further parameter after the two points, which span the line containing X, are defined. In total, the p points in our arrangement are defined by 3 p f + p d parameters. Each of the l lines in our arrangement is either incident to zero, one or at least two points. We refer to lines which are incident to no points as free lines. We denote the number of free lines by l f . As the Grassmannian G 1,3 of lines is four-dimensional, each free line is defined by four parameters. A line which is incident to a fixed point is defined by only two parameters. We denote the number of lines which are incident to exactly one point by l a (the upper index a stands for adjacent). Finally, each of the remaining l \u2212 l f \u2212 l a lines is incident to at least two points and thus already uniquely determined by the two  Table 1: All balanced point-line problems, modulo adding arbitrarily many lines to the problems with 2 views. Some problems are not uniquely identified by their vector (p f , p d , l f , l a ). To make the identification unique, we extend the vector by a subscript \u03b1, which is the maximum number of lines adjacent to the same point in the case of at least three views or the maximum number of points on a common line in the case of two views. Degrees marked with * have been computed with numerical methods, the others with symbolic algorithms; see Section 7. Problem 3200 3 has all five points in a single 3D plane: it corresponds to the calibrated homography relative pose computation [13,34]; see Supplementary Material.\nMinimal Y N N Y Y Y Y Y N N Y Y Y Degree >\npoints. Hence, we have derived\ndim(X p,l,I ) = 3 p f + p d + 4 l f + 2 l a .(1)\nIn particular, we see that we might as well assume that there is no line passing through two or more points, as such lines do not contribute to our parameter count. We derive the dimension of the image variety Y p,l,I,m similarly. Since we assume all camera positions to be sufficiently generic, each camera views exactly p f independent points, p d dependent points, l f free lines and l a lines which are incident to exactly one of the points. Each independent point is defined by two parameters, whereas each dependent point is defined by a single parameter. A free line is defined by two parameters. A line which is incident to a fixed point is defined by a single parameter. All in all, we have that\ndim(Y p,l,I,m ) = m (2 p f + p d + 2 l f + l a ).(2)\nNote that there is no balanced point-line problem for a single camera. For m > 1 cameras, combining dim(C m ) = 6m \u2212 7 with (1) and ( 2) yields that a point-line problem is balanced if and only if \n3\np f + p d + 4 l f + 2 l a + 6 m \u2212 7 = m 2 p f + p d + 2 l f + l a .", "publication_ref": ["b12", "b33"], "figure_ref": [], "table_ref": []}, {"heading": "This is equivalent to", "text": "6m\u22127 \u2265 (2m\u22123)p f +(m\u22121)(5\u2212p f )=(p f +5)m\u2212(2p f +5),\nwhich is equivalent to\n2(p f \u2212 1) \u2265 (p f \u2212 1)m.(4)\nAmong the five or more points at least two have to be (by definition) independent, i.e. p f > 1. So (4) yields m \u2264 2. If not all three points are independent, we have p f = 2, p d = 1, and (3) reduces to 3 = 2l f + l a . The two solutions (l f , l a ) \u2208 {(1, 1), (0, 3)} yield four point-line problems (see last row of Tab. 1). Finally, we consider balanced point-line problems with three cameras and four points. We see from ( 3) that not all four points can be independent. Hence, we either have p f = 3 and p d = 1 such that (3) reduces to 0 = 2l f + l a , which has a single solution (l f , l a ) = (0, 0), or we have p f = 2 and p d = 2 such that (3) reduces to 1 = 2l f + l a , which also has a single solution (l f , l a ) = (0, 1) (see the last row of Tab. 1)\nRemark 2. For the case of two cameras, we see from ( 3) that the number of free and incident lines do not contribute to the parameter count for balanced point-line problems. In fact, (3) reduces for m = 2 to 5 = p f +p d . Hence, we have the classical minimal problem of recovering five points from two camera images. More precisely, a point-line problem with two cameras is balanced if and only if it has five points. Therefore, it is irrelevant how many lines are contained in the arrangement or how many points are independent. There are 5 combinatorial possibilities to distribute dependent and independent points (see the last row of Tab. 1).\nCorollary 1. There are 39 balanced point-line problems, modulo any number of lines in the case of two views. They are listed in Tab. 1.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Eliminating world points and lines", "text": "In order to do computations, it is customary to describe problems with implicit equations that do not depend on the world variables. Before we describe such equations, let us phrase the elimination of the world variables geometrically. We consider the Zariski closure 6 of the graph of the joint camera map:\nInc = {(X, C, Y ) \u2208 X p,l,I \u00d7 C m \u00d7 Y p,l,I,m Y = \u03a6 p,l,I,m (X, C)}.\nThe joint camera map \u03a6 p,l,I,m is dominant if and only if the projection \u03c0 Y \u2236 Inc \u2192 Y p,l,I,m onto the last factor is dominant (since this is the projection from the graph of \u03a6 p,l,I,m on its codomain). Moreover, the cardinality of the preimage of a generic point Y \u2208 Y p,l,I,m under both maps \u03a6 p,l,I,m and \u03c0 Y is the same.\nTo make computations simpler, we want to derive the same statement for the following restricted incidence variety, which does not include the 3D structure X p,l,I :\nInc \u2032 = {(C, Y ) \u2208 C m \u00d7 Y p,l,I,m \u2203X \u2208 X p,l,I \u2236 Y = \u03a6 p,l,I,m (X, C)}.\nWe have the canonical projections on the right, where \u03c0 C,Y omits the first factor and \u03c0 \u2032 Y projects onto the last factor:\nInc Y p,l,I,m Inc \u2032 \u03c0 Y \u03c0 C,Y \u03c0 \u2032 Y Lemma 2. If m \u2265 2, a generic point (C, Y ) \u2208 Inc \u2032 has a single point in its preimage under \u03c0 C,Y .\nProof. Y = (x, \u2113) consists of points x = (x 1,1 , . . . , x m,p ) and lines \u2113 = (\u2113 1,1 , . . . , \u2113 m,l ) in the m views. Each point x v,i \u2208 P 2 in a view v is pulled back via the v-th camera to a line in 3-space. As m \u2265 2, the m pull-back lines for generic 7 x 1,i , . . . , x m,i intersect in a unique point in P 3 . Similarly, each line \u2113 v,j in a view v is pulled back via the v-th camera to a plane in P 3 . As m \u2265 2, the m generic 8 pull-back planes for \u2113 1,j , . . . , \u2113 m,j intersect in a unique line in P 3 . We note that it is possible to describe the variety Inc \u2032 as a component of the variety cut out by the equations that we establish in the remainder of this section.\nFor any instance of a point-line problem, the solutions must satisfy certain equations defined in terms of joint images (x, \u2113) \u2208 Y p,l,I,m . Our scheme for generating such equations relies on an alternate representation of (x, \u2113) defined solely in terms of lines. The equations result from two types of constraints. The first type of constraint is a line correspondence (LC): if \u2113 1 , . . . , \u2113 m are images of the same world line, with respective homogeneous coordinates l 1 , . . . , l m \u2208 F 3\u00d71 , then\nrank P T 1 l 1 P T 2 l 2 . . . P T m l m \u2264 2. (6\n)\nThat is, the planes with homogeneous coordinates P T i l i share a common line in P 3 . We distinguish two classes of lines in P 2 \u2236\n(1) Visible lines define valid line correspondences. Besides m l observed lines in the joint image, for generic x 7 e.g. no epipoles for two views. 8 e.g., no corresponding epipolar lines for two views.  there is a unique visible line between any two observed points. Taken across all views, any pair of points thus provides a line correspondence which must be satisfied.\n(2) Two generic visible lines suffice to define a point. We may use an additional set of (non-corresponding) ghost lines to define any points which meet fewer than two visible lines. A generic ghost line contains exactly one observed point -it is simply a device for generating equations 9 .\nThus we obtain common point (CP) constraints: given visible and ghost lines l v,1 , . . . l v,ki which meet x v,i , the projection of the i-th point in the view v \u2208 1, . . . , m, we must have\nrank P T 1 l 1,1 . . . P T m l m,ki \u2264 3, i = 1, . . . , p. (7)\nWe may encode a point-line problem by specifying some number of visible lines, some number of ghost lines, and which of these lines are incident at each point. We illustrate this encoding with several examples appearing in Figure 2: Example 1. (1) Consider the point-line problem labeled \"2013 2 \" in Tab. 1. The lines explicitly drawn in the table together with a visible line between the two free points, as in Fig. 2, suffice to define the scene for generic data.\n(2) Consider now the problem labeled \"2011 1 \" in Tab. 1. The encoding given in Fig. 2 includes the given lines, a visible line between the given points, as well as a single ghost line needed to define one of the points.\n(3) Finally, consider the problem labeled \"3200 3 \" in Tab. 1. The extra visible lines appearing in Fig. 2 fix the positions of all points.\nLC and CP constraints immediately translate into determinantal conditions: the 3 \u00d7 3 minors of the matrix in (6) must vanish for each visible line, and the 4 \u00d7 4 minors of the matrix in (7) must vanish for each point. Thus, we obtain explicit polynomials for each point-line problem once we fix some encoding and the cameras parametrization, i.e. a rational map G \u2236 F 6m\u22127 \u21e2 C m . In our computations, we define G via the Cayley parametrization for SO ", "publication_ref": ["b5", "b6", "b8"], "figure_ref": ["fig_4", "fig_4", "fig_4", "fig_4"], "table_ref": []}, {"heading": "Checking minimality & computing degrees", "text": "Denote by F = F p,l,I,m the system of polynomials resulting from a given point-line problem (p, l, I, m) using our construction of the LC and CP constraints in Sec. 6 with the cameras parameterization G plugged in. The variety of points satisfying F (C, Y ) = 0 contains Inc \u2032 as an irreducible component 10 .\nRemark 3. The variety of points satisfying F (C, Y ) = 0 may also have spurious components corresponding to solutions (C, Y ) where the ranks of the matrices (6) or ( 7) are smaller than desired. Such spurious solutions do not correspond to world lines in G 1,3 and must be ruled out. These spurious components are naturally avoided by sampling a point on Inc \u2032 . For implicit symbolic calculations, the spurious solutions may be eliminated by including inequations enforcing nonvanishing of the minors of size one smaller.\nThe following algorithm checks minimality of a pointline problem locally; geometrically this amounts to passing to the tangent space of Inc \u2032 .", "publication_ref": ["b9"], "figure_ref": [], "table_ref": []}, {"heading": "Algorithm 1 (Minimal).", "text": "Input: (p, l, I, m), a balanced point-line problem. Output: \"Y\" if the problem is minimal; \"N\" otherwise.\n1: J(C, Y ) \u2190 \u2202F (C,Y )) \u2202C 2: Take random C 0 \u2208 C m and random X 0 \u2208 X p,l,I .\n3: Y 0 \u2190 \u03a6 p,l,I,m (X 0 , C 0 ) 4: return \"Y\" if rank J(C 0 , Y 0 ) = 6m \u2212 7, else \"N.\"\nProof of Correctness for Algorithm 1. In terminology described in the beginning of Sec. 6, the algorithm checks if the conditions of the Inverse Function Theorem hold at a generic point on Inc \u2032 . If they do, the map \u03c0 \u2032 Y is dominant, since in a neighborhood of Y 0 the map has an inverse: i.e if Y is near Y 0 then there is C near C 0 satisfying F (C, Y ) = 0. If these conditions do not hold generically, \u03c0 \u2032 Y is not dominant. By Cor. 2, the given point-line problem is minimal if and only if \u03c0 \u2032 Y is dominant. For the minimal problems with two and three views we use the following symbolic algorithm to compute their degrees, i.e. the cardinality of the preimage of a generic joint image Y \u2208 Y p,l,I,m under the projection \u03c0 \u2032 Y (by Cor. 2).\n10 Inc \u2032 cannot be written as a finite union of strictly smaller varieties. Proof of Correctness. Using Gr\u00f6bner bases to solve a system of polynomial equations is a standard technique in computational nonlinear algebra. Since we are interested only in the solution count, not the solutions, we are able to carry out computations relatively quickly; see Remark 4.\nRemark 4. Algorithms 1 and 2 are valid over an arbitrary field F. Our main problem is stated over Q, the rational numbers, but since the algorithms rely heavily on symbolic techniques such as Gr\u00f6bner bases we use the so-called modular technique: we perform computations over a finite field, namely F = Z p for p < 2 15 . There is a slight chance that this approach fails for a particular exceptional \"unlucky\" prime p, but it is possible to compute the result using several primes and confirm it over Q via rational reconstruction. Algorithms 1 and 2 were implemented and executed in the Macaulay2 [14] computer algebra system 11 . Due to limitations of Gr\u00f6bner basis algorithms we were unable to compute the degrees of any of the problems with m > 3 with our implementation of Algorithm 2. On the other hand, the degrees of all minimal problems in Tab. 1 are within reach for the monodromy method, a technique based on numerical homotopy continuation. Specifically, we follow the monodromy solver framework outlined in [9] carrying out computation via a Macaulay2 package MonodromySolver 11 . Similar techniques have been successfully employed in a number of studies in applied algebraic geometry [17,22,8].\nImagine the projection \u03c0 \u2032 Y \u2236 Inc \u2032 \u21e2 Y p,l,I,m as the cover map from top to the bottom in Fig. 3. The seed solution (C 0 , Y 0 ) produced as in Algorithm 1 is one of the solutions that project to Y 0 at the bottom. Since the Galois group of \u03c0 \u2032 Y acts transitively on the solutions, one can create enough random paths connecting Y 0 and an auxiliary point Y 1 so that walking on the liftings of the bottom paths, it is possible to visit all solutions that are above Y 0 and, hence, discover the degree. See Supplementary Material for how these random paths are created as well as what assurances of completeness this technique provides.", "publication_ref": ["b14", "b13", "b10", "b8", "b16", "b21", "b7"], "figure_ref": ["fig_6"], "table_ref": []}, {"heading": "Conclusion", "text": "We characterized a new class of minimal problems and discovered problems with small numbers of solutions that call for constructing their efficient solvers [12].", "publication_ref": ["b11"], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "On the existence of epipolar matrices", "journal": "International Journal of Computer Vision", "year": "2017", "authors": "Sameer Agarwal; Hon-Leung Lee; Bernd Sturmfels; Rekha R Thomas"}, {"ref_id": "b1", "title": "The ideal of the trifocal variety", "journal": "Math. Comput", "year": "2014", "authors": "Chris Aholt; Luke Oeding"}, {"ref_id": "b2", "title": "A hilbert scheme in computer vision. CoRR, abs", "journal": "", "year": "1107", "authors": "Chris Aholt; Bernd Sturmfels; Rekha R Thomas"}, {"ref_id": "b3", "title": "Evaluating pose estimation methods for stereo visual odometry on robots", "journal": "", "year": "2001", "authors": "Brett Hatem Said Alismail; M Bernardine Browning;  Dias"}, {"ref_id": "b4", "title": "Five-point fundamental matrix estimation for uncalibrated cameras", "journal": "", "year": "2018-06-18", "authors": "Daniel Barath"}, {"ref_id": "b5", "title": "Efficient recovery of essential matrix from two affine correspondences", "journal": "IEEE Trans. Image Processing", "year": "2018", "authors": "Daniel Barath; Levente Hajder"}, {"ref_id": "b6", "title": "A minimal solution for two-view focal-length estimation using two affine correspondences", "journal": "", "year": "2017", "authors": "Daniel Barath; Tekla Toth; Levente Hajder"}, {"ref_id": "b7", "title": "3264 conics in a second", "journal": "", "year": "2019", "authors": "Paul Breiding; Bernd Sturmfels; Sascha Timme"}, {"ref_id": "b8", "title": "Solving polynomial systems via homotopy continuation and monodromy", "journal": "IMA Journal of Numerical Analysis", "year": "2018", "authors": "Timothy Duff; Cvetelina Hill; Anders Jensen; Kisun Lee; Anton Leykin; Jeff Sommars"}, {"ref_id": "b9", "title": "Line-based relative pose estimation", "journal": "", "year": "", "authors": "Ali Elqursh; Ahmed M Elgammal"}, {"ref_id": "b10", "title": "Multiview differential geometry of curves", "journal": "International Journal of Computer Vision", "year": "2016", "authors": "Ricardo Fabbri; Benjamin B Kimia"}, {"ref_id": "b11", "title": "Trifocal relative pose from lines at points and its efficient solution", "journal": "", "year": "2019", "authors": "R Fabri"}, {"ref_id": "b12", "title": "Motion and structure from motion in a piecewise planar environment", "journal": "International Journal of Pattern Recognition and Artificial Intelligence", "year": "1988", "authors": "D Olivier; Francis Faugeras;  Lustman"}, {"ref_id": "b13", "title": "Macaulay2, a software system for research in algebraic geometry", "journal": "", "year": "", "authors": "R Daniel; Michael E Grayson;  Stillman"}, {"ref_id": "b14", "title": "Multiple View Geometry in Computer Vision. Cambridge", "journal": "", "year": "2003", "authors": "Richard Hartley; Andrew Zisserman"}, {"ref_id": "b15", "title": "Lines and points in three views and the trifocal tensor", "journal": "International Journal of Computer Vision", "year": "1997", "authors": "Richard I Hartley"}, {"ref_id": "b16", "title": "Homotopy techniques for tensor decomposition and perfect identifiability", "journal": "Journal f\u00fcr die reine und angewandte Mathematik (Crelles Journal)", "year": "2016", "authors": "Jonathan D Hauenstein; Luke Oeding; Giorgio Ottaviani; Andrew J Sommese"}, {"ref_id": "b17", "title": "Uniqueness of solutions to three perspective views of four points", "journal": "IEEE Trans. Pattern Anal. Mach. Intell", "year": "1995", "authors": "J Robert; Arun N Holt;  Netravali"}, {"ref_id": "b18", "title": "Structure and motion estimation from complex features in three views", "journal": "", "year": "2002", "authors": "Magnus Bj\u00f6rn Johansson; Kalle\u00e5str\u00f6m Oskarsson"}, {"ref_id": "b19", "title": "Rigid multiview varieties", "journal": "IJAC", "year": "2016", "authors": "Michael Joswig; Joe Kileel; Bernd Sturmfels; Andr\u00e9 Wagner"}, {"ref_id": "b20", "title": "Minimal problems for the calibrated trifocal variety. CoRR", "journal": "", "year": "2016", "authors": "Joe Kileel"}, {"ref_id": "b21", "title": "Moment varieties of measures on polytopes", "journal": "", "year": "2018", "authors": "Kathl\u00e9n Kohn; Boris Shapiro; Bernd Sturmfels"}, {"ref_id": "b22", "title": "Pose estimation with unknown focal length using points, directions and lines", "journal": "", "year": "2013", "authors": "Yubin Kuang;  Kalle\u00e5str\u00f6m"}, {"ref_id": "b23", "title": "Automatic generator of minimal problem solvers", "journal": "", "year": "2008", "authors": "Zuzana Kukelova; Martin Bujnak; Tomas Pajdla"}, {"ref_id": "b24", "title": "A clever elimination strategy for efficient minimal solvers", "journal": "IEEE", "year": "2017", "authors": "Zuzana Kukelova; Joe Kileel; Bernd Sturmfels; Tomas Pajdla"}, {"ref_id": "b25", "title": "Efficient solvers for minimal problems by syzygy-based reduction", "journal": "", "year": "", "authors": " Viktor Larsson; Magnus Kalle\u00e5str\u00f6m;  Oskarsson"}, {"ref_id": "b26", "title": "Efficient solvers for minimal problems by syzygy-based reduction", "journal": "", "year": "2017-07-21", "authors": " Viktor Larsson; Magnus Kalle\u00e5str\u00f6m;  Oskarsson"}, {"ref_id": "b27", "title": "Polynomial solvers for saturated ideals", "journal": "", "year": "2017-10-22", "authors": " Viktor Larsson; Magnus Kalle\u00e5str\u00f6m;  Oskarsson"}, {"ref_id": "b28", "title": "Making minimal solvers for absolute pose estimation compact and robust", "journal": "", "year": "", "authors": "Zuzana Viktor Larsson; Yinqiang Kukelova;  Zheng"}, {"ref_id": "b29", "title": "Beyond grobner bases: Basis selection for minimal solvers", "journal": "", "year": "2018-06-18", "authors": "Magnus Viktor Larsson;  Oskarsson; Alge Kalle\u00e5str\u00f6m; Zuzana Wallis; Tom\u00e1s Kukelova;  Pajdla"}, {"ref_id": "b30", "title": "A method of obtaining the relative positions of four points from three perspective projections", "journal": "Image Vision Comput", "year": "1992", "authors": "Hugh Christopher Longuet- Higgins"}, {"ref_id": "b31", "title": "Distinctive Image Features from Scale-Invariant Keypoints", "journal": "International Journal of Computer Vision (IJCV)", "year": "2004", "authors": "David G Lowe"}, {"ref_id": "b32", "title": "Rank conditions on the multiple-view matrix", "journal": "International Journal of Computer Vision", "year": "2004", "authors": "Yi Ma; Kun Huang; Ren\u00e9 Vidal; Jana Kosecka; Shankar Sastry"}, {"ref_id": "b33", "title": "Deeper understanding of the homography decomposition for vision-based control", "journal": "INRIA", "year": "2007", "authors": "Ezio Malis; Manuel Vargas"}, {"ref_id": "b34", "title": "Local affine frames for wide-baseline stereo", "journal": "", "year": "2002-08-11", "authors": "Jiri Matas; Step\u00e1n Obdrz\u00e1lek; Ondrej Chum"}, {"ref_id": "b35", "title": "A minimal closed-form solution for multi-perspective pose estimation using points and lines", "journal": "", "year": "2018", "authors": "Pedro Miraldo; Tiago Dias; Srikumar Ramalingam"}, {"ref_id": "b36", "title": "An efficient solution to the five-point relative pose problem", "journal": "IEEE Transactions on Pattern Analysis and Machine Intelligence", "year": "2002", "authors": "David Nist\u00e9r"}, {"ref_id": "b37", "title": "Using galois theory to prove structure from motion algorithms are optimal", "journal": "", "year": "2007-06", "authors": "David Nist\u00e9r; Richard I Hartley; Henrik Stew\u00e9nius"}, {"ref_id": "b38", "title": "Visual odometry", "journal": "", "year": "2004", "authors": "David Nist\u00e9r; Oleg Naroditsky; James Bergen"}, {"ref_id": "b39", "title": "Four points in two or three calibrated views: Theory and practice", "journal": "International Journal of Computer Vision", "year": "2006", "authors": "David Nist\u00e9r; Frederik Schaffalitzky"}, {"ref_id": "b40", "title": "Minimal projective reconstruction for combinations of points and lines in three views", "journal": "Image Vision Comput", "year": "2004", "authors": "Magnus Oskarsson; Andrew Zisserman; Kalle\u00e5str\u00f6m "}, {"ref_id": "b41", "title": "Some results on minimal euclidean reconstruction from four points", "journal": "Journal of Mathematical Imaging and Vision", "year": "2006", "authors": "Long Quan; Bill Triggs; Bernard Mourrain"}, {"ref_id": "b42", "title": "Modeling and Recognition of Landmark Image Collections Using Iconic Scene Graphs", "journal": "International Journal of Computer Vision (IJCV)", "year": "2011", "authors": "Rahul Raguram; Changchang Wu; Jan-Michael Frahm; Svetlana Lazebnik"}, {"ref_id": "b43", "title": "Neighbourhood consensus networks", "journal": "", "year": "2018", "authors": "Ignacio Rocco; Mircea Cimpoi; Relja Arandjelovi; Akihiko Torii; Tomas Pajdla; Josef Sivic"}, {"ref_id": "b44", "title": "Robust and accurate line-and/or point-based pose estimation without manhattan assumptions", "journal": "", "year": "", "authors": "Yohann Sala\u00fcn; Renaud Marlet; Pascal Monasse"}, {"ref_id": "b45", "title": "Efficient & effective prioritized matching for large-scale imagebased localization", "journal": "IEEE Trans. Pattern Anal. Mach. Intell", "year": "2017", "authors": "Torsten Sattler; Bastian Leibe; Leif Kobbelt"}, {"ref_id": "b46", "title": "Structure-from-motion revisited", "journal": "", "year": "2002", "authors": "Johannes Lutz Sch\u00f6nberger; Jan-Michael Frahm"}, {"ref_id": "b47", "title": "Photo tourism: exploring photo collections in 3D", "journal": "", "year": "2006", "authors": "N Snavely; S M Seitz; R Szeliski"}, {"ref_id": "b48", "title": "Modeling the world from internet photo collections", "journal": "International Journal of Computer Vision (IJCV)", "year": "2008", "authors": "Noah Snavely; Steven M Seitz; Richard Szeliski"}, {"ref_id": "b49", "title": "Recent developments on direct relative orientation", "journal": "ISPRS J. of Photogrammetry and Remote Sensing", "year": "2006", "authors": "Henrik Stew\u00e9nius; Christopher Engels; David Nist\u00e9r"}, {"ref_id": "b50", "title": "Fredrik Kahl, and Magnus Oskarsson. City-scale localization for cameras with known vertical direction", "journal": "", "year": "2017", "authors": "Linus Sv\u00e4rm; Olof Enqvist"}, {"ref_id": "b51", "title": "InLoc: Indoor visual localization with dense matching and view synthesis", "journal": "", "year": "2018", "authors": "Hajime Taira; Masatoshi Okutomi; Torsten Sattler; Mircea Cimpoi; Marc Pollefeys; Josef Sivic; Tomas Pajdla; Akihiko Torii"}, {"ref_id": "b52", "title": "Cameras, Shapes, and Contours: Geometric Models in Computer Vision. (Cam\u00e9ras, formes et contours: mod\u00e8les g\u00e9om\u00e9triques en vision par ordinateur)", "journal": "", "year": "2018", "authors": "Matthew Trager"}, {"ref_id": "b53", "title": "Trinocular geometry revisited", "journal": "International Journal Computer Vision", "year": "2003", "authors": "Matthew Trager; Jean Ponce; Martial Hebert"}, {"ref_id": "b54", "title": "Minimal case relative pose computation using ray-point-ray features", "journal": "", "year": "2019", "authors": "Ji Zhao; Laurent Kneip; Yijia He; Jiayi Ma"}], "figures": [{"figure_label": "", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "l,I,m denote the joint camera map, which sends a point-line arrangement in space and m cameras to the resulting joint image. We say that the point-line problem (p, l, I, m) is minimal if \u2022 \u03a6 p,l,I,m is a dominant map 5 , i.e. a generic element (x, \u2113) in Y p,l,I,m has a solution, so \u03a6 \u22121 p,l,I,m (x, \u2113) \u2260 \u2205, and \u2022 the preimage \u03a6 \u22121 p,l,I,m (x, \u2113) of a generic element (x, \u2113) in Y p,l,I,m is finite.", "figure_data": ""}, {"figure_label": "1", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "f p d l f l a \u03b1 1021 111013 3 1005 5 2011 1 2003 2 2003 3 1030 0 1022 2 1014 4 1006 6 3001 1 2110 0 2102 1 (p, l, I)", "figure_data": ""}, {"figure_label": "31", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "3 ) 1 .316m\u22127=(2m\u22123)p f +(m\u22121)p d +2(m\u22122)l f +(m\u22122)l a . (Lemma Every balanced point-line problem with at least five points has exactly two cameras. Proof. Suppose (p, l, I, m) is a balanced point-line problem with m > 1 cameras and at least five points, i.e. p f + p d \u2265 5. In this case, the equality (3) implies", "figure_data": ""}, {"figure_label": "123", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Theorem 1 .Theorem 2 .= 3 :123There is no balanced point-line problem with seven or more cameras. Proof. Let (p, l, I, m) be a balanced point-line problem with m \u2265 7 cameras. By equality (3), we have 5 \u2261 p f + p d mod (m \u2212 2). (5) This implies p f + p d \u2265 5 if m \u2265 8, which contradicts Lemma 1, and thus we have only one remaining case to check: m = 7. From (5) and Lemma 1, we have p f + p d = 0 in the case of seven cameras. It means that there are no points, and thus there cannot be lines which are incident to points. So we have p f = 0, p d = 0, l a = 0, and (3) reduces to 35 = 10l f , which is clearly not possible. So there are no balanced point-line problems with seven or more cameras. There are 34 balanced point-line problems with 3, 4, 5 or 6 cameras. They are all listed in Tab. 1. Proof. We consider the different cases for 3 \u2264 m \u2264 6 and reason by cases. \u2022 m = 6: Due to (5) and Lemma 1, every balanced point-line problem with six cameras must have exactly one point. So we have p f = 1, p d = 0, and (3) reduces to 5 = 2l f + l a . This gives us three possibilities: (l f , l a ) \u2208 {(2, 1), (1, 3), (0, 5)} (see first row of Tab. 1). \u2022 m = 5: Due to (5) and Lemma 1, every balanced point-line problem with five cameras must have exactly two points. So we have p f = 2, p d = 0, and (3) reduces to 3 = 2l f + l a . This gives us two possibilities: (l f , l a ) \u2208 {(1, 1), (0, 3)}, which yield three point-line problems (see the first row of Tab. 1). \u2022 m = 4: Due to (5) and Lemma 1, every balanced pointline problem with four cameras must have either one point or three points. Let us first consider the case of a single point. Here we have p f = 1, p d = 0, and (3) reduces to 6 = 2l f + l a . This gives us four possibilities: (l f , l a ) \u2208 {(3, 0), (2, 2), (1, 4), (0, 6)} (see first row of Tab. 1). Secondly, we consider balanced point-line problems with four cameras and three points. If all three points are independent, (3) reduces to 1 = 2l f + l a , which has a single solution: (l f , l a ) = (0, 1). If not all three points are independent, we have p f = 2, p d = 1, and (3) reduces to 2 = 2l f + l a . This gives us two possibilities: (l f , l a ) \u2208 {(1, 0), (0, 2)}, which yield three point-line problems (see the first two rows of Tab. 1 for all four point-line problems with four cameras and three points). \u2022 m We first observe that each balanced point-line problem with three cameras must have at least one point. Otherwise we would have p f = 0, p d = 0 and l a = 0, so (3) would reduce to 11 = 2l f , which is impossible. Let us first consider the case of a single point. Here we have p f = 1, p d = 0, and (3) reduces to 8 = 2l f +l a . This gives us five possibilities: (l f , l a ) \u2208 {(4, 0), (3, 2), (2, 4), (1, 6), (0, 8)} (see second row of Tab. 1). Secondly, in the case of two points, we have p f = 2, p d = 0, and (3) reduces to 5 = 2l f + l a . This gives us three possibilities: (l f , l a ) \u2208 {(2, 1), (1, 3), (0, 5)}, which yield six point-line problems (see second row of Tab. 1). Thirdly, we consider the case of three points. If all three points are independent, (3) reduces to 2 = 2l f +l a . The two solutions (l f , l a ) \u2208 {(1, 0), (0, 2)} yield three point line problems (see last two rows of Tab. 1).", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "Corollary 2 .2A balanced point-line problem (p, l, I, m) is minimal if and only if the projection \u03c0 \u2032 Y is dominant. In that case, the degree of the minimal problem is the cardinality of the preimage \u03c0\u2032 Y \u22121 (Y ) of a generic joint image Y \u2208 Y p,l,I,m over the complex numbers. Proof. As we have observed in Step 2 in Section 4, a balanced point-line problem is minimal if and only if its joint camera map \u03a6 p,l,I,m is dominant. This happens if and only if \u03c0 Y is dominant. Due to Lemma 2, this is equivalent to that \u03c0 \u2032 Y is dominant. Similarly, for a generic Y \u2208 Y p,l,I,m , the cardinalities of the preimages \u03a6 \u22121 p,l,I,m (Y ), \u03c0 \u22121 Y (Y ) and \u03c0 \u2032 Y \u22121 (Y ) coincide due to Lemma 2.", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_5", "figure_caption": "ExampleFigure 2 :2Figure 2: Encoding problems with visible and ghost lines.", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_6", "figure_caption": "Figure 3 :3Figure 3: The lifting of the loop in the parameter space (downstairs) meets all solutions (upstairs).", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_7", "figure_caption": "(3): R([a, b, c]) = (I + [[a, b, c]] \u00d7 )(I \u2212 [[a, b, c]] \u00d7 ) \u22121 . (8)", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_8", "figure_caption": "Algorithm 2 (2Degree). Input: (p, l, I, m), a point-line minimal problem. Output: The degree of this problem. 1: Take a random Y 0 \u2208 Y p,l,I,m . 2: Compute the Gr\u00f6bner basis B of the ideal generated by F (C, Y 0 ) \u2282 F[C]. 3: return the number of monomials in variables C not divisible by the leading monomials of B.", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_0", "figure_caption": "p d l f l a \u03b1 2102 2 1040 0 1032 2 1024 4 1016 6 1008 8 2021 1 2013 2 2013 3 2005 3 2005 4 2005 5 3010 0 3002 2 2111 1 2103 1 2103 2 2103 3 3100 0 2201 1 5000 2 4100 3 3200 3 3200 4 2300 5", "figure_data": "m views4333333333333p (p, l, I)MinimalYYYYNNYYYYYYYDegree 544  *36055248026443232848024064216m views3333333322222p f p d l f l a \u03b1 3002 1 (p, l, I)MinimalYYYYYYYNYYYNNDegree3122244014414414464201612"}], "formulas": [{"formula_id": "formula_0", "formula_text": "X p,l,I = (X, L) \u2208 P 3 p \u00d7 (G 1,3 ) l \u2200(i, j) \u2208 I \u2236 X i \u2208 L j", "formula_coordinates": [3.0, 309.76, 221.79, 228.22, 17.2]}, {"formula_id": "formula_1", "formula_text": "P 1 = [R 1 t 1 ], . . . , P m = [R m t m ]", "formula_coordinates": [3.0, 355.54, 335.62, 142.91, 16.43]}, {"formula_id": "formula_2", "formula_text": "Y p,l,I,m = (x, \u2113) \u2208 P 2 m p \u00d7 (G 1,2 ) m l \u2200v = 1, . . . , m \u2200(i, j) \u2208 I \u2236 x v,i \u2208 \u2113 v,j", "formula_coordinates": [3.0, 318.83, 427.14, 226.46, 37.61]}, {"formula_id": "formula_3", "formula_text": "C m = (P 1 , . . . , P m ) \u2208 F 3\u00d74 m P i = [R i t i ], R i \u2208 SO(3), t i \u2208 F 3 , R 1 = I, t 1 = 0, t 2,1 = 1 .", "formula_coordinates": [3.0, 318.83, 647.23, 216.32, 36.06]}, {"formula_id": "formula_4", "formula_text": "Definition 1. Let \u03a6 p,l,I,m \u2236 X p,l,I \u00d7 C m \u21e2 Y p,", "formula_coordinates": [4.0, 50.11, 199.38, 188.19, 16.43]}, {"formula_id": "formula_5", "formula_text": "(X, C) \u2208 \u03a6 \u22121 p,l,I,m (x, \u2113) a ball B \u03b4 (X, C) such that \u03a6 p,l,I,m (B \u03b4 (X, C)) \u2282 B \u01eb (x, \u2113).", "formula_coordinates": [4.0, 84.71, 365.11, 201.42, 38.67]}, {"formula_id": "formula_6", "formula_text": "Minimal Y N N Y Y Y Y Y N N Y Y Y Degree >", "formula_coordinates": [5.0, 52.5, 136.47, 478.45, 20.86]}, {"formula_id": "formula_7", "formula_text": "dim(X p,l,I ) = 3 p f + p d + 4 l f + 2 l a .(1)", "formula_coordinates": [5.0, 96.01, 459.07, 190.35, 16.43]}, {"formula_id": "formula_8", "formula_text": "dim(Y p,l,I,m ) = m (2 p f + p d + 2 l f + l a ).(2)", "formula_coordinates": [5.0, 85.21, 627.48, 201.15, 16.43]}, {"formula_id": "formula_9", "formula_text": "3", "formula_coordinates": [5.0, 52.52, 703.98, 4.98, 7.24]}, {"formula_id": "formula_10", "formula_text": "p f + p d + 4 l f + 2 l a + 6 m \u2212 7 = m 2 p f + p d + 2 l f + l a .", "formula_coordinates": [5.0, 58.98, 701.78, 224.97, 11.39]}, {"formula_id": "formula_11", "formula_text": "6m\u22127 \u2265 (2m\u22123)p f +(m\u22121)(5\u2212p f )=(p f +5)m\u2212(2p f +5),", "formula_coordinates": [5.0, 309.73, 551.24, 234.5, 16.43]}, {"formula_id": "formula_12", "formula_text": "2(p f \u2212 1) \u2265 (p f \u2212 1)m.(4)", "formula_coordinates": [5.0, 381.27, 589.32, 163.84, 16.43]}, {"formula_id": "formula_13", "formula_text": "Inc = {(X, C, Y ) \u2208 X p,l,I \u00d7 C m \u00d7 Y p,l,I,m Y = \u03a6 p,l,I,m (X, C)}.", "formula_coordinates": [6.0, 326.09, 486.65, 201.78, 31.77]}, {"formula_id": "formula_14", "formula_text": "Inc \u2032 = {(C, Y ) \u2208 C m \u00d7 Y p,l,I,m \u2203X \u2208 X p,l,I \u2236 Y = \u03a6 p,l,I,m (X, C)}.", "formula_coordinates": [6.0, 333.79, 645.12, 186.38, 33.77]}, {"formula_id": "formula_15", "formula_text": "Inc Y p,l,I,m Inc \u2032 \u03c0 Y \u03c0 C,Y \u03c0 \u2032 Y Lemma 2. If m \u2265 2, a generic point (C, Y ) \u2208 Inc \u2032 has a single point in its preimage under \u03c0 C,Y .", "formula_coordinates": [7.0, 50.11, 72.26, 236.25, 97.53]}, {"formula_id": "formula_16", "formula_text": "rank P T 1 l 1 P T 2 l 2 . . . P T m l m \u2264 2. (6", "formula_coordinates": [7.0, 90.66, 601.69, 191.83, 12.67]}, {"formula_id": "formula_17", "formula_text": ")", "formula_coordinates": [7.0, 282.49, 603.79, 3.87, 8.91]}, {"formula_id": "formula_18", "formula_text": "rank P T 1 l 1,1 . . . P T m l m,ki \u2264 3, i = 1, . . . , p. (7)", "formula_coordinates": [7.0, 321.79, 477.62, 223.32, 12.67]}, {"formula_id": "formula_19", "formula_text": "3: Y 0 \u2190 \u03a6 p,l,I,m (X 0 , C 0 ) 4: return \"Y\" if rank J(C 0 , Y 0 ) = 6m \u2212 7, else \"N.\"", "formula_coordinates": [8.0, 55.43, 506.75, 214.85, 28.38]}], "doi": ""}