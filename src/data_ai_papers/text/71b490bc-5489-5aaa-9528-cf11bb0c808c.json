{"title": "Improving Information Extraction by Acquiring External Evidence with Reinforcement Learning", "authors": "Narasimhan Karthik;  Csail; Adam Yala; Regina Barzilay", "pub_date": "", "abstract": "Most successful information extraction systems operate with access to a large collection of documents. In this work, we explore the task of acquiring and incorporating external evidence to improve extraction accuracy in domains where the amount of training data is scarce. This process entails issuing search queries, extraction from new sources and reconciliation of extracted values, which are repeated until sufficient evidence is collected. We approach the problem using a reinforcement learning framework where our model learns to select optimal actions based on contextual information. We employ a deep Qnetwork, trained to optimize a reward function that reflects extraction accuracy while penalizing extra effort. Our experiments on two databases -of shooting incidents, and food adulteration cases -demonstrate that our system significantly outperforms traditional extractors and a competitive meta-classifier baseline. 1   ", "sections": [{"heading": "Introduction", "text": "In many realistic domains, information extraction (IE) systems require exceedingly large amounts of annotated data to deliver high performance. Increases in training data size enable models to handle robustly the multitude of linguistic expressions that convey the same semantic relation. Consider, for instance, an IE system that aims to identify entities such as the perpetrator and the number of vic- 1 Code is available at http://people.csail.mit. edu/karthikn/rl-ie/ ShooterName: Scott Westerhuis NumKilled: 6 A couple and four children found dead in their burning South Dakota home had been shot in an apparent murder-suicide, officials said Monday. ... Scott Westerhuis's cause of death was \"shotgun wound with manner of death as suspected suicide,\" it added in a statement. tims in a shooting incident (Figure 1). The document does not explicitly mention the shooter (Scott Westerhuis), but instead refers to him as a suicide victim. Extraction of the number of fatally shot victims is similarly difficult, as the system needs to infer that \"A couple and four children\" means six people. Even a large annotated training set may not provide sufficient coverage to capture such challenging cases.\nIn this paper, we explore an alternative approach for boosting extraction accuracy, when a large training corpus is not available. Instead, the proposed method utilizes external information sources to resolve ambiguities inherent in text interpretation. Specifically, our strategy is to find other documents that contain the information sought, expressed in a form that a basic extractor can \"understand\". For instance, Figure 2 shows two other articles describing the same event, wherein the entities of interest\nThe six members of a South Dakota family found dead in the ruins of their burned home were fatally shot, with one death believed to be a suicide, authorities said Monday.\nAG Jackley says all evidence supports the story he told based on preliminary findings back in September: Scott Westerhuis shot his wife and children with a shotgun, lit his house on fire with an accelerant, then shot himself with his shotgun.\nFigure 2: Two other articles on the same shooting case. The first article clearly mentions that six people were killed. The second one portrays the shooter in an easily extractable form.\n-the number of people killed and the name of the shooter -are expressed explicitly. Processing such stereotypical phrasing is easier for most extraction systems, compared to analyzing the original source document. This approach is particularly suitable for extracting information from news where a typical event is covered by multiple news outlets.\nThe challenges, however, lie in (1) performing event coreference (i.e. retrieving suitable articles describing the same incident) and (2) reconciling the entities extracted from these different documents. Querying the web (using the source article's title for instance) often retrieves documents about other incidents with a tangential relation to the original story. For example, the query \"4 adults, 1 teenager shot in west Baltimore 3 april 2015\" yields only two relevant articles among the top twenty results on Bing search, while returning other shooting events at the same location. Moreover, the values extracted from these different sources require resolution since some of them might be inaccurate.\nOne solution to this problem would be to perform a single search to retrieve articles on the same event and then reconcile values extracted from them (say, using a meta-classifier). However, if the confidence of the new set of values is still low, we might wish to perform further queries. Thus, the problem is inherently sequential, requiring alternating phases of querying to retrieve articles and integrating the extracted values.\nWe address these challenges using a Reinforcement Learning (RL) approach that combines query formulation, extraction from new sources, and value reconciliation. To effectively select among possible actions, our state representation encodes information about the current and new entity values along with the similarity between the source article and the newly retrieved document. The model learns to select good actions for both article retrieval and value reconciliation in order to optimize the reward function, which reflects extraction accuracy and includes penalties for extra moves. We train the RL agent using a Deep Q-Network (DQN) (Mnih et al., 2015) that is used to predict both querying and reconciliation choices simultaneously. While we use a maximum entropy model as the base extractor, this framework can be inherently applied to other extraction algorithms.\nWe evaluate our system on two datasets where available training data is inherently limited. The first dataset is constructed from a publicly available database of mass shootings in the United States. The database is populated by volunteers and includes the source articles. The second dataset is derived from a FoodShield database of illegal food adulterations. Our experiments demonstrate that the final RL model outperforms basic extractors as well as a meta-classifier baseline in both domains. For instance, in the Shootings domain, the average accuracy improvement over the meta-classifier is 7%.", "publication_ref": ["b16"], "figure_ref": ["fig_0", "fig_3", "fig_3"], "table_ref": []}, {"heading": "Related Work", "text": "Open Information Extraction Existing work in open IE has used external sources from the web to improve extraction accuracy and coverage (Agichtein and Gravano, 2000;Wu and Weld, 2010). Such research has focused on identifying multiple instances of the same relation, independent of the context in which this information appears. In contrast, our goal is to extract information from additional sources about a specific event described in a source article. Therefore, the novel challenge of our task resides in performing event coreference (Lee et al., 2012;Bejan and Harabagiu, 2014) (i.e identifying other sources describing the same event) while simultaneously reconciling extracted information. Moreover, relations typically considered by open IE systems have significantly higher coverage in online documents than a specific incident described in a few news sources. Hence, we require a different mechanism for finding and reconciling online information.\nEntity linking, multi-document extraction and event coreference Our work also relates to the task of multi-document information extraction, where the goal is to connect different mentions of the same entity across input documents (Mann and Yarowsky, 2005;Han et al., 2011;Durrett and Klein, 2014). Since this setup already includes multiple input documents, the model is not required to look for additional sources or decide on their relevance. Also, while the set of input documents overlap in terms of entities mentioned, they do not necessarily describe the same event. Given these differences in setup, the challenges and opportunities of the two tasks are distinct.", "publication_ref": ["b0", "b25", "b14", "b2", "b15", "b10", "b5"], "figure_ref": [], "table_ref": []}, {"heading": "Knowledge Base Completion and Online Search", "text": "Recent work has explored several techniques to perform Knowledge Base Completion (KBC) such as vector space models and graph traversal (Socher et al., 2013;Yang et al., 2014;Gardner et al., 2014;Neelakantan et al., 2015;Guu et al., 2015). Though our work also aims at increasing extraction recall for a database, traditional KBC approaches do not require searching for additional sources of information. West et al. (2014) explore query reformulation in the context of KBC. Using existing search logs, they learn how to formulate effective queries for different types of database entries. Once query learning is completed, the model employs several selected queries, and then aggregates the results based on retrieval ranking. This approach is complementary to the proposed method, and can be combined with our approach if search logs are available. Kanani and McCallum (2012) also combine search and information extraction. In their task of faculty directory completion, the system has to find documents from which to extract desired information. They employ reinforcement learning to address computational bottlenecks, by minimizing the number of queries, document downloads and extraction action. The extraction accuracy is not part of this optimization, since the baseline IE system achieves high performance on the relations of interest. Hence, given different design goals, the two RL formulations are very different. Our approach is also close in spirit to the AskMSR system (Banko et al., 2002) which aims at using information redundancy on the web to better answer questions. Though our goal is similar, we learn to query and consolidate the different sources of information instead of using predefined rules. Several slot-filling methods have experimented with query formulation over web-based corpora to populate knowledge bases (Surdeanu et al., 2010;Ji and Grishman, 2011).", "publication_ref": ["b19", "b8", "b18", "b9", "b24", "b13", "b1", "b20", "b12"], "figure_ref": [], "table_ref": []}, {"heading": "Framework", "text": "We model the information extraction task as a markov decision process (MDP), where the model learns to utilize external sources to improve upon extractions from a source article (see Figure 3). The MDP framework allows us to dynamically incorporate entity predictions while also providing flexibility to choose the type of articles to extract from. At each step, the system has to reconcile extracted values from a related article (e new ) with the current set of values (e cur ), and decide on the next query for retrieving more articles.\nWe represent the MDP as a tuple S, A, T, R , where S = {s} is the space of all possible states, A = {a = (d, q)} is the set of all actions, R(s, a) is the reward function, and T (s |s, a) is the transition function. We describe these in detail below.", "publication_ref": [], "figure_ref": ["fig_1"], "table_ref": []}, {"heading": "States", "text": "The state s in our MDP consists of the extractor's confidence in predicted entity values, the context from which the values are extracted and the similarity between the new document and the original one. We represent the state as a continuous realvalued vector (Figure 3) incorporating these pieces of information: 1. Confidence scores of current and newly extracted entity values. 2. One-hot encoding of matches between current and new values. 3. Unigram/tf-idf counts 2 of context words. These are words that occur in the neighborhood of the entity values in a document (e.g. the words which, left, people and wounded in the phrase \"which left 5 people wounded\"). 4. tf-idf similarity between the original article and the new article.  Actions At each step, the agent is required to take two actions -a reconciliation decision d and a query choice q. The decision d on the newly extracted values can be one of the following types: (1) accept a specific entity's value (one action per entity) 3 , (2) accept all entity values, ( 3) reject all values or (4) stop. In cases 1-3, the agent continues to inspect more articles, while the episode ends if a stop action (4) is chosen. The current values and confidence scores are simply updated with the accepted values and the corresponding confidences. 4 The choice q is used to choose the next query from a set of automatically generated alternatives (details below) in order to retrieve the next article.\nRewards The reward function is chosen to maximize the final extraction accuracy while minimizing the number of queries. The accuracy component is calculated using the difference between the accuracy of the current and the previous set of entity values:\nR(s, a) = entity j\nAcc(e j cur ) \u2212 Acc(e j prev )\nThere is a negative reward per step to penalize the agent for longer episodes.\nQueries The queries are based on automatically generated templates, created using the title of an article along with words 5 most likely to co-occur with each entity type in the training data.  We use a search engine to query the web for articles on the same event as the source article and retrieve the top k links per query. 6 Documents that are more than a month older than the original article are filtered out of the search results. Extract entities e new from y 14:\nCompute tf-idf similarity Z(x i , y) r \u2190 entity j Acc(e j cur ) \u2212 Acc(e j prev )\n23:\nSend (s end , r) to agent", "publication_ref": [], "figure_ref": ["fig_1"], "table_ref": []}, {"heading": "Reinforcement Learning for Information Extraction", "text": "In order to learn a good policy for an agent, we utilize the paradigm of reinforcement learning (RL).\nThe MDP described in the previous section can be viewed in terms of a sequence of transitions (s, a, r, s ). The agent typically utilizes a stateaction value function Q(s, a) to determine which action a to perform in state s. A commonly used technique for learning an optimal value function is Q-learning (Watkins and Dayan, 1992), in which the agent iteratively updates Q(s, a) using the rewards obtained from episodes. The updates are derived from the recursive Bellman equation (Sutton and Barto, 1998) for the optimal Q:\nQ i+1 (s, a) = E[r + \u03b3 max a Q i (s , a ) | s, a]\nHere, r = R(s, a) is the reward and \u03b3 is a factor discounting the value of future rewards and the expectation is taken over all transitions involving state s and action a.\nSince our problem involves a continuous state space S, we use a deep Q-network (DQN) (Mnih et al., 2015) as a function approximator Q(s, a) \u2248 Q(s, a; \u03b8). The DQN, in which the Q-function is approximated using a deep neural network, has been shown to learn better value functions than linear approximators (Narasimhan et al., 2015;He et al., 2015) and can capture non-linear interactions between the different pieces of information in our state.\nWe use a DQN consisting of two linear layers (20 hidden units each) followed by rectified linear units (ReLU), along with two separate output layers. 7 The network takes the continuous state vector s as input and predicts Q(s, d) and Q(s, q) for reconciliation decisions d and query choices q simultaneously using the different output layers (see Supplementary material for the model architecture).\nParameter Learning The parameters \u03b8 of the DQN are learnt using stochastic gradient descent with RMSprop (Tieleman and Hinton, 2012). Each parameter update aims to close the gap between the Q(s t , a t ; \u03b8) predicted by the DQN and the expected Q-value from the Bellman equation, r t + \u03b3 max a Q(s t+1 , a; \u03b8). Following Mnih et al. (2015), we make use of a (separate) target Qnetwork to calculate the expected Q-value, in order Sample random mini batch of transitions (s j , a j , r j , s j+1 ) from D 14:\ny j = r j , if s j+1 is terminal r j + \u03b3 max a Q(s j+1 , a ; \u03b8 t ), else 15:\nPerform gradient descent step on the loss L(\u03b8) = (y j \u2212 Q(s j , a j ; \u03b8)) 2", "publication_ref": ["b23", "b16", "b17", "b11", "b22", "b16"], "figure_ref": [], "table_ref": []}, {"heading": "16:", "text": "if s t+1 == s end then break to have 'stable updates'. The target Q-network is periodically updated with the current parameters \u03b8. We also make use of an experience replay memory D to store transitions. To perform updates, we sample a batch of transitions (\u015d,\u00e2,\u015d , r) at random from D and minimize the loss function 8 :\nL(\u03b8) = E\u015d ,\u00e2 [(y \u2212 Q(\u015d,\u00e2; \u03b8)) 2 ]\nwhere y = r + \u03b3 max a Q(\u015d , a ; \u03b8 t ) is the target Qvalue. The learning updates are made every training step using the following gradients:\n\u2207 \u03b8 L(\u03b8) = E\u015d ,\u00e2 [2(y \u2212 Q(\u015d,\u00e2; \u03b8))\u2207 \u03b8 Q(\u015d,\u00e2; \u03b8)]\nAlgorithm 2 details the DQN training procedure.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Experimental Setup", "text": "Data We perform experiments on two different datasets. For the first set, we collected data from the Gun Violence archive, 9 a website tracking shootings in the United States. The data contains a news article on each shooting and annotations for (1) the name of the shooter, (2) the number of people killed, (3) the number of people wounded, and (4) the city where  the incident took place. We consider these as the entities of interest, to be extracted from the articles. The second dataset we use is the Foodshield EMA database 10 documenting adulteration incidents since 1980. This data contains annotations for (1) the affected food product, (2) the adulterant and (3) the location of the incident. Both datasets are classic examples where the number of recorded incidents is insufficient for large-scale IE systems to leverage.\nFor each source article in the above databases, we download extra articles (top 20 links) using the Bing Search API 11 with different automatically generated queries. We use only the source articles from the train portion to learn the parameters of the base extractor. The entire train set with downloaded articles is used to train the DQN agent and the metaclassifier baseline (described below). All parameters are tuned on the dev set. For the final results, we train the models on the combined train and dev sets and use the entire test set (source + downloaded articles) to evaluate. Table 2 provides data statistics.\nExtraction model We use a maximum entropy classifier as the base extraction system, since it provides flexibility to capture various local context features and has been shown to perform well for information extraction (Chieu and Ng, 2002). The classifier is used to tag each word in a document as one of the entity types or not (e.g. {Shooter-Name, NumKilled, NumWounded, City, Other} in the Shootings domain). Then, for each tag except Other, we choose the mode of the values to obtain the set of entity extractions from the article. 12 Features used in the classifier are provided in the Supplementary material.\nThe features and context window c = 4 of neighboring words are tuned to maximize performance on a dev set. We also experimented with a conditional random field (CRF) (with the same features) for the sequence tagging (Culotta and McCallum, 2004) but obtained worse empirical performance (see Section 6). The parameters of the base extraction model are not changed during training of the RL model. Evaluation We evaluate the extracted entity values against the gold annotations and report the corpus-level average accuracy on each entity type. For entities like ShooterName, the annotations (and the news articles) often contain multiple names (first and last) in various combinations, so we consider retrieving either name as a successful extraction. For all other entities, we look for exact matches.\nBaselines We explore 4 types of baselines:\nBasic extractors: We use the CRF and the Maxent classifier mentioned previously.\nAggregation systems: We examine two systems that perform different types of value reconciliation. The first model (Confidence) chooses entity values with the highest confidence score assigned by the base extractor. The second system (Majority) takes a majority vote over all values extracted from these articles. Both methods filter new entity values using a threshold \u03c4 on the cosine similarity over the tf-idf representations of the source and new articles.\nMeta-classifer: To demonstrate the importance of modeling the problem in the RL framework, we consider a meta-classifier baseline. The classifier operates over the same input state space and produces the same set of reconciliation decisions {d} as the DQN. For training, we use the original source article for each event along with a related downloaded article to compute the state. If the downloaded article has the correct value and the original one does not, we label it as a positive example for that entity class. If multiple such entity classes exist, we create several training instances with appropriate labels, and if none exist, we use the label corresponding to the reject all action. For each test event, the classifier is used to provide decisions for all the downloaded articles and the final extraction is performed by aggregating the value predictions using the Confidence-based scheme described above.\nOracle: Finally, we also have an ORACLE score which is computed assuming perfect reconciliation and querying decisions on top of the Maxent base extractor. This helps us analyze the contribution of the RL system in isolation of the inherent limitations of the base extractor.", "publication_ref": ["b3", "b4"], "figure_ref": [], "table_ref": ["tab_5"]}, {"heading": "RL models", "text": "We perform experiments using three variants of RL agents -(1) RL-Basic, which performs only reconciliation decisions 13 , (2) RL-Query, which takes only query decisions with the reconciliation strategy fixed (similar to Kanani and McCallum (2012)), and (3) RL-Extract, our full system incorporating both reconciliation and query decisions.\nWe train the models for 10000 steps every epoch using the Maxent classifier as the base extractor, and evaluate on the entire test set every epoch. The final accuracies reported are averaged over 3 independent runs; each run's score is averaged over 20 epochs after 100 epochs of training. The penalty per step is set to -0.001. For the DQN, we use the dev set to tune all parameters. We used a replay memory D of size 500k, and a discount (\u03b3) of 0.8. We set the learning rate to 2.5E \u22125 . The in -greedy exploration is annealed from 1 to 0.1 over 500k transitions. The target-Q network is updated every 5k steps.", "publication_ref": ["b13"], "figure_ref": [], "table_ref": []}, {"heading": "Results", "text": "Performance Table 3 demonstrates that our system (RL-Extract) obtains a substantial gain in accuracy over the basic extractors on all entity types over both domains. For instance, RL-Extract is 11.4% more accurate than the basic Maxent extractor on City and 7.1% better on NumKilled, while also achieving gains of more than 5% on the other entities on the Shootings domain. The gains on the Adulteration dataset are also significant, up to a 11.5% increase on the Location entity.\nWe can also observe that simple aggregation schemes like the Confidence and Majority baselines don't handle the complexity of the task well. RL-Extract outperforms these by 7.2% on Shootings and 5% on Adulteration averaged over all entities. Further, the importance of sequential decisionmaking is established by RL-Extract performing significantly better than the meta-classifier (7.0% on Shootings over all entities). This is also due to the fact that the meta-classifier aggregates over the entire set of extra documents, including the long tail of noisy, irrelevant documents. Finally, we see the advantage of enabling the RL system to select queries as our full model RL-Extract obtains significant im-    provements over RL-Basic on both domains. The full model also outperforms RL-Query, demonstrating the importance of performing both query selection and reconciliation in a joint fashion.\nFigure 4 shows the learning curve of the agent by measuring reward on the test set after each training epoch. The reward improves gradually and the accuracy on each entity increases simultaneously. Table 4 provides some examples where our model is able to extract the right values when the baseline fails. One can see that in most cases this is due to the model making use of articles with prototypical language or articles containing the entities in readily extractable form.  place), we also experiment with using Confidence and Majority-based reconciliation schemes for RL-Extract. We observe that the Replace scheme performs much better than the others (2-6% on all entities) and believe this is because it provides the agent with more flexibility in choosing the final values.\nFrom the same table, we see that using the tfidf counts of context words as part of the state provides better performance than using no context or using simple unigram counts. In terms of reward structure, providing rewards after each step is empirically found to be significantly better (>10% on average) compared to a single delayed reward per episode. The last column shows the average number of steps per episode -the values range from 6.8 to 10.0 steps for the different schemes. The best system (RL-Extract with Replace, tf-idf and step-based rewards) uses 9.4 steps per episode.", "publication_ref": [], "figure_ref": ["fig_5"], "table_ref": ["tab_6", "tab_7"]}, {"heading": "Conclusions", "text": "In this paper, we explore the task of acquiring and incorporating external evidence to improve information extraction accuracy for domains with limited access to training data. This process comprises issuing search queries, extraction from new sources and reconciliation of extracted values, repeated until sufficient evidence is obtained. We use a reinforcement learning framework and learn optimal action sequences to maximize extraction accuracy while penalizing extra effort. We show that our model, trained as a deep Q-network, outperforms traditional extractors by 7.2% and 5% on average on two different domains, respectively. We also demonstrate the importance of sequential decision-making by comparing our model to a meta-classifier operating on the same space, obtaining up to a 7% gain.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Analysis", "text": "We also analyze the importance of different reconciliation schemes, rewards and contextvectors in RL-Extract on the Shootings domain (Table 5). In addition to simple replacement (Re-", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Acknowledgements", "text": "We thank David Alvarez, Tao Lei and Ramya Ramakrishnan for helpful discussions and feedback, and the members of the MIT NLP group and the anonymous reviewers for their insightful comments. We also gratefully acknowledge support from a Google faculty award.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "", "text": "Annual Meeting of the Association for Computational Linguistics, pages 118-127. Association for Computational Linguistics. Bishan Yang, Wen-tau Yih, Xiaodong He, Jianfeng Gao, and Li Deng. 2014. Embedding entities and relations for learning and inference in knowledge bases. arXiv preprint arXiv:1412.6575.", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Snowball: Extracting relations from large plain-text collections", "journal": "ACM", "year": "2000", "authors": "Eugene Agichtein; Luis Gravano"}, {"ref_id": "b1", "title": "Askmsr: Question answering using the worldwide web", "journal": "", "year": "2002", "authors": "Michele Banko; Eric Brill; Susan Dumais; Jimmy Lin"}, {"ref_id": "b2", "title": "Unsupervised event coreference resolution", "journal": "Computational Linguistics", "year": "2014", "authors": "Adrian Cosmin; Sanda Bejan;  Harabagiu"}, {"ref_id": "b3", "title": "A maximum entropy approach to information extraction from semistructured and free text", "journal": "", "year": "2002", "authors": "Hai Leong Chieu; Hwee Tou Ng"}, {"ref_id": "b4", "title": "Confidence estimation for information extraction", "journal": "Association for Computational Linguistics", "year": "2004", "authors": "Aron Culotta; Andrew Mccallum"}, {"ref_id": "b5", "title": "A joint model for entity analysis: Coreference, typing, and linking", "journal": "", "year": "2014", "authors": "Greg Durrett; Dan Klein"}, {"ref_id": "b6", "title": "Open information extraction: The second generation", "journal": "", "year": "2011", "authors": "Oren Etzioni; Anthony Fader; Janara Christensen; Stephen Soderland; Mausam Mausam"}, {"ref_id": "b7", "title": "Identifying relations for open information extraction", "journal": "", "year": "2011", "authors": "Anthony Fader; Stephen Soderland; Oren Etzioni"}, {"ref_id": "b8", "title": "Incorporating vector space similarity in random walk inference over knowledge bases", "journal": "", "year": "2014", "authors": "Matt Gardner; Partha Talukdar; Jayant Krishnamurthy; Tom Mitchell"}, {"ref_id": "b9", "title": "Traversing knowledge graphs in vector space", "journal": "", "year": "2015-09", "authors": "Kelvin Guu; John Miller; Percy Liang"}, {"ref_id": "b10", "title": "Collective entity linking in web text: a graph-based method", "journal": "ACM", "year": "2011", "authors": "Xianpei Han; Le Sun; Jun Zhao"}, {"ref_id": "b11", "title": "Deep reinforcement learning with an action space defined by natural language", "journal": "", "year": "2015", "authors": "Ji He; Jianshu Chen; Xiaodong He; Jianfeng Gao; Lihong Li; Li Deng; Mari Ostendorf"}, {"ref_id": "b12", "title": "Knowledge base population: Successful approaches and challenges", "journal": "", "year": "2011", "authors": "Heng Ji; Ralph Grishman"}, {"ref_id": "b13", "title": "Selecting actions for resource-bounded information extraction using reinforcement learning", "journal": "ACM", "year": "2012", "authors": "H Pallika; Andrew K Kanani;  Mccallum"}, {"ref_id": "b14", "title": "Joint entity and event coreference resolution across documents", "journal": "Association for Computational Linguistics", "year": "2012", "authors": "Heeyoung Lee; Marta Recasens; Angel Chang; Mihai Surdeanu; Dan Jurafsky"}, {"ref_id": "b15", "title": "Multi-field information extraction and cross-document fusion", "journal": "Association for Computational Linguistics", "year": "2005", "authors": "S Gideon; David Mann;  Yarowsky"}, {"ref_id": "b16", "title": "Dharshan Kumaran, Daan Wierstra, Shane Legg, and Demis Hassabis", "journal": "Charles Beattie", "year": "2015", "authors": "Volodymyr Mnih; Koray Kavukcuoglu; David Silver; Andrei A Rusu; Joel Veness; Marc G Bellemare; Alex Graves; Martin Riedmiller; Andreas K Fidjeland; Georg Ostrovski; Stig Petersen"}, {"ref_id": "b17", "title": "Language understanding for text-based games using deep reinforcement learning", "journal": "", "year": "2015", "authors": "Karthik Narasimhan; Tejas Kulkarni; Regina Barzilay"}, {"ref_id": "b18", "title": "Compositional vector space models for knowledge base completion", "journal": "Association for Computational Linguistics", "year": "2015-07", "authors": "Arvind Neelakantan; Benjamin Roth; Andrew Mc-Callum"}, {"ref_id": "b19", "title": "Reasoning with neural tensor networks for knowledge base completion", "journal": "", "year": "2013", "authors": "Richard Socher; Danqi Chen; D Christopher; Andrew Manning;  Ng"}, {"ref_id": "b20", "title": "A simple distant supervision approach for the tac-kbp slot filling task", "journal": "", "year": "2010", "authors": "Mihai Surdeanu; David Mcclosky; Julie Tibshirani; John Bauer; X Angel;  Chang; I Valentin; Christopher D Spitkovsky;  Manning"}, {"ref_id": "b21", "title": "Introduction to reinforcement learning", "journal": "MIT Press", "year": "1998", "authors": "S Richard; Andrew G Sutton;  Barto"}, {"ref_id": "b22", "title": "Lecture 6.5-rmsprop: Divide the gradient by a running average of its recent magnitude", "journal": "", "year": "2012", "authors": "Tijmen Tieleman; Geoffrey Hinton"}, {"ref_id": "b23", "title": "Qlearning", "journal": "Machine learning", "year": "1992", "authors": "Jch Christopher; Peter Watkins;  Dayan"}, {"ref_id": "b24", "title": "Knowledge base completion via search-based question answering", "journal": "ACM", "year": "2014", "authors": "Robert West; Evgeniy Gabrilovich; Kevin Murphy; Shaohua Sun; Rahul Gupta; Dekang Lin"}, {"ref_id": "b25", "title": "Open information extraction using wikipedia", "journal": "", "year": "2010", "authors": "Fei Wu;  Daniel S Weld"}], "figures": [{"figure_label": "1", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Figure 1 :1Figure1: Sample news article on a shooting case. Note how the article contains both the name of the shooter and the number of people killed but both pieces of information require complex extraction schemes.", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Figure 3 :3Figure 3: Left: Illustration of a transition in the MDP -the top box in each state shows the current entities and the bottom one consists of the new entities extracted from a downloaded article on the same event. Right: Sample state representation (bottom) in the MDP based on current and new values of entities (top). currentConf : confidence scores of current entities, newConf : confidence scores of new entities, contextWords: tf-idf counts of context words.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "TransitionsEach episode starts off with a single source article x i from which an initial set of entity values are extracted. The subsequent steps in the episode involve the extra articles, downloaded using different types of query formulations based on the source article. A single transition in the episode consists of the agent being given the state s containing information about the current and new set of values (extracted from a single article) using which the next action a = (d, q) is chosen. The transition function T (s |s, a) incorporates the reconciliation decision d from the agent in state s along with the values from the next article retrieved using query q and produces the next state s . The episode stops whenever d is a stop decision. Algorithm 1 details the entire MDP framework for the training phase. During the test phase, each source article is handled only once in a single episode (lines 8-23).Algorithm 1 MDP framework for Information Extraction (Training Phase) 1: Initialize set of original articles X 2: for x i \u2208 X do 3: for each query template T q do 4: Download articles with query T q (x i )", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Algorithm 22Training Procedure for DQN agent with -greedy exploration 1: Initialize experience memory D 2: Initialize parameters \u03b8 randomly 3: for episode = 1, M do s t , a) for all actions a 10: Select a t = argmax Q(s t , a) 11: Execute action a t and observe reward r t and new state s t+1 12:Store transition (s t , a t , r t , s t+1 ) in D 13:", "figure_data": ""}, {"figure_label": "4", "figure_type": "figure", "figure_id": "fig_5", "figure_caption": "Figure 4 :4Figure 4:Evolution of average reward (solid black) and accuracy on various entities (dashed lines; red=ShooterName, magenta=NumKilled, blue=NumWounded, green=City) on the test set of the Shootings domain.", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_0", "figure_caption": "", "figure_data": "Current Values: ShooterName \u2192 Scott Westerhuis NumKilled \u2192 4 NumWounded \u2192 2 City \u2192 Platte New Values: ShooterName \u2192 Scott Westerhuis NumKilled \u2192 6 NumWounded \u2192 0 City \u2192 PlatteState 1NumWounded City State 20 S.D.State: 0.3, 0.2, 0.5, 0.1, 0.4, 0.6, 0.2, 0.4, 1, 0, 0, 1, 0, 1, 1, 0, 0.2, 0.3, ..., 0.1, 0.5, 0.65 \u2190 document tf-idf similarity \u2190 currentConf \u2190 newConf \u2190 matches \u2190 contextWords"}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_1", "figure_caption": "provides some examples -for instance, the second template contains words such as arrested and identified which often appear around the name of the shooter.", "figure_data": "titletitle + (police | identified | arrested | charged)title + (killed | shooting | injured | dead | people)title + (injured | wounded | victim)title + (city | county | area)"}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_3", "figure_caption": "Reconcile(e cur , e new , d)", "figure_data": "15:Compute context vector C(y)y)17: 18: 19:and C(y)Send (s, r) to agent Get decision d, query q from agent if q == \"end_episode\" then break20: 21: e cur \u2190 22: e prev \u2190 e cur"}, {"figure_label": "2", "figure_type": "table", "figure_id": "tab_5", "figure_caption": "Stats for Shootings and Adulteration datasets", "figure_data": ""}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_6", "figure_caption": "Accuracy of various baselines (italics), our system (DQN) and the Oracle on Shootings and Adulteration datasets. Agg. refers to aggregation baselines. Bold indicates best system scores. * statistical significance of p < 0.0005 vs basic Maxent extractor using the Student-t test. Numbers in parentheses indicate the optimal threshold (\u03c4 ) for the aggregation baselines. Confidence-based reconciliation was used for RL-Query. Action News that Thomas Lee has been arrested in Mississippi ... Sgt . Stewart Smith, with the Troup County Sheriff's office, said.RL-Extract: LeeLee is accused of killing his wife, Christie; ...", "figure_data": "SystemShootings ShooterName NumKilled NumWoundedCityFoodAdulteration Adulterant LocationCRF extractor9.565.464.547.941.228.351.7Maxent extractor45.269.768.653.756.052.767.8Confidence Agg. (\u03c4 )45.2 (0.6)70.3 (0.6)72.3 (0.6)55.8 (0.6) 56.0 (0.8)54.0 (0.8)69.2 (0.6)Majority Agg. (\u03c4 )47.6 (0.6)69.1 (0.9)68.6 (0.9)54.7 (0.7) 56.7 (0.5) 50.6 (0.95) 72.0 (0.4)Meta-classifier45.270.768.455.355.452.772.0RL-Basic45.271.270.154.057.055.176.1RL-Query (conf)39.666.669.444.439.435.966.4RL-Extract50.077.6  *74.6  *65.6  *59.6  *58.9  *79.3  *ORACLE57.186.483.371.864.860.883.9EntitySystem: ValueExampleShooterName A source tells Channel 2 NumKilled Basic: Stewart Shooting leaves 25 year old Pittsfield man dead , 4 injured Basic: 0 One man is dead after a shooting Saturday night at the intersection of Dewey RL-Extract: 1 Avenue and Linden Street.NumWoundedBasic: 0 RL-Extract: 1Three people are dead and a fourth is in the hospital after a murder suicide 3 dead, 1 injured in possible Fla. murder-suicideCityBasic: EnglewoodA 2 year old girl and four other people were wounded in a shooting in West Englewood Thursday night, police saidRL-Extract: ChicagoAt least 14 people were shot across Chicago between noon and 10:30 p.m. Thursday. The last shooting left five people wounded."}, {"figure_label": "4", "figure_type": "table", "figure_id": "tab_7", "figure_caption": "Sample outputs (along with corresponding article snippets) on the Shootings domain showing correct predictions from RL-Extract where the basic extractor (Maxent) fails.", "figure_data": ""}, {"figure_label": "5", "figure_type": "table", "figure_id": "tab_9", "figure_caption": "Effect of using different reconciliation schemes, context-vectors, and rewards in our RL framework (Shootings domain). The last row is the overall best scheme (deviations from this are in italics). Context refers to the type of word counts used in the state vector to represent entity context. Rewards are either per step or per episode. (S: ShooterName, K: NumKilled, W: NumWounded, C: City, Steps: Average number of steps per episode)", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "R(s, a) = entity j", "formula_coordinates": [4.0, 95.61, 596.65, 71.43, 23.64]}, {"formula_id": "formula_1", "formula_text": "Q i+1 (s, a) = E[r + \u03b3 max a Q i (s , a ) | s, a]", "formula_coordinates": [5.0, 329.86, 219.64, 193.48, 18.93]}, {"formula_id": "formula_2", "formula_text": "y j = r j , if s j+1 is terminal r j + \u03b3 max a Q(s j+1 , a ; \u03b8 t ), else 15:", "formula_coordinates": [6.0, 72.5, 267.3, 226.41, 35.02]}, {"formula_id": "formula_3", "formula_text": "L(\u03b8) = E\u015d ,\u00e2 [(y \u2212 Q(\u015d,\u00e2; \u03b8)) 2 ]", "formula_coordinates": [6.0, 115.82, 426.12, 139.16, 20.95]}, {"formula_id": "formula_4", "formula_text": "\u2207 \u03b8 L(\u03b8) = E\u015d ,\u00e2 [2(y \u2212 Q(\u015d,\u00e2; \u03b8))\u2207 \u03b8 Q(\u015d,\u00e2; \u03b8)]", "formula_coordinates": [6.0, 80.13, 502.84, 210.54, 18.93]}], "doi": ""}