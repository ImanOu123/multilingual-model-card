{"title": "SinGAN: Learning a Generative Model from a Single Natural Image", "authors": "Tamar Rott; Shaham Technion; Michaeli Tomer;  Technion", "pub_date": "", "abstract": "Random samples from a single image Single training image Figure 1: Image generation learned from a single training image. We propose SinGAN-a new unconditional generative model trained on a single natural image. Our model learns the image's patch statistics across multiple scales, using a dedicated multi-scale adversarial training scheme; it can then be used to generate new realistic image samples that preserve the original patch distribution while creating new object configurations and structures.", "sections": [{"heading": "Introduction", "text": "Generative Adversarial Nets (GANs) [19] have made a dramatic leap in modeling high dimensional distributions of visual data. In particular, unconditional GANs have shown remarkable success in generating realistic, high quality samples when trained on class specific datasets (e.g., faces [33], bedrooms [47]). However, capturing the distribution of highly diverse datasets with multiple object classes (e.g. ImageNet [12]), is still considered a major challenge and often requires conditioning the generation on another input signal [6] or training the model for a specific task (e.g. super-resolution [30], inpainting [41], retargeting [45]).\nHere, we take the use of GANs into a new realmunconditional generation learned from a single natural image. Specifically, we show that the internal statistics of patches within a single natural image typically carry enough information for learning a powerful generative model. SinGAN, our new single image generative model, allows us to deal with general natural images that contain complex structures and textures, without the need to rely on the existence of a database of images from the same class. This is achieved by a pyramid of fully convolutional light-weight GANs, each is responsible for capturing the distribution of patches at a different scale. Once trained, SinGAN can produce diverse high quality image samples (of arbitrary dimensions), which semantically resemble the training image, yet contain new object configurations and structures (Fig. 1).\nModeling the internal distribution of patches within a single natural image has been long recognized as a powerful prior in many computer vision tasks [64]. Classical examples include denoising [65], deblurring [39], super resolution [18], dehazing [2,15], and image editing [37,21,9,11,50]. The most closley related work in this context is [48], where a bidirectional patch similarity measure is defined and optimized to guarantee that the patches of an image after manipulation are the same as the original ones. Motivated by these works, here we show how SinGAN can be used within a simple unified learning framework to solve a variety of image manipulation tasks, including paint-to-image, editing, harmonization, superresolution, and animation from a single image. In all these cases, our model produces high quality results that preserve the internal patch statistics of the training image (see Fig. 2 and our project webpage). All tasks are achieved with the same generative network, without any additional information or further training beyond the original training image.", "publication_ref": ["b18", "b32", "b46", "b11", "b5", "b29", "b40", "b44", "b63", "b64", "b38", "b17", "b1", "b14", "b36", "b20", "b8", "b10", "b49", "b47"], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "Related Work", "text": "Single image deep models Several recent works proposed to \"overfit\" a deep model to a single training example [51,60,46,7,1]. However, these methods are designed for specific tasks (e.g., super resolution [46], texture expansion [60]). Shocher et al. [44,45] were the first to introduce an internal GAN based model for a single natural image, and illustrated it in the context of retargeting. However, their generation is conditioned on an input image (i.e., mapping images to images) and is not used to draw random samples. In contrast, our framework is purely generative (i.e. maps noise to image samples), and thus suits many different image manipulation tasks. Unconditional single image GANs have been explored only in the context of texture generation [3,27,31]. These models do not generate meaningful samples when trained on non-texture images (Fig. 3). Our method, on the other hand, is not restricted to texture and can handle general natural images (e.g., Fig. 1). Single image models for texture generation [3,16] are not designed to deal with natural images. Our model can produce realistic image samples that consist of complex textures and non-reptititve global structures.", "publication_ref": ["b50", "b59", "b45", "b6", "b0", "b45", "b59", "b43", "b44", "b2", "b26", "b30", "b2", "b15"], "figure_ref": ["fig_1"], "table_ref": []}, {"heading": "Training Image", "text": "", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "SinGAN (Ours)", "text": "PSGAN Deep Texture Synthesis\nGenerative models for image manipulation The power of adversarial learning has been demonstrated by recent GAN-based methods, in many different image manipulation tasks [61,10,62,8,53,56,42,53]. Examples include interactive image editing [61,10], sketch2image [8,43], and other image-to-image translation tasks [62,52,54]. However, all these methods are trained on class specific datasets, and here too, often condition the generation on another input signal. We are not interested in capturing common features among images of the same class, but rather con- Our model consists of a pyramid of GANs, where both training and inference are done in a coarse-to-fine fashion. At each scale, G n learns to generate image samples in which all the overlapping patches cannot be distinguished from the patches in the down-sampled training image, x n , by the discriminator D n ; the effective patch size decreases as we go up the pyramid (marked in yellow on the original image for illustration). The input to G n is a random noise image z n , and the generated image from the previous scalex n , upsampled to the current resolution (except for the coarsest level which is purely generative). The generation process at level n involves all generators {G N . . . G n } and all noise maps {z N , . . . , z n } up to this level. See more details at Sec. 2. \u2026 + + \u2026 Figure 5: Single scale generation. At each scale n, the image from the previous scale,x n+1 , is upsampled and added to the input noise map, z n . The result is fed into 5 conv layers, whose output is a residual image that is added back to (x n+1 ) \u2191 r . This is the outputx n of G n . sider a different source of training data -all the overlapping patches at multiple scales of a single natural image. We show that a powerful generative model can be learned from this data, and can be used in a number of image manipulation tasks.\nReal Fake Effective", "publication_ref": ["b60", "b9", "b61", "b7", "b52", "b55", "b41", "b52", "b60", "b9", "b7", "b42", "b61", "b51", "b53"], "figure_ref": [], "table_ref": []}, {"heading": "Method", "text": "Our goal is to learn an unconditional generative model that captures the internal statistics of a single training image x. This task is conceptually similar to the conventional GAN setting, except that here the training samples are patches of a single image, rather than whole image samples from a database.\nWe opt to go beyond texture generation, and to deal with more general natural images. This requires capturing the statistics of complex image structures at many different scales. For example, we want to capture global properties such as the arrangement and shape of large objects in the image (e.g. sky at the top, ground at the bottom), as well as fine details and texture information. To achieve that, our generative framework, illustrated in Fig. 4, consists of a hierarchy of patch-GANs (Markovian discriminator) [31,26], where each is responsible for capturing the patch distribution at a different scale of x. The GANs have small receptive fields and limited capacity, preventing them from memorizing the single image. While similar multi-scale architectures have been explored in conventional GAN settings (e.g. [28,52,29,52,13,24]), we are the first explore it for internal learning from a single image.", "publication_ref": ["b30", "b25", "b27", "b51", "b28", "b51", "b12", "b23"], "figure_ref": ["fig_2"], "table_ref": []}, {"heading": "Multi-scale architecture", "text": "Our model consists of a pyramid of generators, {G 0 , . . . , G N }, trained against an image pyramid of x: {x 0 , . . . , x N }, where x n is a downsampled version of x by a factor r n , for some r > 1. Each generator G n is responsible of producing realistic image samples w.r.t. the patch distribution in the corresponding image x n . This is achieved through adversarial training, where G n learns to fool an associated discriminator D n , which attempts to distinguish patches in the generated samples from patches in x n .\nThe generation of an image sample starts at the coarsest scale and sequentially passes through all generators up to the finest scale, with noise injected at every scale. All the generators and discriminators have the same receptive field and thus capture structures of decreasing size as we go up the generation process. At the coarsest scale, the generation is purely generative, i.e. G N maps spatial white Gaussian noise z N to an image samplex N ,\nx N = G N (z N ). (1)\nThe effective receptive field at this level is typically \u223c 1/2 of the image's height, hence G N generates the general layout of the image and the objects' global structure. Each of the generators G n at finer scales (n < N ) adds details that were not generated by the previous scales. Thus, in addition to spatial noise z n , each generator G n accepts an upsampled version of the image from the coarser scale, i.e.,\nx n = G n (z n , (x n+1 ) \u2191 r ) , n < N.(2)\nAll the generators have a similar architecture, as depicted in Fig. 5. Specifically, the noise z n is added to the image (x n+1 ) \u2191 r , prior to being fed into a sequence of convolutional layers. This ensures that the GAN does not disregard the noise, as often happens in conditional schemes involving randomness [62,36,63]. The role of the convonlutional layers is to generate the missing details in (x n+1 ) \u2191 r (residual learning [22,57]). Namely, G n performs the operatio\u00f1\nx n = (x n+1 ) \u2191 r + \u03c8 n (z n + (x n+1 ) \u2191 r ) ,(3)\nwhere \u03c8 n is a fully convolutional net with 5 conv-blocks of the form Conv(3 \u00d7 3)-BatchNorm-LeakyReLU [25]. We start with 32 kernels per block at the coarsest scale and increase this number by a factor of 2 every 4 scales. Because the generators are fully convolutional, we can generate images of arbitrary size and aspect ratio at test time (by changing the dimensions of the noise maps).", "publication_ref": ["b61", "b35", "b62", "b21", "b56", "b24"], "figure_ref": [], "table_ref": []}, {"heading": "Training", "text": "We train our multi-scale architecture sequentially, from the coarsest scale to the finest one. Once each GAN is trained, it is kept fixed. Our training loss for the nth GAN is comprised of an adversarial term and a reconstruction term,\nmin Gn max Dn L adv (G n , D n ) + \u03b1L rec (G n ).(4)\nThe adversarial loss L adv penalizes for the distance between the distribution of patches in x n and the distribution of patches in generated samplesx n . The reconstruction loss L rec insures the existence of a specific set of noise maps that can produce x n , an important feature for image manipulation (Sec. 4). We next describe L adv , L rec in detail. See Supplementary Materials (SM) for optimization details.\nAdversarial loss Each of the generators G n is coupled with a Markovian discriminator D n that classifies each of the overlapping patches of its input as real or fake [31,26]. We use the WGAN-GP loss [20], which we found to increase training stability, where the final discrimination score is the average over the patch discrimination map. As opposed to single-image GANs for textures (e.g., [31,27,3]), here we define the loss over the whole image rather than over random crops (a batch of size 1). This allows the net to learn boundary conditions (see SM), which is an important feature in our setting. The architecture of D n is the same as the net \u03c8 n within G n , so that its patch size (the net's receptive field) is 11 \u00d7 11.", "publication_ref": ["b30", "b25", "b19", "b30", "b26", "b2"], "figure_ref": [], "table_ref": []}, {"heading": "Reconstruction loss", "text": "We want to ensure that there exists a specific set of input noise maps, which generates the original image x. We specifically choose {z rec N , z rec N \u22121 . . . , z rec 0 } = {z * , 0, . . . , 0}, where z * is some fixed noise map (drawn once and kept fixed during training). Denote byx rec n the generated image at the nth scale when using these noise maps. Then for n < N ,\nL rec = G n (0, (x rec n+1 ) \u2191 r ) \u2212 x n 2 ,(5)\nand for n = N , we use\nL rec = G N (z * ) \u2212 x N 2 .", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "The reconstructed imagex rec", "text": "n has another role during training, which is to determine the standard deviation \u03c3 n of the noise z n in each scale. Specifically, we take \u03c3 n to be proportional to the root mean squared error (RMSE) between (x rec n+1 ) \u2191 r and x n , which gives an indication of the amount of details that need to be added at that scale.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Results", "text": "We tested our method both qualitatively and quantitatively on a variety of images spanning a large range of scenes including urban and nature scenery as well as artistic and texture images. The images that we used are taken from the Berkeley Segmentation Database (BSD) [35], Places [59] and the Web. We always set the minimal dimension at the coarsest scale to 25px, and choose the number of scales N s.t. the scaling factor r is as close as possible to 4/3. For all the results, (unless mentioned otherwise), we resized the training image to maximal dimension 250px.\nQualitative examples of our generated random image samples are shown in Fig. 1, Fig. 6, and many more examples are included in the SM. For each example, we show a number of random samples with the same aspect ratio as the original image, and with decreased and expanded dimensions in each axis. As can be seen, in all these cases, the generated samples depict new realistic structures and configuration of objects, while preserving the visual content of the training image. Our model successfully preservers global structure of objects, e.g. mountains (Fig. 1), air balloons or pyramids (Fig. 6), as well as fine texture information. Because the network has a limited receptive field (smaller than the entire image), it can generate new combinations of patches that do not exist in the training image Furthermore, we observe that in many cases reflections and shadows are realistically synthesized, as can be seen in Fig. 6 and Fig. 1 (and the first example of Fig. 8). Note that SinGAN's architecture is resolution agnostic and can thus be used on high resolution images, as illustrated in Fig. 7 (see 4Mpix results in the SM). Here as well, structures at all scales are nicely generated, from the global arrangement of sky, clouds and mountains, to the fine textures of the snow. Because our model is fully convolutional, the generated images may have arbitrary sizes and aspect ratios. Note that our goal is not image retargeting -our image samples are random and optimized to maintain the patch statistics, rather than preserving salient objects. See SM for more results and qualitative comparison to image retargeting methods. to this scale to be {z rec N , . . . , z rec n+1 }, and use random draws only for {z n , . . . , z 0 }. The effect is illustrated in Fig. 8. As can be seen, starting the generation at the coarsest scale (n = N ), results in large variability in the global structure. In certain cases with a large salient object, like the Zebra image, this may lead to unrealistic samples. However, starting the generation from finer scales, enables to keep the global structure intact, while altering only finer image features (e.g. the Zebra's stripes). See SM for more examples.", "publication_ref": ["b34", "b58"], "figure_ref": ["fig_3", "fig_3", "fig_3", "fig_4"], "table_ref": []}, {"heading": "Effect of scales at test time", "text": "Effect of scales during training Figure 9 shows the effect of training with fewer scales. With a small number of scales, the effective receptive field at the coarsest level is smaller, allowing to capture only fine textures. As the number of scales increases, structures of larger support emerge, and the global object arrangement is better preserved.", "publication_ref": [], "figure_ref": ["fig_5"], "table_ref": []}, {"heading": "Quantitative Evaluation", "text": "To quantify the realism of our generated images and how well they capture the internal statistics of the training image, we use two metrics: (i) Amazon Mechanical Turk (AMT) \"Real/Fake\" user study, and (ii) a new single-image version of the Fr\u00e9chet Inception Distance [23].\nAMT perceptual study We followed the protocol of [26,58] and performed perceptual experiments in 2 settings.", "publication_ref": ["b22", "b25", "b57"], "figure_ref": [], "table_ref": []}, {"heading": "Random samples n = N n = N-1 n = N-2", "text": "Figure 8: Generation from different scales (at inference). We show the effect of starting our hierarchical generation from a given level n. For our full generation scheme (n = N ), the input at the coarsest level is random noise. For generation from a finer scale n, we plug in the downsampled original image, x n , as input to that scale. This allows us to control the scale of the generated structures, e.g., we can preserve the shape and pose of the Zebra and only change its stripe texture by starting the generation from n = N \u2212 1.\n(i) Paired (real vs. fake): Workers were presented with a sequence of 50 trials, in each of which a fake image (generated by SinGAN) was presented against its real training image for 1 second. Workers were asked to pick the fake image.\n(ii) Unpaired (either real or fake): Workers were presented with a single image for 1 second, and were asked if it was fake. In total, 50 real images and a disjoint set of 50 fake images were presented in random order to each worker. We repeated these two protocols for two types of generation processes: Starting the generation from the coarsest (N th) scale, and from scale N \u2212 1 (as in Fig. 8). This way, we assess the realism of our results in two different variability levels. To quantify the diversity of the generated images, for each training example we calculated the standard deviation (std) of the intensity values of each pixel over 100 generated images, averaged it over all pixels, and normalized by the std of the intensity values of the training image.\nThe real images were randomly picked from the \"places\" database [59] from the subcategories Mountains, Hills, Desert, Sky. In each of the 4 tests, we had 50 different participants. In all tests, the first 10 trials were a tutorial including a feedback. The results are reported in Table 1.\nAs expected, the confusion rates are consistently larger in the unpaired case, where there is no reference for comparison. In addition, it is clear that the confusion rate decreases Table 1: \"Real/Fake\" AMT test. We report confusion rates for two generation processes: Starting from the coarsest scale N (producing samples with large diversity), and starting from the second coarsest scale N \u22121 (preserving the global structure of the original image). In each case, we performed both a paired study (real-vs.-fake image pairs are shown), and an unpaired one (either fake or real image is shown). The variance was estimated by bootstrap [14].\nwith the diversity of the generated images. However, even when large structures are changed, our generated images were hard to distinguish from the real images (a score of 50% would mean perfect confusion between real and fake). The full set of test images are included in the SM.", "publication_ref": ["b58", "b13"], "figure_ref": [], "table_ref": []}, {"heading": "Single Image Fr\u00e9chet Inception Distance We next quantify how well SinGAN captures the internal statistics of x.", "text": "A common metric for GAN evaluation is the Fr\u00e9chet Inception Distance (FID) [23], which measures the deviation between the distribution of deep features of generated images and that of real images. In our setting, however, we only have a single real image, and are rather interested in its internal patch statistics. We thus propose the Single Image FID (SIFID) metric. Instead of using the activation vector after the last pooling layer in the Inception Network [49] (a single vector per image), we use the internal distribution of deep features at the output of the convolutional layer just before the second pooling layer (one vector per location in the map). Our SIFID is the FID between the statistics of those features in the real image and in the generated sample.\nAs can be seen in Figure 10: Super-Resolution. When SinGAN is trained on a low resolution image, we are able to super resolve. This is done by iteratively upsampling the image and feeding it to SinGAN's finest scale generator. As can be seen, SinGAN's visual quality is better than the SOTA internal methods ZSSR [46] and DIP [51]. It is also better than EDSR [32] and comparable to SRGAN [30], external methods trained on large collections. Corresponding PSNR and NIQE [40] are shown in parentheses.", "publication_ref": ["b22", "b48", "b45", "b50", "b31", "b29", "b39"], "figure_ref": [], "table_ref": []}, {"heading": "Training Example Input Paint Neural Style Transfer Contextual Transfer SinGAN (Ours)", "text": "Figure 11: Paint-to-Image. We train SinGAN on a target image and inject a downsampled version of the paint into one of the coarse levels at test time. Our generated images preserve the layout and general structure of the clipart while generating realistic texture and fine details that match the training image. Well-known style transfer methods [17,38] fail in this task. Table 2: Single Image FID (SIFID). We adapt the FID metric to a single image and report the average score for 50 images, for full generation (first row), and starting from the second coarsest scale (second row). Correlation with AMT results shows SIFID highly agrees with human ranking.\ngeneration from scale N \u22121 than for generation from scale N , which aligns with the user study results. We also report the correlation between the SIFID scores and the confusion rates for the fake images. Note that there is a significant (anti) correlation between the two, implying that a small SIFID is typically a good indicator for a large confusion rate. The correlation is stronger for the paired tests, since SIFID is a paired measure (it operates on the pair x n ,x n ).", "publication_ref": ["b16", "b37"], "figure_ref": [], "table_ref": ["tab_0"]}, {"heading": "Applications", "text": "We explore the use of SinGAN for a number of image manipulation tasks. To do so, we use our model after train-ing, with no architectural changes or further tuning and follow the same approach for all applications. The idea is to utilize the fact that at inference, SinGAN can only produce images with the same patch distribution as the training image. Thus, manipulation can be done by injecting (a possibly downsampled version of) an image into the generation pyramid at some scale n < N , and feed forwarding it through the generators so as to match its patch distribution to that of the training image. Different injection scales lead to different effects. We consider the following applications (see SM for more results and the injection scale effect).\nSuper-Resolution Increase the resolution of an input image by a factor s. We train our model on the low-resolution (LR) image, with a reconstruction loss weight of \u03b1 = 100 and a pyramid scale factor of r = k \u221a s for some k \u2208 N.\nSince small structures tend to recur across scales of natural scenes [18], at test time we upsample the LR image by a factor of r and inject it (together with noise) to the last generator, G 0 . We repeat this k times to obtain the final high-res output. An example result is shown in Fig. 10. As can be seen, the visual quality of our reconstruction exceeds that of state-of-the-art internal methods [51,46] as well as of external methods that aim for PSNR maximization [32].   [40], lower is better) on BSD100 [35]. As can be seen, Sin-GAN's performance is similar to that of SRGAN [30].\nInterestingly, it is comparable to the externally trained SR-GAN method [30], despite having been exposed to only a single image. Following [4], we compare these 5 methods in Table 3 on the BSD100 dataset [35] in terms of distortion (RMSE) and perceptual quality (NIQE [40]), which are two fundamentally conflicting requirements [5]. As can be seen, SinGAN excels in perceptual quality; its NIQE score is only slightly inferior to SRGAN, and its RMSE is slightly better.\nPaint-to-Image Transfer a clipart into a photo-realistic image. This is done by downsampling the clipart image and feeding it into one of the coarse scales (e.g. N \u2212 1 or N \u22122). As can be seen in Figs. 2 and 11, the global structure of the painting is preserved, while texture and high frequency information matching the original image are realistically generated. Our method outperforms style transfer methods [38,17] in terms of visual quality (Fig. 11).\nHarmonization Realistically blend a pasted object with a background image. We train SinGAN on the background image, and inject a downsampled version of the naively pasted composite at test time. Here we combine the generated image with the original background. As can be seen in Fig. 2 and Fig. 13, our model tailors the pasted object's texture to match the background, and often preserves its structure better than [34]. Scales 2,3,4 typically lead to good balance between preserving the object's structure and transferring the background's texture.\nEditing Produce a seamless composite in which image regions have been copied and pasted in other locations. Here, again, we inject a downsampled version of the composite into one of the coarse scales. We then combine SinGAN's output at the edited regions, with the original image. As shown in Fig. 2 and Fig. 12, SinGAN re-generates fine textures and seamlessly stitches the pasted parts, producing nicer results than Photoshop's Content-Aware-Move.\nSingle Image Animation Create a short video clip with realistic object motion, from a single input image. Natural images often contain repetitions, which reveal different \"snapshots\" in time of the same dynamic object [55] (e.g. an image of a flock of birds reveals all wing postures of a single bird). Using SinGAN, we can travel along the manifold of all appearances of the object in the image, thus synthesizing motion from a single image. We found that for many types of images, a realistic effect is achieved by a random walk in z-space, starting with z rec for the first frame at all generation scales (see SM video). Figure 13: Harmonization. Our model is able to preserve the structure of the pasted object, while adjusting its appearance and texture. The dedicated harmonization method [34] overly blends the object with the background.", "publication_ref": ["b17", "b50", "b45", "b31", "b39", "b34", "b29", "b29", "b3", "b34", "b39", "b4", "b37", "b16", "b33", "b54", "b33"], "figure_ref": ["fig_0", "fig_0", "fig_1", "fig_0", "fig_0", "fig_1"], "table_ref": ["tab_2"]}, {"heading": "Conclusion", "text": "We introduced SinGAN, a new unconditional generative scheme that is learned from a single natural image. We demonstrated its ability to go beyond textures and to generate diverse realistic samples for natural complex images. Internal learning is inherently limited in terms of semantic diversity compared to externally trained generation methods. For example, if the training image contains a single dog, our model will not generate samples of different dog breeds. Nevertheless, as demonstrated by our experiments, SinGAN can provide a very powerful tool for a wide range of image manipulation tasks.", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Surprising effectiveness of few-image unsupervised feature learning", "journal": "", "year": "2019", "authors": "M Yuki; Christian Asano; Andrea Rupprecht;  Vedaldi"}, {"ref_id": "b1", "title": "Blind dehazing using internal patch recurrence", "journal": "IEEE", "year": "2016", "authors": "Yuval Bahat; Michal Irani"}, {"ref_id": "b2", "title": "Learning texture manifolds with the periodic spatial GAN", "journal": "", "year": "2017", "authors": "Urs Bergmann; Nikolay Jetchev; Roland Vollgraf"}, {"ref_id": "b3", "title": "Tomer Michaeli, and Lihi Zelnik-Manor. The 2018 pirm challenge on perceptual image super-resolution", "journal": "Springer", "year": "2018", "authors": "Yochai Blau; Roey Mechrez; Radu Timofte"}, {"ref_id": "b4", "title": "The perception-distortion tradeoff", "journal": "", "year": "2018", "authors": "Yochai Blau; Tomer Michaeli"}, {"ref_id": "b5", "title": "Large scale GAN training for high fidelity natural image synthesis", "journal": "", "year": "2018", "authors": "Andrew Brock; Jeff Donahue; Karen Simonyan"}, {"ref_id": "b6", "title": "", "journal": "", "year": "2018", "authors": "Caroline Chan; Shiry Ginosar; Tinghui Zhou; Alexei A Efros"}, {"ref_id": "b7", "title": "Sketchygan: towards diverse and realistic sketch to image synthesis", "journal": "", "year": "2018", "authors": "Wengling Chen; James Hays"}, {"ref_id": "b8", "title": "The patch transform and its applications to image editing", "journal": "IEEE", "year": "2008", "authors": "Sang Taeg; Moshe Cho; Shai Butman; William T Avidan;  Freeman"}, {"ref_id": "b9", "title": "Sparse, smart contours to represent and edit images", "journal": "", "year": "2018", "authors": "Tali Dekel; Chuang Gan; Dilip Krishnan; Ce Liu; William T Freeman"}, {"ref_id": "b10", "title": "Revealing and modifying non-local variations in a single image", "journal": "ACM Transactions on Graphics (TOG)", "year": "2015", "authors": "Tali Dekel; Tomer Michaeli; Michal Irani; William T Freeman"}, {"ref_id": "b11", "title": "ImageNet: A Large-Scale Hierarchical Image Database", "journal": "", "year": "2009", "authors": "J Deng; W Dong; R Socher; L.-J Li; K Li; L Fei-Fei"}, {"ref_id": "b12", "title": "Deep generative image models using a laplacian pyramid of adversarial networks", "journal": "", "year": "2015", "authors": "Soumith Emily L Denton; Rob Chintala;  Fergus"}, {"ref_id": "b13", "title": "Bootstrap methods: another look at the jackknife", "journal": "Springer", "year": "1992", "authors": "Bradley Efron"}, {"ref_id": "b14", "title": "Image and video upscaling from local self-examples", "journal": "ACM Transactions on Graphics (TOG)", "year": "2011", "authors": "Gilad Freedman; Raanan Fattal"}, {"ref_id": "b15", "title": "Texture synthesis using convolutional neural networks", "journal": "", "year": "2015", "authors": "Leon Gatys; Alexander S Ecker; Matthias Bethge"}, {"ref_id": "b16", "title": "Image style transfer using convolutional neural networks", "journal": "", "year": "2016", "authors": "A Leon; Alexander S Gatys; Matthias Ecker;  Bethge"}, {"ref_id": "b17", "title": "Superresolution from a single image", "journal": "IEEE", "year": "2009", "authors": "Daniel Glasner; Shai Bagon; Michal Irani"}, {"ref_id": "b18", "title": "Generative adversarial nets", "journal": "", "year": "2014", "authors": "Ian Goodfellow; Jean Pouget-Abadie; Mehdi Mirza; Bing Xu; David Warde-Farley; Sherjil Ozair; Aaron Courville; Yoshua Bengio"}, {"ref_id": "b19", "title": "Improved training of wasserstein GANs", "journal": "", "year": "2017", "authors": "Ishaan Gulrajani; Faruk Ahmed; Martin Arjovsky; Vincent Dumoulin; Aaron C Courville"}, {"ref_id": "b20", "title": "Statistics of patch offsets for image completion", "journal": "Springer", "year": "2012", "authors": "Kaiming He; Jian Sun"}, {"ref_id": "b21", "title": "Deep residual learning for image recognition", "journal": "", "year": "2016", "authors": "Kaiming He; Xiangyu Zhang; Shaoqing Ren; Jian Sun"}, {"ref_id": "b22", "title": "GANs trained by a two time-scale update rule converge to a local nash equilibrium", "journal": "", "year": "2017", "authors": "Martin Heusel; Hubert Ramsauer; Thomas Unterthiner; Bernhard Nessler; Sepp Hochreiter"}, {"ref_id": "b23", "title": "Stacked generative adversarial networks", "journal": "", "year": "2017", "authors": "Xun Huang; Yixuan Li; Omid Poursaeed; John Hopcroft; Serge Belongie"}, {"ref_id": "b24", "title": "Batch normalization: Accelerating deep network training by reducing internal covariate shift", "journal": "", "year": "2015", "authors": "Sergey Ioffe; Christian Szegedy"}, {"ref_id": "b25", "title": "Image-to-image translation with conditional adversarial networks", "journal": "", "year": "2004", "authors": "Phillip Isola; Jun-Yan Zhu; Tinghui Zhou; Alexei A Efros"}, {"ref_id": "b26", "title": "Texture synthesis with spatial generative adversarial networks", "journal": "", "year": "2016", "authors": "Nikolay Jetchev; Urs Bergmann; Roland Vollgraf"}, {"ref_id": "b27", "title": "Progressive growing of GANs for improved quality, stability, and variation", "journal": "", "year": "2017", "authors": "Tero Karras; Timo Aila; Samuli Laine; Jaakko Lehtinen"}, {"ref_id": "b28", "title": "A style-based generator architecture for generative adversarial networks", "journal": "", "year": "2018", "authors": "Tero Karras; Samuli Laine; Timo Aila"}, {"ref_id": "b29", "title": "Photorealistic single image super-resolution using a generative adversarial network", "journal": "", "year": "2008", "authors": "Christian Ledig; Lucas Theis; Ferenc Husz\u00e1r; Jose Caballero; Andrew Cunningham; Alejandro Acosta; Andrew Aitken; Alykhan Tejani; Johannes Totz; Zehan Wang"}, {"ref_id": "b30", "title": "Precomputed real-time texture synthesis with markovian generative adversarial networks", "journal": "Springer", "year": "2004", "authors": "Chuan Li; Michael Wand"}, {"ref_id": "b31", "title": "Enhanced deep residual networks for single image super-resolution", "journal": "", "year": "2017", "authors": "Bee Lim; Sanghyun Son; Heewon Kim; Seungjun Nah; Kyoung Mu Lee"}, {"ref_id": "b32", "title": "Deep learning face attributes in the wild", "journal": "", "year": "2015", "authors": "Ziwei Liu; Ping Luo; Xiaogang Wang; Xiaoou Tang"}, {"ref_id": "b33", "title": "", "journal": "", "year": "2018", "authors": "Fujun Luan; Sylvain Paris; Eli Shechtman; Kavita Bala"}, {"ref_id": "b34", "title": "A database of human segmented natural images and its application to evaluating segmentation algorithms and measuring ecological statistics", "journal": "IEEE", "year": "2001", "authors": "David Martin; Charless Fowlkes; Doron Tal; Jitendra Malik"}, {"ref_id": "b35", "title": "Deep multi-scale video prediction beyond mean square error", "journal": "", "year": "2015", "authors": "Michael Mathieu; Camille Couprie; Yann Lecun"}, {"ref_id": "b36", "title": "Saliency driven image manipulation", "journal": "IEEE", "year": "2018", "authors": "Roey Mechrez; Eli Shechtman; Lihi Zelnik-Manor"}, {"ref_id": "b37", "title": "The contextual loss for image transformation with non-aligned data", "journal": "", "year": "2018", "authors": "Roey Mechrez; Itamar Talmi; Lihi Zelnik-Manor"}, {"ref_id": "b38", "title": "Blind deblurring using internal patch recurrence", "journal": "Springer", "year": "2014", "authors": "Tomer Michaeli; Michal Irani"}, {"ref_id": "b39", "title": "Making a completely blind image quality analyzer", "journal": "IEEE Signal Processing Letters", "year": "2013", "authors": "Anish Mittal; Rajiv Soundararajan; Alan C Bovik"}, {"ref_id": "b40", "title": "Context encoders: Feature learning by inpainting", "journal": "", "year": "2016", "authors": "Deepak Pathak; Philipp Krahenbuhl; Jeff Donahue; Trevor Darrell; Alexei A Efros"}, {"ref_id": "b41", "title": "Invertible conditional GANs for image editing", "journal": "", "year": "2016", "authors": "Guim Perarnau; Joost Van De Weijer; Bogdan Raducanu; Jose M\u00e1lvarez"}, {"ref_id": "b42", "title": "Scribbler: Controlling deep image synthesis with sketch and color", "journal": "", "year": "2017", "authors": "Patsorn Sangkloy; Jingwan Lu; Chen Fang; Fisher Yu; James Hays"}, {"ref_id": "b43", "title": "Ingan: Capturing and remapping the", "journal": "", "year": "2018", "authors": "Assaf Shocher; Shai Bagon; Phillip Isola; Michal Irani"}, {"ref_id": "b44", "title": "InGAN: Capturing and Remapping the", "journal": "", "year": "2002", "authors": "Assaf Shocher; Shai Bagon; Phillip Isola; Michal Irani"}, {"ref_id": "b45", "title": "Zero-Shot Super-Resolution using Deep Internal Learning", "journal": "", "year": "2018", "authors": "Assaf Shocher; Nadav Cohen; Michal Irani"}, {"ref_id": "b46", "title": "Indoor segmentation and support inference from rgbd images", "journal": "Springer", "year": "2012", "authors": "Nathan Silberman; Derek Hoiem; Pushmeet Kohli; Rob Fergus"}, {"ref_id": "b47", "title": "Summarizing visual data using bidirectional similarity", "journal": "IEEE", "year": "2008", "authors": "Denis Simakov; Yaron Caspi; Eli Shechtman; Michal Irani"}, {"ref_id": "b48", "title": "Going deeper with convolutions", "journal": "", "year": "2015", "authors": "Christian Szegedy; Wei Liu; Yangqing Jia; Pierre Sermanet; Scott Reed; Dragomir Anguelov; Dumitru Erhan; Vincent Vanhoucke; Andrew Rabinovich"}, {"ref_id": "b49", "title": "Modifying non-local variations across multiple views", "journal": "", "year": "2018", "authors": "Tal Tlusty; Tomer Michaeli; Tali Dekel; Lihi Zelnik-Manor"}, {"ref_id": "b50", "title": "Deep image prior. IEEE Conference on Computer Vision and Pattern Recognition (CVPR)", "journal": "", "year": "2018", "authors": "Dmitry Ulyanov; Andrea Vedaldi; Victor Lempitsky"}, {"ref_id": "b51", "title": "High-resolution image synthesis and semantic manipulation with conditional GANs", "journal": "", "year": "2017", "authors": "Ting-Chun Wang; Ming-Yu Liu; Jun-Yan Zhu; Andrew Tao; Jan Kautz; Bryan Catanzaro"}, {"ref_id": "b52", "title": "Generative image modeling using style and structure adversarial networks", "journal": "", "year": "2016", "authors": "Xiaolong Wang; Abhinav Gupta"}, {"ref_id": "b53", "title": "Texturegan: Controlling deep image synthesis with texture patches", "journal": "", "year": "2002", "authors": "Wenqi Xian; Patsorn Sangkloy; Varun Agrawal; Amit Raj; Jingwan Lu; Chen Fang; Fisher Yu; James Hays"}, {"ref_id": "b54", "title": "Animating animal motion from still", "journal": "ACM Transactions on Graphics (TOG)", "year": "2008", "authors": "Xuemiao Xu; Liang Wan; Xiaopei Liu; Tien-Tsin Wong; Liansheng Wang; Chi-Sing Leung"}, {"ref_id": "b55", "title": "Generative image inpainting with contextual attention", "journal": "", "year": "2018", "authors": "Jiahui Yu; Zhe Lin; Jimei Yang; Xiaohui Shen; Xin Lu; Thomas S Huang"}, {"ref_id": "b56", "title": "Beyond a gaussian denoiser: Residual learning of deep cnn for image denoising", "journal": "IEEE Transactions on Image Processing", "year": "2017", "authors": "Kai Zhang; Wangmeng Zuo; Yunjin Chen; Deyu Meng; Lei Zhang"}, {"ref_id": "b57", "title": "Colorful image colorization", "journal": "Springer", "year": "2016", "authors": "Richard Zhang; Phillip Isola; Alexei A Efros"}, {"ref_id": "b58", "title": "Learning deep features for scene recognition using places database", "journal": "", "year": "2014", "authors": "Bolei Zhou; Agata Lapedriza; Jianxiong Xiao; Antonio Torralba; Aude Oliva"}, {"ref_id": "b59", "title": "Non-stationary texture synthesis by adversarial expansion", "journal": "", "year": "2018", "authors": "Yang Zhou; Zhen Zhu; Xiang Bai; Dani Lischinski; Daniel Cohen-Or; Hui Huang"}, {"ref_id": "b60", "title": "Generative visual manipulation on the natural image manifold", "journal": "Springer", "year": "2016", "authors": "Jun-Yan Zhu; Philipp Kr\u00e4henb\u00fchl; Eli Shechtman; Alexei A Efros"}, {"ref_id": "b61", "title": "Unpaired image-to-image translation using cycleconsistent adversarial networks", "journal": "", "year": "2017", "authors": "Jun-Yan Zhu; Taesung Park; Phillip Isola; Alexei A Efros"}, {"ref_id": "b62", "title": "Toward multimodal image-to-image translation", "journal": "", "year": "2017", "authors": "Jun-Yan Zhu; Richard Zhang; Deepak Pathak; Trevor Darrell; Alexei A Efros; Oliver Wang; Eli Shechtman"}, {"ref_id": "b63", "title": "Internal statistics of a single natural image", "journal": "IEEE", "year": "2011", "authors": "Maria Zontak; Michal Irani"}, {"ref_id": "b64", "title": "Separating signal from noise using patch recurrence across scales", "journal": "", "year": "2013", "authors": "Maria Zontak; Inbar Mosseri; Michal Irani"}], "figures": [{"figure_label": "2", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Figure 2 :2Figure 2: Image manipulation. SinGAN can be used in various image manipulation tasks, including: transforming a paint (clipart) into a realistic photo, rearranging and editing objects in the image, harmonizing a new object into an image, image super-resolution and creating an animation from a single input. In all these cases, our model observes only the training image (first row) and is trained in the same manner for all applications, with no architectural changes or further tuning (see Sec. 4).", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Figure 3 :3Figure 3: SinGAN vs. Single Image Texture Generation.Single image models for texture generation[3,16] are not designed to deal with natural images. Our model can produce realistic image samples that consist of complex textures and non-reptititve global structures.", "figure_data": ""}, {"figure_label": "4", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "Figure 4 :4Figure 4: SinGAN's multi-scale pipeline.Our model consists of a pyramid of GANs, where both training and inference are done in a coarse-to-fine fashion. At each scale, G n learns to generate image samples in which all the overlapping patches cannot be distinguished from the patches in the down-sampled training image, x n , by the discriminator D n ; the effective patch size decreases as we go up the pyramid (marked in yellow on the original image for illustration). The input to G n is a random noise image z n , and the generated image from the previous scalex n , upsampled to the current resolution (except for the coarsest level which is purely generative). The generation process at level n involves all generators {G N . . . G n } and all noise maps {z N , . . . , z n } up to this level. See more details at Sec. 2.", "figure_data": ""}, {"figure_label": "6", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Figure 6 :6Figure 6: Random image samples. After training SinGAN on a single image, our model can generate realistic random image samples that depict new structures and object configurations, yet preserve the patch distribution of the training image.Because our model is fully convolutional, the generated images may have arbitrary sizes and aspect ratios. Note that our goal is not image retargeting -our image samples are random and optimized to maintain the patch statistics, rather than preserving salient objects. See SM for more results and qualitative comparison to image retargeting methods.", "figure_data": ""}, {"figure_label": "7", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "Figure 7 :7Figure 7: High resolution image generation. A random sample produced by our model, trained on the 243 \u00d7 1024 image (upper right corner); new global structures as well as fine details are realistically generated. See 4Mpix examples in SM.", "figure_data": ""}, {"figure_label": "9", "figure_type": "figure", "figure_id": "fig_5", "figure_caption": "Figure 9 :9Figure 9: The effect of training with a different number of scales. The number of scales in SinGAN's architecture strongly influences the results. A model with a small number of scales only captures textures. As the number of scales increases, SinGAN manages to capture larger structures as well as the global arrangement of objects in the scene. 1st Scale Diversity Survey Confusion N 0.5 paired unpaired 21.45% \u00b1 1.5% 42.9% \u00b1 0.9% N \u2212 1 0.35 paired unpaired 30.45% \u00b1 1.5% 47.04% \u00b1 0.8%", "figure_data": ""}, {"figure_label": "12", "figure_type": "figure", "figure_id": "fig_7", "figure_caption": "Figure 12 :12Figure 12: Editing. We copy and paste a few patches from the original image (a), and input a downsampled version of the edited image (b) to an intermediate level of our model (pretrained on (a)). In the generated image (d), these local edits are translated into coherent and photo-realistic structures. (c) comparison to Photoshop content aware move. SinGAN (Ours) Input Deep Paint. Harmonization", "figure_data": ""}, {"figure_label": "2", "figure_type": "table", "figure_id": "tab_0", "figure_caption": ", the average SIFID is lower for", "figure_data": "InputSRGAN (24.865/3.640) EDSR (28.367/8.083)DIP (27.485/7.188)ZSSR (27.933/8.455)SinGAN (26.068/3.831)trained on a datasettrained on a single image"}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "Super-Resolution evaluation. Following[5], we report distortion (RMSE) and perceptual quality (NIQE", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "x N = G N (z N ). (1)", "formula_coordinates": [4.0, 136.56, 74.49, 149.81, 9.96]}, {"formula_id": "formula_1", "formula_text": "x n = G n (z n , (x n+1 ) \u2191 r ) , n < N.(2)", "formula_coordinates": [4.0, 87.78, 175.08, 198.58, 18.58]}, {"formula_id": "formula_2", "formula_text": "x n = (x n+1 ) \u2191 r + \u03c8 n (z n + (x n+1 ) \u2191 r ) ,(3)", "formula_coordinates": [4.0, 84.01, 288.58, 202.35, 18.58]}, {"formula_id": "formula_3", "formula_text": "min Gn max Dn L adv (G n , D n ) + \u03b1L rec (G n ).(4)", "formula_coordinates": [4.0, 89.12, 461.27, 197.24, 17.04]}, {"formula_id": "formula_4", "formula_text": "L rec = G n (0, (x rec n+1 ) \u2191 r ) \u2212 x n 2 ,(5)", "formula_coordinates": [4.0, 356.39, 162.92, 188.72, 18.58]}, {"formula_id": "formula_5", "formula_text": "L rec = G N (z * ) \u2212 x N 2 .", "formula_coordinates": [4.0, 403.06, 186.56, 104.31, 17.81]}], "doi": ""}