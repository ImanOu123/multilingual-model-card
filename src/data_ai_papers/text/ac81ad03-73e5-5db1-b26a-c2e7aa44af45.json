{"title": "On the Decidability of Connectedness Constraints in 2D and 3D Euclidean Spaces", "authors": "Roman Kontchakov; Yavor Nenov; Ian Pratt-Hartmann; Michael Zakharyaschev", "pub_date": "", "abstract": "We investigate (quantifier-free) spatial constraint languages with equality, contact and connectedness predicates, as well as Boolean operations on regions, interpreted over low-dimensional Euclidean spaces. We show that the complexity of reasoning varies dramatically depending on the dimension of the space and on the type of regions considered. For example, the logic with the interior-connectedness predicate (and without contact) is undecidable over polygons or regular closed sets in R 2 , EXPTIMEcomplete over polyhedra in R 3 , and NP-complete over regular closed sets in R 3 .", "sections": [{"heading": "Introduction", "text": "A central task in Qualitative Spatial Reasoning is that of determining whether some described spatial configuration is geometrically realizable in 2D or 3D Euclidean space. Typically, such a description is given using a spatial logic-a formal language whose variables range over (typed) geometrical entities, and whose non-logical primitives represent geometrical relations and operations involving those entities. Where the geometrical primitives of the language are purely topological in character, we speak of a topological logic; and where the logical syntax is confined to that of propositional calculus, we speak of a topological constraint language.\nTopological constraint languages have been intensively studied in Artificial Intelligence over the last two decades. The best-known of these, RCC8 and RCC5, employ variables ranging over regular closed sets in topological spaces, and a collection of eight (respectively, five) binary predicates standing for some basic topological relations between these sets [Egenhofer and Franzosa, 1991;Randell et al., 1992;Bennett, 1994;Renz and Nebel, 2001]. An important extension of RCC8, known as BRCC8, additionally features standard Boolean operations on regular closed sets [Wolter and Zakharyaschev, 2000].\nA remarkable characteristic of these languages is their insensitivity to the underlying interpretation. To show that an RCC8-formula is satisfiable in n-dimensional Euclidean space, it suffices to demonstrate its satisfiability in any topological space ; for BRCC8-formulas, satisfiability in any connected space is enough. This inexpressiveness yields (relatively) low computational complexity: satisfiability of BRCC8-, RCC8and RCC5-formulas over arbitrary topological spaces is NP-complete; satisfiability of BRCC8formulas over connected spaces is PSPACE-complete.\nHowever, satisfiability of spatial constraints by arbitrary regular closed sets by no means guarantees realizability by practically meaningful geometrical objects, where connectedness of regions is typically a minimal requirement [Borgo et al., 1996;Cohn and Renz, 2008]. (A connected region is one which consists of a 'single piece.') It is easy to write constraints in RCC8 that are satisfiable by connected regular closed sets over arbitrary topological spaces but not over R 2 ; in BRCC8 we can even write formulas satisfiable by connected regular closed sets over arbitrary spaces but not over R n for any n. Worse still: there exist simple collections of spatial constraints (involving connectedness) that are satisfiable in the Euclidean plane, but only by 'pathological' sets that cannot plausibly represent the regions occupied by physical objects [Pratt-Hartmann, 2007]. Unfortunately, little is known about the complexity of topological constraint satisfaction by non-pathological objects in low-dimensional Euclidean spaces. One landmark result [Schaefer et al., 2003] in this area shows that satisfiability of RCC8-formulas by disc homeomorphs in R 2 is still NP-complete (even though formulas can force arrangements that cut the plane into exponentially many regions). This paper investigates the computational properties of more general and flexible spatial logics with connectedness constraints interpreted over R 2 and R 3 .\nWe consider two 'base' topological constraint languages. The language B features = as its only predicate, but has function symbols +, \u2212, \u2022 denoting the standard operations of fusion, complement and taking common parts defined for regular closed sets, as well as the constants 1 and 0 for the entire space and the empty set. Our second base language, C, additionally features a binary predicate, C, denoting the 'contact' relation (two sets are in contact if they share at least one point). The language C is a notational variant of BRCC8 (and thus an extension of RCC8), while B is the analogous extension of RCC5. We add to B and C one of two new unary predicates: c, representing the property of connectedness, and c \u2022 , representing the (stronger) property of having a connected interior. We denote the resulting languages by Bc, Bc \u2022 , Cc and Cc \u2022 . We are interested in interpretations over (i) the regular closed sets of R 2 and R 3 , and (ii) the regular closed polyhe-dra in R 2 and R 3 . (A set is polyhedral if it can be defined by finitely many bounding hyperplanes; see Sec. 2.) By restricting interpretations to polyhedra, we rule out pathological sets, and, in effect, use the same 'data structure' as in GISs.\nWhen interpreted over arbitrary topological spaces, the complexity of reasoning with these languages is known: satisfiability of Bc \u2022 -formulas is NP-complete, while for the other three languages, it is EXPTIME-complete. Likewise, the 1D Euclidean case is completely solved. For the spaces R n (n \u2265 2), however, most problems are still open. All four languages contain formulas satisfiable by regular closed sets in R 2 , but not by regular closed polygons; in R 3 , the analogous result is known only for Bc \u2022 and Cc \u2022 . The satisfiability problem for Bc, Cc and Cc \u2022 is EXPTIME-hard (in both polyhedral and unrestricted cases) for R n (n \u2265 2); however, the only known upper bound is that satisfiability of Bc \u2022formulas by polyhedra in R n (n \u2265 3) is EXPTIME-complete. (See [Kontchakov et al., 2010b] for a summary.)\nThis paper settles most of these open problems, revealing considerable differences between the computational properties of constraint languages with connectedness predicates when interpreted over R 2 and over abstract topological spaces. Sec. 3 shows that Bc, Bc \u2022 , Cc and Cc \u2022 are all sensitive to restriction to polyhedra in R n (n \u2265 2). Sec. 4 establishes an unexpected result: all these languages are undecidable in R 2 , both in the polyhedral and unrestricted cases ([Dornheim, 1998] proves undecidability of the first-order versions of these languages). Sec. 5 resolves the open issue of the complexity of Bc \u2022 over regular closed sets (not just polyhedra) in R 3 by establishing an NP upper bound. Thus, Qualitative Spatial Reasoning in Euclidean spaces proves much more challenging if connectedness of regions is to be taken into account. We discuss the obtained results in the context of spatial reasoning in Sec. 6. Omitted proofs can be found in [Kontchakov et al., 2011].", "publication_ref": ["b0", "b1", "b0", "b2", "b0", "b0", "b0", "b3", "b0", "b0"], "figure_ref": [], "table_ref": []}, {"heading": "Constraint Languages with Connectedness", "text": "Let T be a topological space. We denote the closure of any X \u2286 T by X \u2212 , its interior by X \u2022 and its boundary by \u03b4X = X \u2212 \\X \u2022 . We call X regular closed if X = X \u2022 \u2212 , and denote by RC(T ) the set of regular closed subsets of T . Where T is clear from context, we refer to elements of RC(T ) as regions. RC(T ) forms a Boolean algebra under the operations X +\nY = X \u222a Y , X \u2022 Y = (X \u2229 Y ) \u2022 \u2212 and \u2212X = (T \\ X) \u2212 . We write X \u2264 Y for X \u2022 (\u2212Y ) = \u2205; thus X \u2264 Y iff X \u2286 Y . A subset X \u2286 T is connected if it cannot be decomposed into two disjoint, non-empty sets closed in the subspace topology; X is interior-connected if X \u2022 is connected. Any (n\u22121)-dimensional hyperplane in R n , n \u2265 1, bounds two elements of RC(R n ) called half-spaces.\nWe denote by RCP(R n ) the Boolean subalgebra of RC(R n ) generated by the half-spaces, and call the elements of RCP(R n ) (regular closed) polyhedra. If n = 2, we speak of (regular closed) polygons. Polyhedra may be regarded as 'well-behaved' or, in topologists' parlance, 'tame.' In particular, every polyhedron has finitely many connected components, a property which is not true of regular closed sets in general.\nThe topological constraint languages considered here all employ a countably infinite collection of variables r 1 , r 2 , . . . The language C features binary predicates = and C, together with the individual constants 0, 1 and the function symbols +, \u2022, \u2212. The terms \u03c4 and formulas \u03d5 of C are given by:\n\u03c4 ::= r | \u03c4 1 + \u03c4 2 | \u03c4 1 \u2022 \u03c4 2 | \u2212\u03c4 1 | 1 | 0, \u03d5 ::= \u03c4 1 = \u03c4 2 | C(\u03c4 1 , \u03c4 2 ) | \u03d5 1 \u2227 \u03d5 2 | \u00ac\u03d5 1 .\nThe language B is defined analogously, but without the predicate C. If S \u2286 RC(T ) for some topological space T , an interpretation over S is a function \u2022 I mapping variables r to elements r I \u2208 S. We extend \u2022 I to terms \u03c4 by setting 0\nI = \u2205, 1 I = T , (\u03c4 1 + \u03c4 2 ) I = \u03c4 I 1 + \u03c4 I 2 , etc. We write I |= \u03c4 1 = \u03c4 2 iff \u03c4 I 1 = \u03c4 I 2 , and I |= C(\u03c4 1 , \u03c4 2 ) iff \u03c4 I 1 \u2229 \u03c4 I 2 = \u2205. We read C(\u03c4 1 , \u03c4 2 ) as '\u03c4 1 contacts \u03c4 2 .'\nThe relation |= is extended to non-atomic formulas in the obvious way. A formula \u03d5 is satisfiable over S if I |= \u03d5 for some interpretation I over S.\nTurning to languages with connectedness, we define Bc and Cc to be the extensions of B and C with the unary predicate c. We set I |= c(\u03c4 ) iff \u03c4 I is connected in the topological space under consideration. Similarly, we define Bc \u2022 and Cc \u2022 to be the extensions of B and C with the predicate c \u2022 , setting\nI |= c \u2022 (\u03c4 ) iff (\u03c4 I ) \u2022 is connected. Sat(L, S)\nis the set of Lformulas satisfiable over S, where L is one of Bc, Cc, Bc \u2022 or Cc \u2022 (the topological space is implicit in this notation, but will always be clear from context). We shall be concerned with Sat(L, S), where S is RC(R n ) or RCP(R n ) for n = 2, 3.\nTo illustrate, consider the Bc \u2022 -formulas \u03d5 k given by\n1\u2264i\u2264k c \u2022 (r i )\u2227(r i = 0) \u2227 i<j c \u2022 (r i +r j )\u2227(r i \u2022r j = 0) . (1)\nOne can show that \u03d5 3 is satisfiable over RC(R n ), n \u2265 2, but not over RC(R), as no three intervals with non-empty, disjoint interiors can be in pairwise contact. Also, \u03d5 5 is satisfiable over RC(R n ), for n \u2265 3, but not over RC(R 2 ), as the graph K 5 is non-planar. Thus, Bc \u2022 is sensitive to the dimension of the space. Or again, consider the Bc\n\u2022 -formula 1\u2264i\u22643 c \u2022 (r i ) \u2227 c \u2022 (r 1 + r 2 + r 3 ) \u2227 2\u2264i\u22643 \u00acc \u2022 (r 1 + r i ). (2)\nOne can show that (2) is satisfiable over RC(R n ), for any n \u2265 2 (see, e.g., Fig. 1), but not over RCP(R n ). Thus Bc \u2022 is sensitive to tameness in Euclidean spaces. It is\nr 1 r 2 r 3 Figure 1: Three regions in RC(R 2 ) satisfying (2).\nknown [Kontchakov et al., 2010b] that, for the Euclidean plane, the same is true of Bc and Cc: there is a Bc-formula satisfiable over RC(R 2 ), but not over RCP(R 2 ). (The example required to show this is far more complicated than the Bc \u2022 -formula (2).) In the next section, we prove that any of Bc, Cc and Cc \u2022 contains formulas satisfiable over RC(R n ), for every n \u2265 2, but only by regions with infinitely many components. Thus, all four of our languages are sensitive to tameness in all dimensions greater than one.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Regions with Infinitely Many Components", "text": "Fix n \u2265 2 and let d 0 , d 1 , d 2 , d 3 be regions partitioning R n :\n0\u2264i\u22643 d i = 1 \u2227 0\u2264i<j\u22643 (d i \u2022 d j = 0).(3)\nWe construct formulas forcing the d i to have infinitely many connected components. To this end we require non-empty regions a i contained in d i , and a non-empty region t:\n0\u2264i\u22643 (a i = 0) \u2227 (a i \u2264 d i ) \u2227 (t = 0). (4\n)\nThe configuration of regions we have in mind is depicted in Fig. 2, where components of the d i are arranged like the layers of an onion. The 'innermost' component of d 0 is surrounded by a component of d 1 , which in turn is surrounded by a component of d 2 , and so on. The region t passes through every layer, but avoids the a i . To enforce a configuration of this sort, we need the following three formulas, for 0 \u2264 i \u2264 3:\nc(a i + d i+1 + t), (5) \u00acC(a i , d i+1 \u2022 (\u2212a i+1 )) \u2227 \u00acC(a i , t), (6\n) \u00acC(d i , d i+2 ),(7)\nwhere k = k mod 4. Formulas ( 5) and ( 6) ensure that each component of a i is in contact with a i+1 , while ( 7  Denote by \u03d5 \u221e the conjunction of the above constraints. Fig. 2 shows how \u03d5 \u221e can be satisfied over RC(R 2 ). By cylindrification, it is also satisfiable over any RC(R n ), for n > 2.\nThe arguments of this section are based on the following property of regular closed subsets of Euclidean spaces: Lemma 1 If X \u2208 RC(R n ) is connected, then every component of \u2212X has a connected boundary.\nThe proof of this lemma, which follows from [Newman, 1964], can be found in [Kontchakov et al., 2011]. The result fails for other familiar spaces such as the torus. Theorem 2 There is a Cc-formula satisfiable over RC(R n ), n \u2265 2, but not by regions with finitely many components. Proof. Let \u03d5 \u221e be as above. To simplify the presentation, we ignore the difference between variables and the regions they stand for, writing, for example, a i instead of a I i . We construct a sequence of disjoint components X i of d i and open sets V i connecting X i to X i+1 (Fig. 3). By the first conjunct of (4), let X 0 be a component of d 0 containing points in a 0 . Suppose X i has been constructed. By (5) and (6), X i is in contact with a i+1 . Using ( 7) and the fact that R n is locally connected, one can find a component X i+1 of d i+1 which has points in a i+1 , and a connected open set\nV i such that V i \u2229 X i and V i \u2229 X i+1 are non-empty, but V i \u2229 d i+2 is empty. . . . X3 X2 X1 X0 V2 V1 V0 Figure 3: The sequence {X i , V i } i\u22650 generated by \u03d5 \u221e . (S i+1\nand R i+1 are the 'holes' of X i+1 containing X i and X i+2 .)\nTo see that the X i are distinct, let S i+1 and R i+1 be the components of \u2212X i+1 containing X i and X i+2 , respectively. It suffices to show S i+1 \u2286 S \u2022 i+2 . Note that the connected set\nV i must intersect \u03b4S i+1 . Evidently, \u03b4S i+1 \u2286 X i+1 \u2286 d i+1 . Also, \u03b4S i+1 \u2286 \u2212X i+1\n; hence, by ( 3) and ( 7), \u03b4S i+1 \u2286 d i \u222a d i+2 . By Lemma 1, \u03b4S i+1 is connected, and therefore, by ( 7), is entirely contained either in 7), then, \u03b4S i+1 \u2229\u03b4R i+1 = \u2205, and since S i+1 and R i+1 are components of the same set, they are disjoint. Hence, S i+1 \u2286 (\u2212R i+1 )\nd i or in d i+2 . Since V i \u2229\u03b4S i+1 = \u2205 and V i \u2229d i+2 = \u2205, we have \u03b4S i+1 \u2286 d i+2 , so \u03b4S i+1 \u2286 d i . Similarly, \u03b4R i+1 \u2286 d i+2 . By (\n\u2022 , and since\nX i+2 \u2286 R i+1 , also S i+1 \u2286 (\u2212X i+2 )\n\u2022 . So, S i+1 lies in the interior of a component of \u2212X i+2 , and since\n\u03b4S i+1 \u2286 X i+1 \u2286 S i+2 , that component must be S i+2 . K\nNow we show how the Cc-formula \u03d5 \u221e can be transformed to Cc \u2022 -and Bc-formulas with similar properties. Note first that all occurrences of c in \u03d5 \u221e have positive polarity. Let \u03d5 \u2022 \u221e be the result of replacing them with the predicate c \u2022 . In Fig. 2, the connected regions mentioned in (5) are in fact interior-connected; hence \u03d5 \u2022 \u221e is satisfiable over RC(R n ). Since interior-connectedness implies connectedness, \u03d5 \u2022 \u221e entails \u03d5 \u221e , and we obtain: Corollary 3 There is a Cc \u2022 -formula satisfiable over RC(R n ), n \u2265 2, but not by regions with finitely many components.\nTo construct a Bc-formula, we observe that all occurrences of C in \u03d5 \u221e are negative. We eliminate these using the predicate c. Consider, for example, the formula \u00acC(a i , t) in (6). By inspection of Fig. 2, one can find regions r 1 , r 2 satisfying\nc(r 1 ) \u2227 c(r 2 ) \u2227 (a i \u2264 r 1 ) \u2227 (t \u2264 r 2 ) \u2227 \u00acc(r 1 + r 2 ). (8)\nOn the other hand, (8) entails \u00acC(a i , t). By treating all other non-contact relations similarly, we obtain a Bc-formula \u03c8 \u221e that is satisfiable over RC(R n ), and that entails \u03d5 \u221e . Thus: Corollary 4 There is a Bc-formula satisfiable over RC(R n ), n \u2265 2, but not by regions with finitely many components.\nObtaining a Bc \u2022 analogue is complicated by the fact that we must enforce non-contact constraints using c \u2022 (rather than c). In the Euclidean plane, this can be done using planarity constraints; see [Kontchakov et al., 2011]. Theorem 5 There is a Bc \u2022 -formula satisfiable over RC(R 2 ), but not by regions with finitely many components.\nTheorem 2 and Corollary 4 entail that, if L is Bc or Cc, then Sat(L, RC(R n )) = Sat(L, RCP(R n )) for n \u2265 2. Theorem 5 fails for RC(R n ) with n \u2265 3 (Sec. 5). However, we know from (2) that Sat(Bc \u2022 , RC(R n )) = Sat(Bc \u2022 , RCP(R n )) for all n \u2265 2. Theorem 2 fails in the 1D case; moreover, Sat(L, RC(R)) = Sat(L, RCP(R)) only in the case L = Bc or Bc \u2022 [Kontchakov et al., 2010b].", "publication_ref": ["b0", "b0", "b0"], "figure_ref": ["fig_0", "fig_0", "fig_0", "fig_0"], "table_ref": []}, {"heading": "Undecidability in the Plane", "text": "Let L be any of Bc, Cc, Bc \u2022 or Cc \u2022 . In this section, we show, via a reduction of the Post correspondence problem (PCP), that Sat(L, RC(R 2 )) is r.e.-hard, and Sat(L, RCP(R 2 )) is r.e.complete. An instance of the PCP is a quadruple w = (S, T, w 1 , w 2 ) where S and T are finite alphabets, and each w i is a word morphism from T * to S * . We may assume that S = {0, 1} and w i (t) is non-empty for any t \u2208 T . The instance w is positive if there exists a non-empty \u03c4 \u2208 T * such that w 1 (\u03c4 ) = w 2 (\u03c4 ). The set of positive PCP-instances is known to be r.e.-complete. The reduction can only be given in outline here: for details, see [Kontchakov et al., 2011].\nTo deal with arbitrary regular closed subsets of RC(R 2 ), we use the technique of 'wrapping' a region inside two bigger ones. Let us say that a 3-region is a triple a = (a,\u0227,\u00e4) of elements of RC(R 2 ) such that 0 =\u00e4 \u0227 a, where r s abbreviates \u00acC(r, \u2212s). It helps to think of a = (a,\u0227,\u00e4) as consisting of a kernel,\u00e4, encased in two protective layers of shell. As a simple example, consider the sequence of 3-regions a 1 , a 2 , a 3 depicted in Fig. 4, where the innermost regions form a sequence of externally touching polygons. When describing arrangements of 3-regions, we use the variable r for the triple of variables (r,\u1e59,r), taking the conjunctsr = 0,r \u1e59 and\u1e59 r to be implicit. As with ordinary variables, we often ignore the difference between 3region variables and the 3-regions they stand for.\nFor k \u2265 3, define the formula stack(a 1 , . . . , a k ) by\n1\u2264i\u2264k c(\u0227 i +\u00e4 i+1 + \u2022 \u2022 \u2022 +\u00e4 k ) \u2227 j\u2212i>1 \u00acC(a i , a j ).\nThus, the triple of 3-regions in Fig. 4 satisfies stack(a 1 , a 2 , a 3 ). This formula plays a crucial role in our proof. If stack(a 1 , . . . , a k ) holds, then any point p 0 in the inner shell\u0227 1 of a 1 can be connected to any point p k in the kernel\u00e4 k of a k via a Jordan arc \u03b3 1 \u2022 \u2022 \u2022 \u03b3 k whose ith segment, \u03b3 i , never leaves the outer shell a i of a i . Moreover, each \u03b3 i intersects the inner shell\u0227 i+1 of a i+1 , for 1 \u2264 i < k. This technique allows us to write Cc-formulas whose satisfying regions are guaranteed to contain various networks of arcs, exhibiting almost any desired pattern of intersections. Now recall the construction of Sec. 3, where constraints on the variables d 0 , . . . , d 3 were used to enforce 'cyclic' patterns of components. Using stack(a 1 , . . . , a k ), we can write a formula with the property that the regions in any satisfying assignment are forced to contain the pattern of arcs having the form shown in Fig. 5. These arcs define a 'window,' containing a sequence {\u03b6 i } of 'horizontal' arcs (1 \u2264 i \u2264 n), each connected by a corresponding 'vertical arc,' \u03b7 i , to some point on the 'top edge. ' We can ensure that each \u03b6 i is included in a region a i , and each \u03b7 i (1 \u2264 i \u2264 n) in a region b i , where i now indicates i mod 3. By repeating the construction, a second pair of arc-sequences, {\u03b6 i } and {\u03b7 i } (1 \u2264 i \u2264 n ) can be established, but with each \u03b7 i connecting \u03b6 i to the 'bottom edge.' Again, we can ensure each \u03b6 i is included in a region a i and each \u03b7 i in a region b i (1 \u2264 i \u2264 n ). Further, we can ensure that the final horizontal arcs \u03b6 n and \u03b6 n (but no others) are joined by an arc \u03b6 * lying in a region z * . The cru- cial step is to match up these arc-sequences. To do so, we write\n\u03b6 1 \u03b7 1 \u03b6 2 \u03b7 2 \u03b6 3 \u03b7 3 \u03b6 n \u03b7 n \u03b6 *\n\u00acC(a i , b j ) \u2227 \u00acC(a i , b j ) \u2227 \u00acC(b i + b i , b j + b j + z * ), for all i, j (0 \u2264 i, j < 3, i = j).\nA simple argument based on planarity considerations then ensures that the upper and lower sequences of arcs must cross (essentially) as shown in Fig. 6. In particular, we are guaranteed that n = n (without specifying the value n), and that, for all 1 \u2264 i \u2264 n, \u03b6 i is connected by \u03b7 i (and also by \u03b7 i ) to \u03b6 i .\nHaving established the configuration of Fig. 6, we write\n(b i \u2264 l 0 + l 1 ) \u2227 \u00acC(b i \u2022 l 0 , b i \u2022 l 1 ), for 0 \u2264 i < 3, ensuring\nthat each \u03b7 i is included in exactly one of l 0 , l 1 . These inclusions naturally define a word \u03c3 over the alphabet {0, 1}. Next, we write Cc-constraints which organize the sequences of arcs {\u03b6 i } and {\u03b6 i } (independently) into consecutive blocks. These blocks of arcs can then be put in 1-1 correspondence using essentially the same construction used to put the individual arcs in 1-1 correspondence. Each pair of corresponding blocks can now be made to lie in exactly one region from a collection t 1 , . . . , t . We think of the t j as representing the letters of the alphabet T , so that the labelling of the blocks with these elements defines a word \u03c4 \u2208 T * . It is then straightforward to write non-contact constraints involving the arcs \u03b6 i ensuring that \u03c3 = w 1 (\u03c4 ) and non-contact constraints involving the arcs \u03b6 i ensuring that \u03c3 = w 2 (\u03c4 ). Let \u03d5 w be the conjunction of all the foregoing Cc-formulas. Thus, if \u03d5 w is satisfiable over RC(R 2 ), then w is a positive instance of the PCP. On the other hand, if w is a positive instance of the PCP, then one can construct a tuple satisfying \u03d5 w over RCP(R 2 ) by 'thickening' the above collections of arcs into polygons in the obvious way. So, w is positive iff \u03d5 w is satisfiable over RC(R 2 ) iff \u03d5 w is satisfiable over RCP(R 2 ). This shows r.e.-hardness of Sat(Cc, RC(R 2 )) and Sat(Cc, RCP(R 2 )). Membership of the latter problem in r.e. is immediate because all polygons may be assumed to have vertices with rational coordinates, and so may be effectively enumerated. Using the techniques of Corollaries 3-4 and Theorem 5, we obtain: Theorem 6 For L \u2208 {Bc \u2022 , Bc, Cc \u2022 , Cc}, Sat(L, RC(R 2 )) is r.e.-hard, and Sat(L, RCP(R 2 )) is r.e.-complete.\nThe complexity of Sat(L, RC(R 3)) remains open for the languages L \u2208 {Bc, Cc \u2022 , Cc}. However, as we shall see in the next section, for Bc \u2022 it drops dramatically.", "publication_ref": ["b0"], "figure_ref": ["fig_1", "fig_1", "fig_2", "fig_3", "fig_3"], "table_ref": []}, {"heading": "Bc \u2022 in 3D", "text": "In this section, we consider the complexity of satisfying Bc \u2022constraints by polyhedra and regular closed sets in threedimensional Euclidean space. Our analysis rests on an important connection between geometrical and graph-theoretic interpretations. We begin by briefly discussing the results of [Kontchakov et al., 2010a] for the polyhedral case.\nRecall that every partial order (W, R), where R is a transitive and reflexive relation on W , can be regarded as a topological space by taking X \u2286 W to be open just in case x \u2208 X and xRy imply y \u2208 X. Such topologies are called Aleksandrov spaces. If (W, R) contains no proper paths of length greater than 2, we call (W, R) a quasi-saw (Fig. 8). If, in addition, no x \u2208 W has more than two proper R-successors, we call (W, R) a 2-quasi-saw. The properties of 2-quasi-saws we need are as follows [Kontchakov et al., 2010a]:\n-satisfiability of Bc-formulas in arbitrary topological spaces coincides with satisfiability in 2-quasi-saws, and is EXPTIME-complete; -X \u2286 W is connected in a 2-quasi-saw (W, R) iff it is interior-connected in (W, R).\nThe following construction lets us apply these results to the problem Sat(Bc \u2022 , RCP(R 3 )). Say that a connected partition in RCP(R 3 ) is a tuple X 1 , . . . , X k of non-empty polyhedra having connected and pairwise disjoint interiors, which sum to the entire space R 3 . The neighbourhood graph (V, E) of this partition has vertices V = {X 1 , . . . , X k } and edges E = {{X i , X j } | i = j and (X i + X j )\n\u2022 is connected} (Fig. 7). One can show that every connected graph is the neighbour- hood graph of some connected partition in RCP(R 3 ). Furthermore, every neighbourhood graph (V, E) gives rise to a 2-quasi-saw, namely, (W 0 \u222a W 1 , R), where W 0 = V , W 1 = {z x,y | {x, y} \u2208 E}, and R is the reflexive closure of {(z x,y , x), (z x,y , y) | {x, y} \u2208 E}. From this, we see that (i) a Bc \u2022 -formula \u03d5 is satisfiable over RCP(R 3 ) iff (ii) \u03d5 is satisfiable over a connected 2-quasi-saw iff (iii) the Bcformula \u03d5 \u2022 , obtained from \u03d5 by replacing every occurrence of c \u2022 with c, is satisfiable over a connected 2-quasi-saw. Thus, Sat(Bc \u2022 , RCP(R 3 )) is EXPTIME-complete.\nX1 X2 X3 X4 X5 X6 X1 X2 X3 X4 X5 X6\nThe picture changes if we allow variables to range over RC(R 3 ) rather than RCP(R 3 ). Note first that the Bc \u2022 -formula (2) is not satisfiable over 2-quasi-saws, but has a quasi-saw model as in Fig. 8. Some extra geometrical work will show The remarkably diverse computational behaviour of Bc \u2022 over RC(R 3 ), RCP(R 3 ) and RCP(R 2 ) can be explained as follows. To satisfy a Bc \u2022 -formula \u03d5 in RC(R 3 ), it suffices to find polynomially many points in the regions mentioned in \u03d5 (witnessing non-emptiness or non-interior-connectedness constraints), and then to 'inflate' those points to (possibly interior-connected) regular closed sets using the technique of Fig. 9. By contrast, over RCP(R 3 ), one can write a Bc \u2022formula analogous to (8) stating that two interior-connected polyhedra do not share a 2D face. Such 'face-contact' constraints can be used to generate constellations of exponentially many polyhedra simulating runs of alternating Turing machines on polynomial tapes, leading to EXPTIMEhardness. Finally, over RCP(R 2 ), planarity considerations endow Bc \u2022 with the extra expressive power required to enforce full non-contact constructs (not possible in higher dimensions), and thus to encode the PCP as sketched in Sec. 4.", "publication_ref": ["b0", "b0"], "figure_ref": ["fig_4"], "table_ref": []}, {"heading": "Conclusion", "text": "This paper investigated topological constraint languages featuring connectedness predicates and Boolean operations on regions. Unlike their less expressive cousins, RCC8 and RCC5, such languages are highly sensitive to the spaces over which they are interpreted, and exhibit more challenging computational behaviour. Specifically, we demonstrated that the languages Cc, Cc \u2022 and Bc contain formulas satisfiable over RC(R n ), n \u2265 2, but only by regions with infinitely many components. Using a related construction, we proved that the satisfiability problem for any of Bc, Cc, Bc \u2022 and Cc \u2022 , interpreted either over RC(R 2 ), or over its polygonal subalgebra, RCP(R 2 ), is undecidable. Finally, we showed that the satisfiability problem for Bc \u2022 , interpreted over RC(R 3 ), is NPcomplete, which contrasts with EXPTIME-completeness for RCP(R 3 ). The complexity of satisfiability for Bc, Cc and Cc \u2022 over RC(R n ) or RCP(R n ) for n \u2265 3 remains open. The obtained results rely on certain distinctive topological properties of Euclidean spaces. Thus, for example, the argument of Sec. 3 is based on the property of Lemma 1, while Sec. 4 similarly relies on planarity considerations. In both cases, however, the moral is the same: the topological spaces of most interest for Qualitative Spatial Reasoning exhibit special characteristics which any topological constraint language able to express connectedness must take into account.\nThe results of Sec. 4 pose a challenge for Qualitative Spatial Reasoning in the Euclidean plane. On the one hand, the relatively low complexity of RCC8 over disc-homeomorphs suggests the possibility of usefully extending the expressive power of RCC8 without compromising computational properties. On the other hand, our results impose severe limits on any such extension. We observe, however, that the con-structions used in the proofs depend on a strong interaction between the connectedness predicates and the Boolean operations on regular closed sets. We believe that by restricting this interaction one can obtain non-trivial constraint languages with more acceptable complexity. For example, the extension of RCC8 with connectedness constraints is still in NP for both RC(R 2 ) and RCP(R 2 ) [Kontchakov et al., 2010b].", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "", "text": "Acknowledgments. This work was partially supported by the U.K. EPSRC grants EP/E034942/1 and EP/E035248/1.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "", "text": "now that (iv) a Bc \u2022 -formula is satisfiable over RC(R 3 ) iff (v) it is satisfiable over a connected quasi-saw. And as shown in [Kontchakov et al., 2010a], satisfiability of Bc \u2022 -formulas in connected spaces coincides with satisfiability over connected quasi-saws, and is NP-complete. Theorem 7 The problem Sat(Bc \u2022 , RC(R 3 )) is NP-complete. Proof. From the preceding discussion, it suffices to show that (v) implies (iv) for any Bc \u2022 -formula \u03d5. So suppose A |= \u03d5, with A based on a finite connected quasi-saw (W 0 \u222a W 1 , R), where W i contains all points of depth i \u2208 {0, 1} (Fig. 8). Without loss of generality we will assume that there is a special point z 0 of depth 1 such that z 0 Rx for all x of depth 0. We show how A can be embedded into RC(R 3 ).\nTake pairwise disjoint closed balls B 1 x , for x of depth 0, and pairwise disjoint open balls D z , for all z of depth 1 except z 0 (we assume the D z are disjoint from the B 1\nx ). Let D z0 be the closure of the complement of all B 1\nx and D z . We expand the B 1\nx to sets B x forming a connected partition in RC(R 3 ) (i.e. they sum to R 3 , and their interiors are nonempty, connected and pairwise disjoint). To construct the B x , let q 1 , q 2 , . . . be an enumeration of all the points in the interiors of any of the D z with rational coordinates. For x \u2208 W 0 , we set B x to be ( k\u22651 B k x ) \u2212 , where the regular closed sets B k x are defined inductively as follows (Fig. 9). Suppose, for k \u2265 1, B k x has been defined for all x \u2208 W 0 . Let q i be the first point in the list q 1 , q 2 , . . . that is not in any B k x yet. If q i is in the interior of some D z , take a closed ball in the interior of D z centred on q i and disjoint from the B k\nx . Now pick some x such that zRx, and expand B k\nx by the closed ball around q i together with a closed 'rod' connecting it to B 1\nx , in such a way that the rod is disjoint from the rest of the B k\nx ; the result is denoted by B k+1\nx . Consider the function f mapping regular closed sets X \u2286 W to RC(R 3 ), defined by f (X) = x\u2208X\u2229W0 B x . Since the B x form a partition, f preserves +, \u2022, \u2212, 0 and 1. And since, for all z, {B x | zRx} is interior connected, f preserves interior-connectedness. By carefully adding extra balls and rods in the construction of the B k\nx , we can further ensure that non-interior-connected elements of RC(W, R) are mapped to non-interior connected elements of RC(R 3 ) (for details, see [Kontchakov et al., 2011]). Defining an interpretation I over RC(R 3 ) by setting r I = f (r A ) then secures I |= \u03d5. K", "publication_ref": ["b0", "b0"], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "A pointless theory of space based on strong connection and congruence", "journal": "Springer", "year": "1964", "authors": "; B Bennett;  Bennett;  Borgo"}, {"ref_id": "b1", "title": "A spatial logic based on regions and connection", "journal": "", "year": "1992", "authors": "Randell "}, {"ref_id": "b2", "title": "Efficient methods for qualitative spatial reasoning", "journal": "J. Artificial Intelligence Research", "year": "2001", "authors": "J Renz; B Nebel"}, {"ref_id": "b3", "title": "Zakharyaschev. Spatial reasoning in RCC8 with Boolean region terms", "journal": "", "year": "1998", "authors": "J Renz; ; M Schaefer; E Sedgwick; D \u0160tefankovi\u010d"}], "figures": [{"figure_label": "2", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Figure 2 :2Figure 2: Regions satisfying \u03d5 \u221e .", "figure_data": ""}, {"figure_label": "4", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Figure 4 :4Figure 4: A chain of 3-regions satisfying stack(a 1 , a 2 , a 3 ).", "figure_data": ""}, {"figure_label": "5", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "Figure 5 :5Figure 5: Encoding the PCP: Stage 1.", "figure_data": ""}, {"figure_label": "6", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Figure 6 :6Figure 6: Encoding the PCP: Stage 2.", "figure_data": ""}, {"figure_label": "7", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "Figure 7 :7Figure 7: A connected partition and its neighbourhood graph.", "figure_data": ""}, {"figure_label": "89", "figure_type": "figure", "figure_id": "fig_5", "figure_caption": "Figure 8 :Figure 9 :89Figure 8: A quasi-saw model I of (2): r I i = {x i , z}.", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_0", "figure_caption": ") ensures that no component of d i can touch any component of d i+2 .", "figure_data": "ta1a0a3a2a1a0d0d1d2d3d0d1. . ."}], "formulas": [{"formula_id": "formula_0", "formula_text": "Y = X \u222a Y , X \u2022 Y = (X \u2229 Y ) \u2022 \u2212 and \u2212X = (T \\ X) \u2212 . We write X \u2264 Y for X \u2022 (\u2212Y ) = \u2205; thus X \u2264 Y iff X \u2286 Y . A subset X \u2286 T is connected if it cannot be decomposed into two disjoint, non-empty sets closed in the subspace topology; X is interior-connected if X \u2022 is connected. Any (n\u22121)-dimensional hyperplane in R n , n \u2265 1, bounds two elements of RC(R n ) called half-spaces.", "formula_coordinates": [2.0, 54.0, 537.6, 243.06, 78.54]}, {"formula_id": "formula_1", "formula_text": "\u03c4 ::= r | \u03c4 1 + \u03c4 2 | \u03c4 1 \u2022 \u03c4 2 | \u2212\u03c4 1 | 1 | 0, \u03d5 ::= \u03c4 1 = \u03c4 2 | C(\u03c4 1 , \u03c4 2 ) | \u03d5 1 \u2227 \u03d5 2 | \u00ac\u03d5 1 .", "formula_coordinates": [2.0, 323.85, 102.55, 225.32, 24.66]}, {"formula_id": "formula_2", "formula_text": "I = \u2205, 1 I = T , (\u03c4 1 + \u03c4 2 ) I = \u03c4 I 1 + \u03c4 I 2 , etc. We write I |= \u03c4 1 = \u03c4 2 iff \u03c4 I 1 = \u03c4 I 2 , and I |= C(\u03c4 1 , \u03c4 2 ) iff \u03c4 I 1 \u2229 \u03c4 I 2 = \u2205. We read C(\u03c4 1 , \u03c4 2 ) as '\u03c4 1 contacts \u03c4 2 .'", "formula_coordinates": [2.0, 315.0, 161.19, 243.0, 44.96]}, {"formula_id": "formula_3", "formula_text": "I |= c \u2022 (\u03c4 ) iff (\u03c4 I ) \u2022 is connected. Sat(L, S)", "formula_coordinates": [2.0, 315.0, 281.74, 180.08, 11.34]}, {"formula_id": "formula_4", "formula_text": "1\u2264i\u2264k c \u2022 (r i )\u2227(r i = 0) \u2227 i<j c \u2022 (r i +r j )\u2227(r i \u2022r j = 0) . (1)", "formula_coordinates": [2.0, 319.98, 351.88, 238.01, 23.07]}, {"formula_id": "formula_5", "formula_text": "\u2022 -formula 1\u2264i\u22643 c \u2022 (r i ) \u2227 c \u2022 (r 1 + r 2 + r 3 ) \u2227 2\u2264i\u22643 \u00acc \u2022 (r 1 + r i ). (2)", "formula_coordinates": [2.0, 319.98, 432.14, 238.02, 38.35]}, {"formula_id": "formula_6", "formula_text": "r 1 r 2 r 3 Figure 1: Three regions in RC(R 2 ) satisfying (2).", "formula_coordinates": [2.0, 337.99, 516.81, 197.03, 77.86]}, {"formula_id": "formula_7", "formula_text": "0\u2264i\u22643 d i = 1 \u2227 0\u2264i<j\u22643 (d i \u2022 d j = 0).(3)", "formula_coordinates": [3.0, 86.31, 88.17, 210.68, 12.2]}, {"formula_id": "formula_8", "formula_text": "0\u2264i\u22643 (a i = 0) \u2227 (a i \u2264 d i ) \u2227 (t = 0). (4", "formula_coordinates": [3.0, 89.65, 145.27, 203.49, 12.21]}, {"formula_id": "formula_9", "formula_text": ")", "formula_coordinates": [3.0, 293.14, 145.89, 3.87, 8.93]}, {"formula_id": "formula_10", "formula_text": "c(a i + d i+1 + t), (5) \u00acC(a i , d i+1 \u2022 (\u2212a i+1 )) \u2227 \u00acC(a i , t), (6", "formula_coordinates": [3.0, 88.78, 246.35, 208.22, 25.88]}, {"formula_id": "formula_11", "formula_text": ") \u00acC(d i , d i+2 ),(7)", "formula_coordinates": [3.0, 88.79, 261.83, 208.22, 25.59]}, {"formula_id": "formula_12", "formula_text": "V i such that V i \u2229 X i and V i \u2229 X i+1 are non-empty, but V i \u2229 d i+2 is empty. . . . X3 X2 X1 X0 V2 V1 V0 Figure 3: The sequence {X i , V i } i\u22650 generated by \u03d5 \u221e . (S i+1", "formula_coordinates": [3.0, 54.0, 76.6, 503.49, 628.94]}, {"formula_id": "formula_13", "formula_text": "V i must intersect \u03b4S i+1 . Evidently, \u03b4S i+1 \u2286 X i+1 \u2286 d i+1 . Also, \u03b4S i+1 \u2286 \u2212X i+1", "formula_coordinates": [3.0, 315.0, 191.53, 243.0, 21.67]}, {"formula_id": "formula_14", "formula_text": "d i or in d i+2 . Since V i \u2229\u03b4S i+1 = \u2205 and V i \u2229d i+2 = \u2205, we have \u03b4S i+1 \u2286 d i+2 , so \u03b4S i+1 \u2286 d i . Similarly, \u03b4R i+1 \u2286 d i+2 . By (", "formula_coordinates": [3.0, 315.0, 224.77, 243.01, 33.31]}, {"formula_id": "formula_15", "formula_text": "X i+2 \u2286 R i+1 , also S i+1 \u2286 (\u2212X i+2 )", "formula_coordinates": [3.0, 358.95, 280.25, 169.21, 10.71]}, {"formula_id": "formula_16", "formula_text": "\u03b4S i+1 \u2286 X i+1 \u2286 S i+2 , that component must be S i+2 . K", "formula_coordinates": [3.0, 315.0, 302.17, 242.99, 10.71]}, {"formula_id": "formula_17", "formula_text": "c(r 1 ) \u2227 c(r 2 ) \u2227 (a i \u2264 r 1 ) \u2227 (t \u2264 r 2 ) \u2227 \u00acc(r 1 + r 2 ). (8)", "formula_coordinates": [3.0, 325.66, 481.07, 232.34, 10.71]}, {"formula_id": "formula_18", "formula_text": "1\u2264i\u2264k c(\u0227 i +\u00e4 i+1 + \u2022 \u2022 \u2022 +\u00e4 k ) \u2227 j\u2212i>1 \u00acC(a i , a j ).", "formula_coordinates": [4.0, 64.99, 469.91, 221.02, 21.2]}, {"formula_id": "formula_19", "formula_text": "\u03b6 1 \u03b7 1 \u03b6 2 \u03b7 2 \u03b6 3 \u03b7 3 \u03b6 n \u03b7 n \u03b6 *", "formula_coordinates": [4.0, 327.81, 262.14, 199.91, 34.46]}, {"formula_id": "formula_20", "formula_text": "\u00acC(a i , b j ) \u2227 \u00acC(a i , b j ) \u2227 \u00acC(b i + b i , b j + b j + z * ), for all i, j (0 \u2264 i, j < 3, i = j).", "formula_coordinates": [4.0, 315.0, 363.58, 243.0, 22.3]}, {"formula_id": "formula_21", "formula_text": "(b i \u2264 l 0 + l 1 ) \u2227 \u00acC(b i \u2022 l 0 , b i \u2022 l 1 ), for 0 \u2264 i < 3, ensuring", "formula_coordinates": [4.0, 315.0, 453.43, 243.0, 10.71]}], "doi": ""}