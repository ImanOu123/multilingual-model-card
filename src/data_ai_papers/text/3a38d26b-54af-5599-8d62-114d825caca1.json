{"title": "Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections", "authors": "Dipanjan Das; Slav Petrov", "pub_date": "", "abstract": "We describe a novel approach for inducing unsupervised part-of-speech taggers for languages that have no labeled training data, but have translated text in a resource-rich language. Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages. We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg-Kirkpatrick et al., 2010). Across eight European languages, our approach results in an average absolute improvement of 10.4% over a state-of-the-art baseline, and 16.7% over vanilla hidden Markov models induced with the Expectation Maximization algorithm. * This research was carried out during an internship at Google Research.", "sections": [{"heading": "Introduction", "text": "Supervised learning approaches have advanced the state-of-the-art on a variety of tasks in natural language processing, resulting in highly accurate systems. Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English). However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate. Unsupervised learning approaches appear to be a natural solution to this problem, as they require only unannotated text for train-ing models. Unfortunately, the best completely unsupervised English POS tagger (that does not make use of a tagging dictionary) reaches only 76.1% accuracy (Christodoulopoulos et al., 2010), making its practical usability questionable at best.\nTo bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages. 1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language. This scenario is applicable to a large set of languages and has been considered by a number of authors in the past (Alshawi et al., 2000;Xi and Hwa, 2005;Ganchev et al., 2009).  and  study related but different multilingual grammar and tagger induction tasks, where it is assumed that no labeled data at all is available.\nOur work is closest to that of Yarowsky and Ngai (2001), but differs in two important ways. First, we use a novel graph-based framework for projecting syntactic information across language boundaries. To this end, we construct a bilingual graph over word types to establish a connection between the two languages ( \u00a73), and then use graph label propagation to project syntactic information from English to the foreign language ( \u00a74). Second, we treat the projected labels as features in an unsuper-vised model ( \u00a75), rather than using them directly for supervised training. To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011). Syntactic universals are a well studied concept in linguistics (Carnie, 2002;Newmeyer, 2005), and were recently used in similar form by Naseem et al. (2010) for multilingual grammar induction. Because there might be some controversy about the exact definitions of such universals, this set of coarse-grained POS categories is defined operationally, by collapsing language (or treebank) specific distinctions to a set of categories that exists across all languages. These universal POS categories not only facilitate the transfer of POS information from one language to another, but also relieve us from using controversial evaluation metrics, 2 by establishing a direct correspondence between the induced hidden states in the foreign language and the observed English labels.\nWe evaluate our approach on eight European languages ( \u00a76), and show that both our contributions provide consistent and statistically significant improvements. Our final average POS tagging accuracy of 83.4% compares very favorably to the average accuracy of Berg-Kirkpatrick et al.'s monolingual unsupervised state-of-the-art model (73.0%), and considerably bridges the gap to fully supervised POS tagging performance (96.6%).", "publication_ref": ["b7", "b0", "b24", "b9", "b25", "b17", "b6", "b15", "b14"], "figure_ref": [], "table_ref": []}, {"heading": "Approach Overview", "text": "The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages. Central to our approach (see Algorithm 1) is a bilingual similarity graph built from a sentence-aligned parallel corpus. As discussed in more detail in \u00a73, we use two types of vertices in our graph: on the foreign language side vertices correspond to trigram types, while the vertices on the English side are individual word types. Graph construction does not require any labeled data, but makes use of two similarity functions. The edge weights between the foreign language trigrams are computed using a co-occurence based similarity function, designed to indicate how syntactically Algorithm 1 Bilingual POS Induction Require: Parallel English and foreign language data D e and D f , unlabeled foreign training data \u0393 f ; English tagger. Ensure: \u0398 f , a set of parameters learned using a constrained unsupervised model ( \u00a75). 1:\nD e\u2194f \u2190 word-align-bitext(D e , D f ) 2: D e \u2190 pos-tag-supervised(D e ) 3: A \u2190 extract-alignments(D e\u2194f , D e ) 4: G \u2190 construct-graph(\u0393 f , D f , A) 5:G \u2190 graph-propagate(G) 6: \u2206 \u2190 extract-word-constraints(G) 7: \u0398 f \u2190 pos-induce-constrained(\u0393 f , \u2206) 8: Return \u0398 f\nsimilar the middle words of the connected trigrams are ( \u00a73.2). To establish a soft correspondence between the two languages, we use a second similarity function, which leverages standard unsupervised word alignment statistics ( \u00a73.3). 3 Since we have no labeled foreign data, our goal is to project syntactic information from the English side to the foreign side. To initialize the graph we tag the English side of the parallel text using a supervised model. By aggregating the POS labels of the English tokens to types, we can generate label distributions for the English vertices. Label propagation can then be used to transfer the labels to the peripheral foreign vertices (i.e. the ones adjacent to the English vertices) first, and then among all of the foreign vertices ( \u00a74). The POS distributions over the foreign trigram types are used as features to learn a better unsupervised POS tagger ( \u00a75). The following three sections elaborate these different stages is more detail.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Graph Construction", "text": "In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003). Graph construction for structured prediction problems such as POS tagging is non-trivial: on the one hand, using individual words as the vertices throws away the context necessary for disambiguation; on the other hand, it is unclear how to define (sequence) similarity if the vertices correspond to entire sentences. Altun et al. (2005) proposed a technique that uses graph based similarity between labeled and unlabeled parts of structured data in a discriminative framework for semi-supervised learning. More recently, Subramanya et al. (2010) defined a graph over the cliques in an underlying structured prediction model. They considered a semi-supervised POS tagging scenario and showed that one can use a graph over trigram types, and edge weights based on distributional similarity, to improve a supervised conditional random field tagger.", "publication_ref": ["b26", "b1", "b21"], "figure_ref": [], "table_ref": []}, {"heading": "Graph Vertices", "text": "We extend Subramanya et al.'s intuitions to our bilingual setup. Because the information flow in our graph is asymmetric (from English to the foreign language), we use different types of vertices for each language. The foreign language vertices (denoted by V f ) correspond to foreign trigram types, exactly as in Subramanya et al. (2010). On the English side, however, the vertices (denoted by V e ) correspond to word types. Because all English vertices are going to be labeled, we do not need to disambiguate them by embedding them in trigrams. Furthermore, we do not connect the English vertices to each other, but only to foreign language vertices. 4 The graph vertices are extracted from the different sides of a parallel corpus (D e , D f ) and an additional unlabeled monolingual foreign corpus \u0393 f , which will be used later for training. We use two different similarity functions to define the edge weights among the foreign vertices and between vertices from different languages.", "publication_ref": ["b21"], "figure_ref": [], "table_ref": []}, {"heading": "Monolingual Similarity Function", "text": "Our monolingual similarity function (for connecting pairs of foreign trigram types) is the same as the one used by Subramanya et al. (2010). We briefly review it here for completeness. We define a symmetric similarity function K(u i , u j ) over two for- eign language vertices u i , u j \u2208 V f based on the co-occurrence statistics of the nine feature concepts given in Table 1. Each feature concept is akin to a random variable and its occurrence in the text corresponds to a particular instantiation of that random variable. For each trigram type x 2 x 3 x 4 in a sequence x 1 x 2 x 3 x 4 x 5 , we count how many times that trigram type co-occurs with the different instantiations of each concept, and compute the point-wise mutual information (PMI) between the two. 5 The similarity between two trigram types is given by summing over the PMI values over feature instantiations that they have in common. This is similar to stacking the different feature instantiations into long (sparse) vectors and computing the cosine similarity between them. Finally, note that while most feature concepts are lexicalized, others, such as the suffix concept, are not. Given this similarity function, we define a nearest neighbor graph, where the edge weight for the n most similar vertices is set to the value of the similarity function and to 0 for all other vertices. We use N (u) to denote the neighborhood of vertex u, and fixed n = 5 in our experiments.\nDescription Feature Trigram + Context x 1 x 2 x 3 x 4 x 5 Trigram x 2 x 3 x 4 Left Context x 1 x 2 Right Context x 4 x 5 Center Word x 3 Trigram \u2212 Center Word x 2 x 4 Left Word + Right Context x 2 x 4 x 5 Left Context + Right Word x 1 x 2 x 4 Suffix HasSuffix(x 3 )", "publication_ref": ["b21"], "figure_ref": [], "table_ref": ["tab_0"]}, {"heading": "Bilingual Similarity Function", "text": "To define a similarity function between the English and the foreign vertices, we rely on high-confidence word alignments. Since our graph is built from a parallel corpus, we can use standard word alignment techniques to align the English sentences D e and their foreign language translations D f . 6 Label propagation in the graph will provide coverage and high recall, and we therefore extract only intersected high-confidence (> 0.9) alignments D e\u2194f .\nBased on these high-confidence alignments we can extract tuples of the form [u \u2194 v], where u is a foreign trigram type, whose middle word aligns to an English word type v. Our bilingual similarity function then sets the edge weights in proportion to these tuple counts.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Graph Initialization", "text": "So far the graph has been completely unlabeled. To initialize the graph for label propagation we use a supervised English tagger to label the English side of the bitext. 7 We then simply count the individual labels of the English tokens and normalize the counts to produce tag distributions over English word types. These tag distributions are used to initialize the label distributions over the English vertices in the graph. Note that since all English vertices were extracted from the parallel text, we will have an initial label distribution for all vertices in V e .", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Graph Example", "text": "A very small excerpt from an Italian-English graph is shown in Figure 1. As one can see, only the trigrams [suo incarceramento ,], [suo iter ,] and [suo carattere ,] are connected to English words. In this particular case, all English vertices are labeled as nouns by the supervised tagger. In general, the neighborhoods can be more diverse and we allow a soft label distribution over the vertices. It is worth noting that the middle words of the Italian trigrams are nouns too, which exhibits the fact that the similarity metric connects types having the same syntactic category. In the label propagation stage, we propagate the automatic English tags to the aligned Italian trigram types, followed by further propagation solely among the Italian vertices. 6 We ran six iterations of IBM Model 1 (Brown et al., 1993), followed by six iterations of the HMM model (Vogel et al., 1996) in both directions. 7 We used a tagger based on a trigram Markov model (Brants, 2000) trained on the Wall Street Journal portion of the Penn Treebank (Marcus et al., 1993), for its fast speed and reasonable accuracy (96.7% on sections 22-24 of the treebank, but presumably much lower on the (out-of-domain) parallel corpus).\n[ suo iter , ] \n[ suo incarceramento , ] [ suo fidanzato , ] [ suo carattere , ] [ imprisonment ] [ enactment ] [ character ] [ del fidanzato , ] [ il fidanzato , ] NOUN NOUN NOUN [ al fidanzato e ]", "publication_ref": ["b23", "b3", "b13"], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "POS Projection", "text": "Given the bilingual graph described in the previous section, we can use label propagation to project the English POS labels to the foreign language. We use label propagation in two stages to generate soft labels on all the vertices in the graph. In the first stage, we run a single step of label propagation, which transfers the label distributions from the English vertices to the connected foreign language vertices (say, V l f ) at the periphery of the graph. Note that because we extracted only high-confidence alignments, many foreign vertices will not be connected to any English vertices. This stage of label propagation results in a tag distribution r i over labels y, which encodes the proportion of times the middle word of u i \u2208 V f aligns to English words v y tagged with label y:\nr i (y) = vy #[u i \u2194 v y ] y v y #[u i \u2194 v y ] (1)\nThe second stage consists of running traditional label propagation to propagate labels from these peripheral vertices V l f to all foreign language vertices in the graph, optimizing the following objective:\nC(q) = u i \u2208V f \\V l f ,u j \u2208N (u i ) w ij q i \u2212 q j 2 + \u03bd u i \u2208V f \\V l f q i \u2212 U 2 s.t. y q i (y) = 1 \u2200u i q i (y) \u2265 0 \u2200u i , y q i = r i \u2200u i \u2208 V l f (2)\nwhere the q i (i = 1, . . . , |V f |) are the label distributions over the foreign language vertices and \u00b5 and \u03bd are hyperparameters that we discuss in \u00a76.4. We use a squared loss to penalize neighboring vertices that have different label distributions:\nq i \u2212 q j 2 = y (q i (y) \u2212 q j (y)) 2\n, and additionally regularize the label distributions towards the uniform distribution U over all possible labels Y. It can be shown that this objective is convex in q.\nThe first term in the objective function is the graph smoothness regularizer which encourages the distributions of similar vertices (large w ij ) to be similar. The second term is a regularizer and encourages all type marginals to be uniform to the extent that is allowed by the first two terms (cf. maximum entropy principle). If an unlabeled vertex does not have a path to any labeled vertex, this term ensures that the converged marginal for this vertex will be uniform over all tags, allowing the middle word of such an unlabeled vertex to take on any of the possible tags.\nWhile it is possible to derive a closed form solution for this convex objective function, it would require the inversion of a matrix of order |V f |. Instead, we resort to an iterative update based method. We formulate the update as follows:\nq (m) i (y) = \uf8f1 \uf8f2 \uf8f3 r i (y) if u i \u2208 V l f \u03b3 i (y) \u03ba i otherwise (3\n)\nwhere \u2200u i \u2208 V f \\ V l f , \u03b3 i (y) and \u03ba i are defined as:\n\u03b3 i (y) = u j \u2208N (u i ) w ij q (m\u22121) j (y) + \u03bd U (y) (4) \u03ba i = \u03bd + u j \u2208N (u i ) w ij (5)\nWe ran this procedure for 10 iterations.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "POS Induction", "text": "After running label propagation (LP), we compute tag probabilities for foreign word types x by marginalizing the POS tag distributions of foreign trigrams u i = x \u2212 x x + over the left and right context words:\np(y|x) = x \u2212 ,x + q i (y) x \u2212 ,x + ,y q i (y )(6)\nWe then extract a set of possible tags t x (y) by eliminating labels whose probability is below a threshold value \u03c4 :\nt x (y) = 1 if p(y|x) \u2265 \u03c4 0 otherwise (7)\nWe describe how we choose \u03c4 in \u00a76.4. This vector t x is constructed for every word in the foreign vocabulary and will be used to provide features for the unsupervised foreign language POS tagger. We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010). For a sentence x and a state sequence z, a first order Markov model defines a distribution:\nP \u0398 (X = x, Z = z) = P \u0398 (Z 1 = z 1 )\u2022 |x| i=1 P \u0398 (Z i+1 = z i+1 | Z i = z i ) transition \u2022 P \u0398 (X i = x i | Z i = z i ) emission (8)\nIn a traditional Markov model, the emission distribution P \u0398 (X i = x i | Z i = z i ) is a set of multinomials. The feature-based model replaces the emission distribution with a log-linear model, such that:\nP \u0398 (X = x | Z = z) = exp \u0398 f (x, z) x \u2208Val(X) exp \u0398 f (x , z)(9)\nwhere Val(X) corresponds to the entire vocabulary. This locally normalized log-linear model can look at various aspects of the observation x, incorporating overlapping features of the observation. In our experiments, we used the same set of features as Berg-Kirkpatrick et al. (2010): an indicator feature based on the word identity x, features checking whether x contains digits or hyphens, whether the first letter of x is upper case, and suffix features up to length 3. All features were conjoined with the state z.\nWe trained this model by optimizing the following objective function:\nL(\u0398) = N i=1 log z P \u0398 (X = x (i) , Z = z (i) ) \u2212C \u0398 2 2 (10)\nNote that this involves marginalizing out all possible state configurations z for a sentence x, resulting in a non-convex objective. To optimize this function, we used L-BFGS, a quasi-Newton method (Liu and Nocedal, 1989). For English POS tagging, Berg-Kirkpatrick et al. (2010) found that this direct gradient method performed better (>7% absolute accuracy) than using a feature-enhanced modification of the Expectation-Maximization (EM) algorithm (Dempster et al., 1977). 8 Moreover, this route of optimization outperformed a vanilla HMM trained with EM by 12%.\nWe adopted this state-of-the-art model because it makes it easy to experiment with various ways of incorporating our novel constraint feature into the log-linear emission model. This feature f t incorporates information from the smoothed graph and prunes hidden states that are inconsistent with the thresholded vector t x . The function \u03bb : F \u2192 C maps from the language specific fine-grained tagset F to the coarser universal tagset C and is described in detail in \u00a76.2:\nf t (x, z) = log(t x (y)), if \u03bb(z) = y (11\n)\nNote that when t x (y) = 1 the feature value is 0 and has no effect on the model, while its value is \u2212\u221e when t x (y) = 0 and constrains the HMM's state space. This formulation of the constraint feature is equivalent to the use of a tagging dictionary extracted from the graph using a threshold \u03c4 on the posterior distribution of tags for a given word type (Eq. 7). It would have therefore also been possible to use the integer programming (IP) based approach of Ravi and Knight (2009) instead of the feature-HMM for POS induction on the foreign side. However, we do not explore this possibility in the current work.", "publication_ref": ["b2", "b2", "b12", "b2", "b8", "b18"], "figure_ref": [], "table_ref": []}, {"heading": "Experiments and Results", "text": "Before presenting our results, we describe the datasets that we used, as well as two baselines.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Datasets", "text": "We utilized two kinds of datasets in our experiments: (i) monolingual treebanks 9 and (ii) large amounts of parallel text with English on one side. The availability of these resources guided our selection of foreign languages. For monolingual treebank data we relied on the CoNLL-X and CoNLL-2007 shared tasks on dependency parsing (Buchholz and Marsi, 2006;Nivre et al., 2007). The parallel data came from the Europarl corpus (Koehn, 2005) and the ODS United Nations dataset (UN, 2006). Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.\nOf course, we are primarily interested in applying our techniques to languages for which no labeled resources are available. However, we needed to restrict ourselves to these languages in order to be able to evaluate the performance of our approach. We paid particular attention to minimize the number of free parameters, and used the same hyperparameters for all language pairs, rather than attempting language-specific tuning. We hope that this will allow practitioners to apply our approach directly to languages for which no resources are available.", "publication_ref": ["b5", "b16", "b11", "b22"], "figure_ref": [], "table_ref": []}, {"heading": "Part-of-Speech Tagset and HMM States", "text": "We use the universal POS tagset of Petrov et al. (2011) in our experiments. 10 This set C consists of the following 12 coarse-grained tags: NOUN (nouns), VERB (verbs), ADJ (adjectives), ADV (adverbs), PRON (pronouns), DET (determiners), ADP (prepositions or postpositions), NUM (numerals), CONJ (conjunctions), PRT (particles), PUNC (punctuation marks) and X (a catch-all for other categories such as abbreviations or foreign words). While there might be some controversy about the exact definition of such a tagset, these 12 categories cover the most frequent part-of-speech and exist in one form or another in all of the languages that we studied.\nFor each language under consideration, Petrov et al. (2011) provide a mapping \u03bb from the fine-grained language specific POS tags in the foreign treebank to the universal POS tags. The supervised POS tagging accuracies (on this tagset) are shown in the last row of Table 2. The taggers were trained on datasets labeled with the universal tags.\nThe number of latent HMM states for each language in our experiments was set to the number of fine tags in the language's treebank. In other words, the set of hidden states F was chosen to be the fine set of treebank tags. Therefore, the number of fine tags varied across languages for our experiments; however, one could as well have fixed the set of HMM states to be a constant across languages, and created one mapping to the universal POS tagset.", "publication_ref": ["b17", "b17"], "figure_ref": [], "table_ref": []}, {"heading": "Various Models", "text": "To provide a thorough analysis, we evaluated three baselines and two oracles in addition to two variants of our graph-based approach. We were intentionally lenient with our baselines:\n\u2022 EM-HMM: A traditional HMM baseline, with multinomial emission and transition distributions estimated by the Expectation Maximization algorithm. We evaluated POS tagging accuracy using the lenient many-to-1 evaluation approach (Johnson, 2007).\n\u2022 Feature-HMM: The vanilla feature-HMM of Berg-Kirkpatrick et al. (2010) (i.e. no additional constraint feature) served as a second baseline. Model parameters were estimated with L-BFGS and evaluation again used a greedy many-to-1 mapping.\n\u2022 Projection: Our third baseline incorporates bilingual information by projecting POS tags directly across alignments in the parallel data.\nFor unaligned words, we set the tag to the most frequent tag in the corresponding treebank. For each language, we took the same number of sentences from the bitext as there are in its treebank, and trained a supervised feature-HMM. This can be seen as a rough approximation of Yarowsky and Ngai (2001).\nWe tried two versions of our graph-based approach:\n\u2022 No LP: Our first version takes advantage of our bilingual graph, but extracts the constraint feature after the first stage of label propagation (Eq. 1). Because many foreign word types are not aligned to an English word (see Table 3), and we do not run label propagation on the foreign side, we expect the projected information to have less coverage. Furthermore we expect the label distributions on the foreign to be fairly noisy, because the graph constraints have not been taken into account yet.\n\u2022 With LP: Our full model uses both stages of label propagation (Eq. 2) before extracting the constraint features. As a result, we are able to extract the constraint feature for all foreign word types and furthermore expect the projected tag distributions to be smoother and more stable.\nOur oracles took advantage of the labeled treebanks:\n\u2022 TB Dictionary: We extracted tagging dictionaries from the treebanks and and used them as constraint features in the feature-based HMM. Evaluation was done using the prespecified mappings.\n\u2022 Supervised: We trained the supervised model of Brants (2000) on the original treebanks and mapped the language-specific tags to the universal tags for evaluation.", "publication_ref": ["b10", "b25", "b3"], "figure_ref": [], "table_ref": ["tab_3"]}, {"heading": "Experimental Setup", "text": "While we tried to minimize the number of free parameters in our model, there are a few hyperparameters that need to be set. Fortunately, performance was stable across various values, and we were able to use the same hyperparameters for all languages. We used C = 1.0 as the L 2 regularization constant in (Eq. 10) and trained both EM and L-BFGS for 1000 iterations. When extracting the vector Table 2: Part-of-speech tagging accuracies for various baselines and oracles, as well as our approach. \"Avg\" denotes macro-average across the eight languages.\nt x used to compute the constraint feature from the graph, we tried three threshold values for \u03c4 (see Eq. 7). Because we don't have a separate development set, we used the training set to select among them and found 0.2 to work slightly better than 0.1 and 0.3. For seven out of eight languages a threshold of 0.2 gave the best results for our final model, which indicates that for languages without any validation set, \u03c4 = 0.2 can be used. For graph propagation, the hyperparameter \u03bd was set to 2 \u00d7 10 \u22126 and was not tuned. The graph was constructed using 2 million trigrams; we chose these by truncating the parallel datasets up to the number of sentence pairs that contained 2 million trigrams.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Results", "text": "Table 2 shows our complete set of results. As expected, the vanilla HMM trained with EM performs the worst. The feature-HMM model works better for all languages, generalizing the results achieved for English by Berg-Kirkpatrick et al. (2010). Our \"Projection\" baseline is able to benefit from the bilingual information and greatly improves upon the monolingual baselines, but falls short of the \"No LP\" model by 2.5% on an average. The \"No LP\" model does not outperform direct projection for German and Greek, but performs better for six out of eight languages. Overall, it gives improvements ranging from 1.1% for German to 14.7% for Italian, for an average improvement of 8.3% over the unsupervised feature-HMM model. For comparison, the completely unsupervised feature-HMM baseline accuracy on the universal POS tags for English is 79.4%, and goes up to 88.7% with a treebank dictionary. Our full model (\"With LP\") outperforms the unsupervised baselines and the \"No LP\" setting for all languages. It falls short of the \"Projection\" baseline for German, but is statistically indistinguishable in terms of accuracy. As indicated by bolding, for seven out of eight languages the improvements of the \"With LP\" setting are statistically significant with respect to the other models, including the \"No LP\" setting. 11 Overall, it performs 10.4% better than the hitherto state-of-the-art feature-HMM baseline, and 4.6% better than direct projection, when we macro-average the accuracy over all languages.", "publication_ref": ["b2"], "figure_ref": [], "table_ref": []}, {"heading": "Discussion", "text": "Our full model outperforms the \"No LP\" setting because it has better vocabulary coverage and allows the extraction of a larger set of constraint features. We tabulate this increase in Table 3. For all languages, the vocabulary sizes increase by several thousand words. Although the tag distributions of the foreign words (Eq. 6) are noisy, the results confirm that label propagation within the foreign language part of the graph adds significant quality for every language.\nFigure 2 shows an excerpt of a sentence from the Italian test set and the tags assigned by four different models, as well as the gold tags. While the first three models get three to four tags wrong, our best model gets only one word wrong and is the most accurate among the four models for this example. Examining the word fidanzato for the \"No LP\" and \"With LP\" models is particularly instructive. As Figure 1 shows, this word has no high-confidence alignment in the Italian-English bitext. As a result, its POS tag needs to be induced in the \"No LP\" case, while the  correct tag is available as a constraint feature in the \"With LP\" case.", "publication_ref": [], "figure_ref": ["fig_0"], "table_ref": ["tab_3"]}, {"heading": "Conclusion", "text": "We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages. Because we are interested in applying our techniques to languages for which no labeled resources are available, we paid particular attention to minimize the number of free parameters and used the same hyperparameters for all language pairs. Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language. Our results outperform strong unsupervised baselines as well as approaches that rely on direct projections, and bridge the gap between purely supervised and unsupervised POS tagging models.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Acknowledgements", "text": "We would like to thank Ryan McDonald for numerous discussions on this topic. We would also like to thank Amarnag Subramanya for helping us with the implementation of label propagation and Shankar Kumar for access to the parallel data. Finally, we thank Kuzman Ganchev and the three anonymous reviewers for helpful suggestions and comments on earlier drafts of this paper.", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Head-transducer models for speech translation and their automatic acquisition from bilingual data. Machine Translation", "journal": "", "year": "2000", "authors": "Hiyan Alshawi; Srinivas Bangalore; Shona Douglas"}, {"ref_id": "b1", "title": "Maximum margin semi-supervised learning for structured variables", "journal": "", "year": "2005", "authors": "Yasemin Altun; David Mcallester; Mikhail Belkin"}, {"ref_id": "b2", "title": "Painless unsupervised learning with features", "journal": "", "year": "2010", "authors": "Taylor Berg-Kirkpatrick; Alexandre B C\u00f4t\u00e9; John Denero; Dan Klein"}, {"ref_id": "b3", "title": "TnT -a statistical part-of-speech tagger", "journal": "", "year": "2000", "authors": "Thorsten Brants"}, {"ref_id": "b4", "title": "The mathematics of statistical machine translation: parameter estimation", "journal": "Computational Linguistics", "year": "1993", "authors": "F Peter;  Brown; J Della Vincent; Stephen A Pietra; Robert L Della Pietra;  Mercer"}, {"ref_id": "b5", "title": "CoNLL-X shared task on multilingual dependency parsing", "journal": "", "year": "2006", "authors": "Sabine Buchholz; Erwin Marsi"}, {"ref_id": "b6", "title": "Syntax: A Generative Introduction (Introducing Linguistics)", "journal": "Blackwell Publishing", "year": "2002", "authors": "Andrew Carnie"}, {"ref_id": "b7", "title": "Two decades of unsupervised POS induction: How far have we come?", "journal": "", "year": "2010", "authors": "Christos Christodoulopoulos; Sharon Goldwater; Mark Steedman"}, {"ref_id": "b8", "title": "Maximum likelihood from incomplete data via the EM algorithm", "journal": "Journal of the Royal Statistical Society, Series B", "year": "1977", "authors": "Arthur P Dempster; Nan M Laird; Donald B "}, {"ref_id": "b9", "title": "Dependency grammar induction via bitext projection constraints", "journal": "", "year": "2009", "authors": "Kuzman Ganchev; Jennifer Gillenwater; Ben Taskar"}, {"ref_id": "b10", "title": "Why doesn't EM find good HMM POS-taggers?", "journal": "", "year": "2007", "authors": "Mark Johnson"}, {"ref_id": "b11", "title": "Europarl: A parallel corpus for statistical machine translation", "journal": "", "year": "2005", "authors": "Philipp Koehn"}, {"ref_id": "b12", "title": "On the limited memory BFGS method for large scale optimization", "journal": "", "year": "1989", "authors": "C Dong; Jorge Liu;  Nocedal"}, {"ref_id": "b13", "title": "Building a large annotated corpus of English: the Penn treebank", "journal": "Computational Linguistics", "year": "1993", "authors": "Mitchell P Marcus; Mary Ann Marcinkiewicz; Beatrice Santorini"}, {"ref_id": "b14", "title": "Multilingual part-of-speech tagging: Two unsupervised approaches", "journal": "", "year": "2009", "authors": "Tahira Naseem; Benjamin Snyder; Jacob Eisenstein; Regina Barzilay"}, {"ref_id": "b15", "title": "Possible and Probable Languages: A Generative Perspective on Linguistic Typology", "journal": "Oxford University Press", "year": "2005", "authors": "Frederick J Newmeyer"}, {"ref_id": "b16", "title": "The CoNLL 2007 shared task on dependency parsing", "journal": "", "year": "2007", "authors": "Joakim Nivre; Johan Hall; Sandra K\u00fcbler; Ryan Mcdonald; Jens Nilsson; Sebastian Riedel; Deniz Yuret"}, {"ref_id": "b17", "title": "A universal part-of-speech tagset", "journal": "", "year": "2011", "authors": "Slav Petrov; Dipanjan Das; Ryan Mcdonald"}, {"ref_id": "b18", "title": "Minimized models for unsupervised part-of-speech tagging", "journal": "", "year": "2009", "authors": "Sujith Ravi; Kevin Knight"}, {"ref_id": "b19", "title": "Guided learning for bidirectional sequence classification", "journal": "", "year": "2007", "authors": "Libin Shen; Giorgio Satta; Aravind Joshi"}, {"ref_id": "b20", "title": "Unsupervised multilingual grammar induction", "journal": "", "year": "2009", "authors": "Benjamin Snyder; Tahira Naseem; Regina Barzilay"}, {"ref_id": "b21", "title": "Efficient graph-based semi-supervised learning of structured tagging models", "journal": "", "year": "2010", "authors": "Amar Subramanya; Slav Petrov; Fernando Pereira"}, {"ref_id": "b22", "title": "ODS UN parallel corpus", "journal": "", "year": "2006", "authors": "U N "}, {"ref_id": "b23", "title": "HMM-based word alignment in statistical translation", "journal": "", "year": "1996", "authors": "Stephan Vogel; Hermann Ney; Christoph Tillmann"}, {"ref_id": "b24", "title": "A backoff model for bootstrapping resources for non-English languages", "journal": "", "year": "2005", "authors": "Chenhai Xi; Rebecca Hwa"}, {"ref_id": "b25", "title": "Inducing multilingual POS taggers and NP bracketers via robust projection across aligned corpora", "journal": "", "year": "2001", "authors": "David Yarowsky; Grace Ngai"}, {"ref_id": "b26", "title": "Semi-supervised learning using gaussian fields and harmonic functions", "journal": "", "year": "2003", "authors": "Xiaojin Zhu; Zoubin Ghahramani; John D Lafferty"}], "figures": [{"figure_label": "1", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Figure 1 :1Figure 1: An excerpt from the graph for Italian. Three of the Italian vertices are connected to an automatically labeled English vertex. Label propagation is used to propagate these tags inwards and results in tag distributions for the middle word of each Italian trigram.", "figure_data": ""}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_0", "figure_caption": "Various features used for computing edge weights between foreign trigram types.", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "Tags produced by the different models along with the reference set of tags for a part of a sentence from the Italian test set. Italicized tags denote incorrect labels.", "figure_data": "sitrovavainunparcoconilfidanzatoPaoloF. , 27 anni, rappresentanteEM-HMM:CONJ NOUNDETDET NOUNADP DETNOUN.NOUN . NUM NOUN . NOUNFeature-HMM:PRON VERBADPDET NOUNCONJ DETNOUNNOUN NOUN . ADP NOUN .VERBNo LP:VERBVERBADPDET NOUNADP DETADJNOUN ADJ . NUM NOUN . NOUNWith LP:VERBVERBADPDET NOUNADP DETNOUNNOUN NOUN . NUM NOUN . NOUNGold:PRON VERBADPDET NOUNADP DETNOUNNOUN NOUN . NUM NOUN . NOUNFigure 2: Language# words with constraints \"No LP\" \"With LP\"Danish88,240128, 391Dutch51,16974,892German59,534107,249Greek90,231114,002Italian48,90462,461Portuguese 46,78765,737Spanish72,21582,459Swedish70,18188,454"}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_3", "figure_caption": "Size of the vocabularies for the \"No LP\" and \"With LP\" models for which we can impose constraints.", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "D e\u2194f \u2190 word-align-bitext(D e , D f ) 2: D e \u2190 pos-tag-supervised(D e ) 3: A \u2190 extract-alignments(D e\u2194f , D e ) 4: G \u2190 construct-graph(\u0393 f , D f , A) 5:G \u2190 graph-propagate(G) 6: \u2206 \u2190 extract-word-constraints(G) 7: \u0398 f \u2190 pos-induce-constrained(\u0393 f , \u2206) 8: Return \u0398 f", "formula_coordinates": [2.0, 319.32, 140.74, 191.28, 108.83]}, {"formula_id": "formula_1", "formula_text": "Description Feature Trigram + Context x 1 x 2 x 3 x 4 x 5 Trigram x 2 x 3 x 4 Left Context x 1 x 2 Right Context x 4 x 5 Center Word x 3 Trigram \u2212 Center Word x 2 x 4 Left Word + Right Context x 2 x 4 x 5 Left Context + Right Word x 1 x 2 x 4 Suffix HasSuffix(x 3 )", "formula_coordinates": [3.0, 328.83, 59.78, 195.04, 133.05]}, {"formula_id": "formula_2", "formula_text": "[ suo incarceramento , ] [ suo fidanzato , ] [ suo carattere , ] [ imprisonment ] [ enactment ] [ character ] [ del fidanzato , ] [ il fidanzato , ] NOUN NOUN NOUN [ al fidanzato e ]", "formula_coordinates": [4.0, 327.74, 60.19, 206.5, 138.24]}, {"formula_id": "formula_3", "formula_text": "r i (y) = vy #[u i \u2194 v y ] y v y #[u i \u2194 v y ] (1)", "formula_coordinates": [4.0, 362.27, 588.02, 177.73, 53.75]}, {"formula_id": "formula_4", "formula_text": "C(q) = u i \u2208V f \\V l f ,u j \u2208N (u i ) w ij q i \u2212 q j 2 + \u03bd u i \u2208V f \\V l f q i \u2212 U 2 s.t. y q i (y) = 1 \u2200u i q i (y) \u2265 0 \u2200u i , y q i = r i \u2200u i \u2208 V l f (2)", "formula_coordinates": [5.0, 89.84, 80.04, 208.96, 128.66]}, {"formula_id": "formula_5", "formula_text": "q i \u2212 q j 2 = y (q i (y) \u2212 q j (y)) 2", "formula_coordinates": [5.0, 83.52, 269.1, 215.28, 27.72]}, {"formula_id": "formula_6", "formula_text": "q (m) i (y) = \uf8f1 \uf8f2 \uf8f3 r i (y) if u i \u2208 V l f \u03b3 i (y) \u03ba i otherwise (3", "formula_coordinates": [5.0, 115.0, 559.63, 179.57, 42.09]}, {"formula_id": "formula_7", "formula_text": ")", "formula_coordinates": [5.0, 294.56, 575.33, 4.24, 9.46]}, {"formula_id": "formula_8", "formula_text": "\u03b3 i (y) = u j \u2208N (u i ) w ij q (m\u22121) j (y) + \u03bd U (y) (4) \u03ba i = \u03bd + u j \u2208N (u i ) w ij (5)", "formula_coordinates": [5.0, 87.32, 629.84, 211.48, 60.07]}, {"formula_id": "formula_9", "formula_text": "p(y|x) = x \u2212 ,x + q i (y) x \u2212 ,x + ,y q i (y )(6)", "formula_coordinates": [5.0, 372.79, 157.63, 167.21, 53.14]}, {"formula_id": "formula_10", "formula_text": "t x (y) = 1 if p(y|x) \u2265 \u03c4 0 otherwise (7)", "formula_coordinates": [5.0, 364.98, 270.82, 175.02, 26.07]}, {"formula_id": "formula_11", "formula_text": "P \u0398 (X = x, Z = z) = P \u0398 (Z 1 = z 1 )\u2022 |x| i=1 P \u0398 (Z i+1 = z i+1 | Z i = z i ) transition \u2022 P \u0398 (X i = x i | Z i = z i ) emission (8)", "formula_coordinates": [5.0, 341.48, 426.82, 198.52, 75.53]}, {"formula_id": "formula_12", "formula_text": "P \u0398 (X = x | Z = z) = exp \u0398 f (x, z) x \u2208Val(X) exp \u0398 f (x , z)(9)", "formula_coordinates": [5.0, 319.45, 574.1, 220.55, 52.79]}, {"formula_id": "formula_13", "formula_text": "L(\u0398) = N i=1 log z P \u0398 (X = x (i) , Z = z (i) ) \u2212C \u0398 2 2 (10)", "formula_coordinates": [6.0, 79.0, 151.93, 219.8, 50.81]}, {"formula_id": "formula_14", "formula_text": "f t (x, z) = log(t x (y)), if \u03bb(z) = y (11", "formula_coordinates": [6.0, 111.35, 524.23, 182.9, 10.75]}, {"formula_id": "formula_15", "formula_text": ")", "formula_coordinates": [6.0, 294.26, 524.7, 4.54, 9.46]}], "doi": ""}