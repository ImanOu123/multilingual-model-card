{"title": "Vector-Valued Image Regularization with PDEs: A Common Framework for Different Applications", "authors": "David Tschumperl\u00e9; Rachid Deriche", "pub_date": "", "abstract": "In this paper, we focus on techniques for vector-valued image regularization, based on variational methods and PDEs. Starting from the study of PDE-based formalisms previously proposed in the literature for the regularization of scalar and vector-valued data, we propose a unifying expression that gathers the majority of these previous frameworks into a single generic anisotropic diffusion equation. On one hand, the resulting expression provides a simple interpretation of the regularization process in terms of local filtering with spatially adaptive Gaussian kernels. On the other hand, it naturally disassembles any regularization scheme into the smoothing process itself and the underlying geometry that drives the smoothing. Thus, we can easily specialize our generic expression into different regularization PDEs that fulfill desired smoothing behaviors, depending on the considered application: image restoration, inpainting, magnification, flow visualization, etc. Specific numerical schemes are also proposed, allowing us to implement our regularization framework with accuracy by taking the local filtering properties of the proposed equations into account. Finally, we illustrate the wide range of applications handled by our selected anisotropic diffusion equations with application results on color images.", "sections": [{"heading": "INTRODUCTION AND STATE OF THE ART", "text": "F OR several years, regularization algorithms have raised a huge interest in the computer vision and image processing community. It basically consists of simplifying a signal or an image, in a way that only interesting features are preserved while unimportant data (considered as \"noise\") are removed. By the way, such methods have direct applications for image denoising, but their abilities to create simplified representations of data are very interesting as well, when dealing with features extraction (edges and corners in images for instance). Actually, it is often one of the key stage performed by high-level algorithms in computer vision or image processing areas, such as object recognition, tracking, etc. Regularization algorithms are used as low-level steps in more complex processing pipelines and their adequations to the considered problems are crucial. For these reasons, a lot of regularization frameworks have already been proposed in the literature. Pioneering works in this area have been initiated, for instance, in [1], [3], [18], [19], [21], [34].\nIn the late 1980s, the framework of nonlinear PDEs (partial differential equations) led to strong improvements in the formalization of regularization methods. First created to describe physical laws and natural motions of mechanic objects and fluids (strings, water, wind [52]), PDEs were already widely studied. Interesting results coming from the fields of physics and mathematics have been recently extended and used to improve data regularization schemes. Nonlinear PDEs succeed in smoothing data while preserving large global features such as contours and corners (discontinuities of the signal) and their use within variational frameworks has opened new ways to handle classical image processing issues (restoration, segmentation, registration, etc.). Thus, many PDE-based schemes have been presented so far in the literature, particularly for the regularization of 2D scalar images I : & IR 2 ! IR (see, for instance, [2], [4], [27], [30], [34], [37], [51], [53], [54] and references therein).\nAnother interesting property of nonlinear regularization PDEs such as @I @t \u00bc R is the notion of scale-space behind: The data are gently regularized step-by-step and a continuous sequence of smoother images I \u00f0t\u00de is generated whereas the evolution time t goes by. Obviously, such regularization algorithms must let the less significant data features disappear first, while the interesting ones are preserved as long as they become unimportant themselves within the image. Roughly speaking, regularization PDEs may be seen as nonlinear filters that simplify the image little by little and minimize then the image variations. Note, therefore, that they generally do not converge toward a very interesting solution. Most of the time, the image obtained at convergence (t ! 1) is constant, corresponding to an image without any variations: This is actually the most simplified image we can obtain. To avoid this effect, denoising algorithms are usually based on a regularization term R coupled with a data attachment term \u00f0I noisy \u00c0 I\u00de, also called fidelity term. It avoids the expected solution (regularized image) at convergence to be too different from the original noisy image (not constant, by the way). Another classical restoration technique is done by stopping the pure regularization flow @I @t \u00bc R after a finite number of iterations. In this article, we are mainly interested in the regularization term behavior rather than the fidelity term. For an interesting mathematical study about fidelity terms, please refer to [29], [31].\nExtensions of these nonlinear regularization PDEs to vector-valued images I : ! IR n have been recently proposed, leading to more elaborated expressions: A coupling between image channels generally appears in the equations, through the consideration of a local vector geometry, given pointwise by the spectral elements \u00fe ; \u00c0 (positive eigenvalues) and \u00fe ; \u00c0 (orthogonal eigenvectors) of the 2 \u00c2 2 symmetric and semi-positive-definite matrix, also called structure tensor [45], [48], [51], [55]:\nG \u00bc X n j\u00bc1\nrI j rI T j :\nEach rI j corresponds to the spatial gradient of the jth channel (i.e., vector component) of the vector-valued image I. As demonstrated in [55], the structure tensor G is particularly interesting since the eigenvalues AE , respectively, define the local min/max vector-valued variations of I in corresponding spatial directions AE (eigenvectors), i.e., the spectral elements of G define the local geometry of the vector-valued image discontinuities. (Note that \u00fe \u00bc krIk and \u00fe \u00bc rI=krIk for scalar images, when n \u00bc 1).\nStarting from this basis, we can classify diffusion PDE's schemes proposed in the literature into one of these three following approaches, related to different interpretation levels of the regularization process, described in Sections 1.1, 1.2, and 1.3 below.", "publication_ref": ["b0", "b2", "b17", "b18", "b20", "b33", "b51", "b1", "b3", "b26", "b29", "b33", "b36", "b50", "b52", "b53", "b28", "b30", "b44", "b47", "b50", "b54", "b54"], "figure_ref": [], "table_ref": []}, {"heading": "Functional Minimization", "text": "Regularizing an image I may be seen as the minimization of a functional E\u00f0I\u00de measuring a global image variation. The idea is that minimizing this functional will flatten the image variations, then gradually remove the noise:\nmin I:!IR n E\u00f0I\u00de \u00bc Z \u00f0N \u00f0I\u00de\u00de d;\u00f01\u00de\nwhere N \u00f0I\u00de is a norm related to local image variations and : IR ! IR is an increasing function. One often chooses\nN \u00f0I\u00de \u00bc ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi \u00fe \u00fe \u00c0 p\nfor vector-valued images [7], [10], [33], [41], [46], [47], but other norms are possible such as N \u00f0I\u00de \u00bc ffiffiffiffiffiffi \u00fe p [9], [35], [36], or N \u00f0I\u00de \u00bc ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi \u00fe \u00c0 \u00c0 p [38], [49], [50]. For scalar images I : ! IR, these norms naturally reduce to the same expression N \u00f0I\u00de \u00bc krIk. Then, the minimization of ( 1) is performed through a gradient descent (PDE), coming from the Euler-Lagrange equations of E\u00f0I\u00de.\nThis technique has been widely used in the context of scalar images [4], [15], [16], [24], [25], [54], for instance, by minimizing the area of a surface representing the image (Fig. 1). Corresponding references for vector-valued images are: [10], [22], [33], [37], [39], [42], [44].", "publication_ref": ["b6", "b9", "b32", "b40", "b45", "b46", "b8", "b34", "b35", "b37", "b48", "b49", "b3", "b14", "b15", "b23", "b24", "b53", "b9", "b21", "b32", "b36", "b38", "b41", "b43"], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "Divergence Expressions", "text": "A regularization process may be also more locally designed, as a diffusion of pixel values, viewed as chemical concentrations or temperatures [51], [20], and directed by a 2 \u00c2 2 diffusion tensor D (symmetric and definite-positive matrix):\n@I i @t \u00bc div \u00f0DrI i \u00de \u00f0i \u00bc 1::n\u00de:\u00f02\u00de\nIt is generally assumed that the spectral elements of D give the two weights and directions of the local smoothing performed by (2). D is then specially designed from the spectral elements of the structure tensor G in order to anisotropically smooth I, while taking its intrinsic local geometry into account, preserving its global discontinuities. Anyway, we will show throughout this paper that the interpretation of the PDE (2) in terms of local smoothing is not so obvious. Actually, the spectral shape of the tensors D is not always representative of the effective smoothing performed by (2). This can be easily understood as follows: Let us consider a simple case of two different \"divergence\" tensors D 1 and D 2 defined by\nD 1 \u00bc Id krIk and D 2 \u00bc 1 krIk 3 \u00f0rIrI T \u00de: D 1 is isotropic (since it\nis only a weighted identity matrix) while D 2 is purely anisotropic (only one eigenvalue is nonzero). Nevertheless, it is easy to verify that div \u00f0D 1 rI\u00de \u00bc div\u00f0D 2 rI\u00de \u00bc div rI krIk ; which actually corresponds to the well-known TV minimization of scalar images: Two tensors with very different shapes lead to the same equation, accordingly to the same regularization behavior. ", "publication_ref": ["b50", "b19", "b1", "b1"], "figure_ref": [], "table_ref": []}, {"heading": "Oriented Laplacians", "text": "2D image regularization may be finally seen as the simultaneous juxtaposition of two oriented 1D heat flows, leading to 1D Gaussian smoothing processes along orthonormal directions ?, with different weights c 1 and c 2 [26], [38], [45], [48] (Fig. 2):\n@I @t \u00bc c 1 @ 2 I @ 2 \u00fe c 2 @I @ 2 \u00bc c 1 I \u00fe c 2 I :\u00f03\u00de\nLike divergence expressions, the smoothing weights c 1 ; c 2 and directions ; are directly designed from the spectral elements AE and AE of G, in order to perform edgepreserving smoothing, mainly along the direction \u00c0 orthogonal to the image discontinuities.", "publication_ref": ["b25", "b37", "b44", "b47"], "figure_ref": ["fig_1"], "table_ref": []}, {"heading": "Link between the Three Formulations", "text": "The link between these three formulations is generally not trivial, especially for vector-valued images. Actually, it is well known for the classical case of -functional regularization of scalar images (n \u00bc 1): One can start from a regularizing functional minimization (A) and find the corresponding divergence-based (B) and oriented-laplacians (C) based formulations:\n\u00f0A\u00de min I:!IR Z\u00f0krIk\u00de\nd )\u00f0B\u00de\n@I @t \u00bc div 0 \u00f0krIk\u00de krIk rI )\u00f0C\u00de\n@I @t \u00bc 0 \u00f0krIk\u00de krIk I \u00fe 00 \u00f0krIk\u00de I ;\u00f04\u00de\nwhere \u00bc rI=krIk and ?. Note that this regularization generally leads to anisotropic smoothing (in the sense that it is performed in privileged spatial directions with different weights), despite the isotropic shape of the corresponding divergence-based tensor D \u00bc 0 \u00f0krIk\u00de krIk Id. In this paper, we propose a way to find such links for the more general case of vector-valued regularization based on PDEs. We tackle each of these three interpretation levels (1), (2), and (3) in their more general forms, and derive the corresponding equations. We particularly show that the oriented-Laplacian formalism has an interesting interpretation in terms of local filtering, and represents the right smoothing geometry performed by the PDEs. Thus, it allows us to design a new and efficient vector-valued regularization approach, respecting desired local smoothing properties (Section 4), as well as propose new and adapted numerical schemes (Section 6). Finally, we apply our method to solve a wide range of image processing issues, including color image restoration, inpainting, magnification, and flow visualization (Section 7).", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "FROM VARIATIONAL TO DIVERGENCE FORMS", "text": "We first consider vector-valued image regularization as a variational problem. We want to find the corresponding divergence-based expression, i.e., the link \u00f0A\u00de ) \u00f0B\u00de.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A Generic Functional", "text": "Instead of regularizing a functional such as (1) depending on a predefined variation norm N \u00f0I\u00de, we would rather propose to minimize this more generic -functional:\nmin I:!IR n E\u00f0I\u00de \u00bc Z \u00f0 \u00fe ; \u00c0 \u00de d:\u00f05\u00de\nAs vector-valued images possess two distinct variation estimators \u00fe and \u00c0 (eigenvalues of the structure tensor G \u00bc P n j\u00bc1 rI j rI T j ), it seems natural to minimize a functional defined by a function : IR 2 ! IR of two variables instead of a single one. This is actually a generic extension of the -function formulation for vector-valued images (4).", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Corresponding Euler-Lagrange Equations", "text": "The Euler-Lagrange equations of ( 5) can be derived and reduced to a simple form of divergence-based expression (see Appendix A which can be found on the Computer Society Digital Library at http://computer.org/tkde/archives.htm for details about this Euler-Lagrange derivation):\n@I i @t \u00bc div \u00f0DrI i \u00de \u00f0i \u00bc 1::n\u00de;\u00f06\u00de\nwhere the 2 \u00c2 2 diffusion tensor D is defined as:\nD \u00bc @ @ \u00fe \u00fe T \u00fe \u00fe @ @ \u00c0 \u00c0 T \u00c0 :\nIt results then in a divergence-based equation such as (2), where the diffusion tensor D is simply defined from the partial derivatives of , and the eigenvectors \u00fe ; \u00c0 of G.\nNote that the tensor D has the same orientation as the structure tensor G (same eigenvectors).", "publication_ref": ["b1"], "figure_ref": [], "table_ref": []}, {"heading": "Link with Other Approaches", "text": "The choice of particular cases of -functions leads to previous vector-valued regularization approaches defined as variational methods, such as the whole range of vectorvalued -functionals [33], [42]:\n\u00f0 \u00fe ; \u00c0 \u00de \u00bc \u00f0 ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi \u00fe \u00fe \u00c0 p \u00de\nor the Beltrami flow framework [22]:\n\u00f0 \u00fe ; \u00c0 \u00de \u00bc ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi \u00f01 \u00fe \u00fe \u00de\u00f01 \u00fe \u00c0 \u00de p :\nMore generally, our variational approach (5) shows that the eigenvalues of a divergence tensor D can be seen as the gradient of a potential function , linked to the functional (5). If such a potential exists, it is easy to find the energy (5) corresponding to a given divergence-based expression (6).\nNote that the problem of the local geometric interpretation of ( 6) in terms of smoothing weights and directions also applies here. As illustrated by the scalar-valued -functional case (4), D may not represent the right smoothing geometry of the regularization process.", "publication_ref": ["b32", "b41", "b21", "b5"], "figure_ref": [], "table_ref": []}, {"heading": "FROM DIVERGENCES TO ORIENTED LAPLACIANS", "text": "We rather want to develop divergence forms as (6) into their corresponding oriented Laplacian formulations, i.e., find the link \u00f0B\u00de ) \u00f0C\u00de. Actually, Oriented Laplacians are particularly well designed to geometrically understand the underlying smoothing process performed by the PDE.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Geometric Meaning of Oriented Laplacians", "text": "Let us consider the oriented Laplacian-based equation (3). As ?, this PDE can be equivalently written as:\n@I i @t \u00bc c 1 I i \u00fe c 2 I i \u00bc trace \u00f0TH i \u00de \u00f0 i \u00bc 1::n\u00de;\u00f07\u00de\nwhere H i is the Hessian matrix of the vector component I i and T is the 2 \u00c2 2 tensor defined by:\nT \u00bc c 1 T \u00fe c 2 T\n, characterized by its two eigenvalues c 1 ; c 2 and its two corresponding eigenvectors ; . Let us suppose first that T is a constant tensor over the definition domain .\nThen, the formal solution of the PDE ( 7) is:\nI i \u00f0t\u00de \u00bc I i \u00f0t\u00bc0\u00de \u00c3 G \u00f0T;t\u00de \u00f0i \u00bc 1::n\u00de;\u00f08\u00de\nwhere \u00c3 stands for the convolution operator and G \u00f0T;t\u00de is an oriented Gaussian kernel, defined by:\nG \u00f0T;t\u00de \u00f0x\u00de \u00bc 1 4t exp \u00c0 x T T \u00c01 x 4t with x \u00bc \u00f0x y\u00de T :\u00f09\u00de\nProof. From the expression ( 9), we can compute the temporal and spatial derivatives of G \u00f0T;t\u00de :\n@G \u00f0T;t\u00de @t \u00bc \u00c0 1 4t 2 exp \u00c0 x T T \u00c01 x 4t 1 \u00c0 x T T \u00c01 x 4tand\nrG \u00f0T;t\u00de \u00bc \u00c0 1 8t 2 exp \u00c0 x T T \u00c01 x 4t T \u00c01 x H G \u00f0T;t\u00de \u00bc \u00c0 1 8t 2 exp \u00c0 x T T \u00c01 x 4t T \u00c01 Id \u00c0 xx T T \u00c01 2t ; 8 < :\nwhere rG \u00f0T;t\u00de and H G \u00f0T;t\u00de are, respectively, the gradient and the Hessian of G \u00f0T;t\u00de . It means that\ntrace\u00f0T H G \u00f0T;t\u00de\u00de \u00bc \u00c0 1 8t 2 exp \u00c0 x T T \u00c01 x 4t trace Id \u00c0 xx T T \u00c01 2t \u00bc \u00c0 1 8t 2 exp \u00c0 x T T \u00c01 x 4t 2 \u00c0 x T T \u00c01 x 2t \u00bc @G \u00f0T;t\u00de @t :\nAnd, as the convolution is a linear operation, we have\n@\u00f0I i 0 \u00c3 G \u00f0T;t\u00de \u00de @t \u00bc I i0 \u00c3 @G \u00f0T;t\u00de @t \u00bc I i0 \u00c3 trace\u00f0T H G \u00f0T;t\u00de \u00de \u00bc trace\u00f0T H Ii 0 \u00c3G \u00f0T;t\u00de \u00de\nas well as lim t!0 \u00f0I i \u00f0t\u00de \u00c3 G \u00f0T;t\u00de \u00de \u00bc I i 0 which tells us that the initial condition at t \u00bc 0 is coherent both for the PDE and the convolution process, since the Gaussian function G \u00f0T;t\u00de is normalized.", "publication_ref": ["b2"], "figure_ref": [], "table_ref": []}, {"heading": "t u", "text": "It is a generalization of the Koenderink's idea [23], who proved this property in the field of computer vision for the isotropic diffusion tensor T \u00bc Id, resulting in the well-known heat flow equation: @Ii @t \u00bc \u00c1I i . Fig. 3 illustrates two Gaussian kernels G \u00f0T;t\u00de \u00f0x; y\u00de, respectively, obtained with isotropic and anisotropic tensors T (up) and the corresponding evolutions of the diffusion PDE ( 7) on a color image (down). It is worth to notice that the Gaussian kernels G \u00f0T;t\u00de give the classical representations of the tensors T with ellipsoids. Conversely, it is clear that the tensors T represent the exact geometry of the smoothing performed by the PDE (7).\nWhen T is not constant (which is generally the case), i.e., represents a field ! P\u00f02\u00de of variable diffusion tensors, the PDE (7) becomes nonlinear and can be viewed as the application of temporally and spatially varying local masks G \u00f0T;t\u00de \u00f0x\u00de over the image I. Fig. 4 illustrates two examples of spatially varying tensor fields T, represented with fields of ellipsoids (up), and the corresponding evolutions of (7) on a color image (down). As before, the shape of each tensor T gives the exact geometry of the local smoothing process performed by the trace-based PDE (7) point by point.\nNote that this local filtering concept makes the link between a generic form of vector-valued diffusion PDEs expressed through a trace operator (7) and the Bilateral filtering techniques, as described in [5], [43]. Another similar approach based on non-Gaussian convolution kernels has been also proposed for the specific case of Beltrami Flow in [40].\nWith the PDE (7), we are naturally disassembling the regularization itself and its underlying smoothing geometry, which is given by the spectral elements of a trace-tensor T. Conversely to divergence equations, the choice of the tensor is unique here: The shape of the trace tensor T is really giving the correct smoothing geometry performed by the PDE (7).", "publication_ref": ["b22", "b6", "b4", "b42", "b39"], "figure_ref": ["fig_2"], "table_ref": []}, {"heading": "Trace-Based and Divergence-Based Tensors", "text": "Differences between divergence tensors D in (2) and trace tensors T in (7) can be understood as follows: We can develop the divergence equation (2) as:\ndiv \u00f0DrI i \u00de \u00bc trace \u00f0DH i \u00de \u00fe rI T i div ! \u00f0D\u00de;\nwhere div ! \u00f0\u00de is defined as a divergence operator acting on matrices and returning vectors:\nif D \u00bc \u00f0d ij \u00de; div ! \u00f0D\u00de \u00bc div\u00f0d 11 d 12 \u00de T div\u00f0d 21 d 22 \u00de T :\nThen, an additional term rI T i div ! \u00f0D\u00de appears, connected to the spatial variation of the tensor field D. It may perturb the smoothing behavior given by the first part trace \u00f0DH i \u00de, which actually corresponds to a local smoothing directed by the spectral elements of D. As a result, the divergencebased equation ( 2) may smooth the image I with weights and directions that are different than the spectral elements of D. This is actually the case for the scalar -function formulation (4), where the smoothing process does not behave finally and, fortunately, as an isotropic one, despite the isotropic form of the divergence tensor D \u00bc 0 \u00f0krIk\u00de krIk Id.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Developing the Divergence Form", "text": "Actually, if we consider that the divergence tensor D only depends on the spectral elements of the structure tensor G:\nD \u00bc f 1 \u00f0 \u00fe ; \u00c0 \u00de \u00fe T \u00fe \u00fe f 2 \u00f0 \u00fe ; \u00c0 \u00de \u00c0 T \u00c0\u00f010\u00de\nwith f 1 ; f 2 : IR 2 ! IR, (which is the case for most of the proposed equations in the literature), then we can develop the corresponding divergence equation div \u00f0DrI i \u00de into oriented Laplacians, i.e., this trace-based PDE (full demonstration can be found in Appendix B which can be found on the Computer Society Digital Library at http://computer. org/tkde/archives.htm):\ndiv \u00f0DrI i \u00de \u00bc X n j\u00bc1 trace \u00f0 ij D \u00fe Q ij \u00deH j \u00c0 \u00c1 ;\u00f011\u00de\nwhere the Q ij designates a family of n 2 matrices (i; j \u00bc 1::n), defined as the symmetric parts of the following matrices P ij (then, Q ij \u00bc \u00f0P ij \u00fe P ij T \u00de=2): with\nP ij \u00bc rI T i rI j Id \u00fe 2 @ @ \u00fe \u00fe T \u00fe \u00fe @ @ \u00c0 \u00c0 T \u00c0 rI j rI T i G \u00fe 2 \u00fe @ @ \u00fe \u00fe T \u00fe \u00fe \u00fe @ @ \u00c0 \u00c0 T \u00c0 rI j rI T i TSCHUMPERL E E\n\u00bc f 1 \u00f0 \u00fe ; \u00c0 \u00de \u00c0 f 2 \u00f0 \u00fe ; \u00c0 \u00de \u00fe \u00c0 \u00c0 and \u00bc \u00fe f 2 \u00f0 \u00fe ; \u00c0 \u00de \u00c0 \u00c0 f 1 \u00f0 \u00fe ; \u00c0 \u00de \u00fe \u00c0 \u00c0 :\nThis development ( 11) expresses a whole range of previously proposed vector-valued regularization algorithms (variational and divergence based PDEs) into an extended trace-based equation, composed of several channeldiffusion contributions that have direct geometric interpretations in terms of local filtering. The interesting point is that additional diffusion tensors Q ij are appearing and contribute to modify the smoothing behavior which is finally not given by the initial divergence tensor D.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A UNIFIED EXPRESSION", "text": "From these previous developments, we can now define a generic vector-valued regularization PDE:\n@I i @t \u00bc X n j\u00bc1 trace \u00f0A ij Hi\u00de \u00f0i \u00bc 1::n\u00de;\u00f012\u00de\nwhere the A ij forms a family of 2 \u00c2 2 symmetric matrices, and the H i designate the Hessian matrices of I i . Actually, this expression can be equivalently written with a slight abuse of notations, in a super-matrix form:\n@I @t \u00bc trace ! \u00f0AH\u00de;\u00f013\u00de\nwhere A is the matrix of diffusion tensors A ij (and is itself symmetric), and H is the vector of Hessian matrices H j . The matrix product AH in ( 13) is then seen submatrix by submatrix, and the operator trace ! \u00f0\u00de returns the vector in IR n , corresponding to the trace of each submatrix in the resulting vector of matrices.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Link with Previous Expressions", "text": "The PDE ( 12) is a unifying equation that can be used to describe a wide range of vector-valued regularization:\n. First, it develops both variational and divergencebased approaches (that can be written as\n@I i @t \u00bc div \u00f0DrI i \u00de;\nas developed in Section 2) into a very local formulation. This particularly includes the works done in [10], [20], [22], [33], [37], [39], [42], [48], [51] among others. As described above, the 2 \u00c2 2 tensors A ij are then defined to be\nA ij \u00bc ij D \u00fe Q ij .\nNote that the Q ij (i 6 \u00bc j) corresponds here to diffusion contributions of other channels I j in the current one I i . This kind of diffusion energy transfer can be considered as a particular coupling of the corresponding vector-valued diffusion PDE. . Second, the PDE (12) also gathers the oriented-Laplacian formulations @I i @t \u00bc trace \u00f0TH i \u00de, by choos- ing A ij \u00bc ij T. In this case, the supermatrix A is diagonal and no diffusion energy transfer occurs between image channels I i . The vector coupling is only done through the use of the structure tensor G for the computation of the local smoothing geometry. This unifies the formulations proposed in [26], [38], [45], [48].", "publication_ref": ["b9", "b19", "b21", "b32", "b36", "b38", "b41", "b47", "b50", "b25", "b37", "b44", "b47"], "figure_ref": [], "table_ref": []}, {"heading": "A NEW REGULARIZATION PDE", "text": "We propose now to design a new vector-valued regularization PDE that follows desired local geometric properties (particularly for image denoising). These constraints will naturally define a specific form of regularization PDE, from the very generic form (12):\n. We do not want to mix diffusion contributions between image channels. The desired coupling between vector components I i should only appear in the diffusion PDE through the computation of the structure tensor G, in order to control the local smoothing behavior of the regularization process. This means we have to define only one diffusion tensor A, then choose A ij \u00bc ij A. Undesired coupling terms are then avoided. . On homogeneous regions (corresponding to low vector variations), we want to perform an isotropic smoothing, i.e., a 2D heat flow that smoothes the noise efficiently with no-preferred directions:\n@I i @t ' \u00c1I i \u00bc trace\u00f0H i \u00de.\nThe tensor A must then be isotropic in these regions:\nlim \u00f0\u00fe\u00fe\u00c0\u00de!0 A \u00bc Id:\n. On vector edges (corresponding to high vector variations), we want to perform an anisotropic smoothing along the vector edges \u00c0 , in order to preserve them while removing the noise:\n@I i @t \u00bc trace \u00f0 \u00c0 \u00c0 T H i \u00de,\nwhere is a function decreasing anyway for very high variations, avoiding the oversmoothing of sharp corners. The tensor A must be anisotropic in these regions:\nlim \u00f0\u00fe\u00fe\u00c0\u00de!1 A \u00bc \u00c0 T \u00c0 :\nThe following multivalued regularization PDE respects all these local geometric properties:\n@I i @t \u00bc trace \u00f0TH i \u00de \u00f0i \u00bc 1::n\u00de;\u00f014\u00de\nwhere T is the tensor field defined pointwise as:\nT \u00bc f \u00c0 ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi \u00c3 \u00fe \u00fe \u00c3 \u00c0 p \u00c3 \u00c0 \u00c3 \u00c0 T \u00fe f \u00fe ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi \u00c3 \u00fe \u00fe \u00c3 \u00c0 p \u00c3 \u00fe \u00c3 \u00fe T :\n\u00c3 AE and \u00c3 AE are defined to be the spectral elements of G \u00bc G \u00c3 G , a Gaussian smoothed version of the structure tensor G, allowing us to retrieve a more coherent vectorgeometry and giving a better approximation of the vector discontinuities directions (see also [51]). For our experiments in Section 7, we chose\nf \u00fe \u00f0s\u00de \u00bc 1 1 \u00fe s 2 and f \u00c0 \u00f0s\u00de \u00bc 1 ffiffiffiffiffiffiffiffiffiffiffiffi ffi 1 \u00fe s 2 p :\nThis is, of course, one possible \"empiric\" choice (inspired from the hypersurface formulation of the scalar case [4]) that verifies the above geometric properties, relying on practical experience.\nThe point is that we can easily adapt the weighting functions f \u00fe and f \u00c0 to obtain regularization behaviors for specific problems, since we are sure of the local smoothing  process performed by (14). This vector-valued regularization equation smoothes the image in coherent spatial directions and preserves then well the edges, by allowing only the necessary geometric coupling between vector channels I i . Its form has steadily followed the local analysis of classical multivalued regularization algorithms. The numerical implementation of the PDE ( 14) can be done with classical numerical schemes, based on spatial discretizations with centered finite differences of the gradients and the Hessians [28]. Here, we propose an alternative approach based on the local filtering interpretation of tracebased equations ( 7), proposed in Section 3. The idea is as follows: The smoothing can be locally performed by applying a spatially varying mask over the image. For each point \u00f0x; y\u00de of the image I, we compute the oriented Gaussian kernel G \u00f0T;t\u00de corresponding to the tensor T, defined by (14). Then, we apply it on each local neighborhood I i \u00f0x; y\u00de, as shown in Fig. 5.\nThe main advantages of this numerical scheme are:\n1. It numerically preserves the maximum principle since the local filtering is done only with normalized kernels. 2. It is more precise, since the computed local kernel corresponds exactly to the smoothing to perform. No (imprecise) second derivatives have to be computed (Fig. 6), and local filtering kernel is better oriented.\nAs for the shortcomings of this scheme, we have to mention that it is more time-consuming, since we have to compute a different Gaussian kernel (i.e., exponential functions) at each image point and for each iteration. For our experiments, we chose 5 \u00c2 5 convolution kernels (Fig. 6). Note how edge details are better preserved in Fig. 6c (look at the glint inside the eye).", "publication_ref": ["b50", "b3", "b13", "b27", "b13"], "figure_ref": [], "table_ref": []}, {"heading": "APPLICATIONS", "text": "We illustrate here the wide range of image processing applications that we can handle with our presented approach, through our vector-valued regularization PDE (14).", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Color Image Restoration", "text": "Despite the emergence of digital cameras, color image restoration may be still needed. Fig. 8 represents a digital photograph with real noise, due to the bad lighting conditions during the snapshot. Our vector-valued regularization PDE can successfully remove the noise, while preserving the global features of the image (see also Fig. 7).", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Improvement of Lossy Compressed Images", "text": "Digital images, due to their big memory size, are often stored in a more compact form obtained with lossy compression algorithms (JPEG being the most popular). It often introduces visible image artefacts: For instance, bloc effects are classical JPEG drawbacks. Using our flow (14) significantly improves the quality of such degraded images (Fig. 9). In this case, we chose a high parameter (variance of the structure tensor presmoothing), since a lot of structures in this image are quite linear. It helps then to retrieve linear structure, such as the gnome's hair.", "publication_ref": ["b13"], "figure_ref": ["fig_6"], "table_ref": []}, {"heading": "Color Image Inpainting", "text": "Recently, an interesting application of diffusion PDEs named image inpainting, has been proposed in [8], [12], [13], [14]. It consists of filling undesired holes (defined by the user) in an image by interpolating the data located at the neighborhood of the holes. It is possible to do that by applying our PDE (14) only in the holes to fill: boundaries pixels will be diffused until they completely fill the missing regions, in a structure-preserving way. Important issues may be solved with this kind of algorithms as, for instance: removing text on images (Fig. 10), removing real objects in photographs (Fig. 10) or reconstruct partially coded images for image compression purposes (Fig. 11).", "publication_ref": ["b7", "b11", "b12", "b13", "b13"], "figure_ref": ["fig_0", "fig_0", "fig_0"], "table_ref": []}, {"heading": "Color Image Magnification", "text": "With the same techniques, one can easily perform image magnification. Starting from a linear interpolation of a small image, and applying our PDE (14) on the image (excepted on the original known pixels), we can retrieve nonlinear magnified images without jagging or bloc effects, inherent to classical linear interpolation techniques (Fig. 12).", "publication_ref": [], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "Flow Visualization", "text": "Considering a 2D vector field F : ! IR 2 , we have several ways to visualize it. We can first use vectorial graphics (Fig. 13a), but we have to subsample the field since this kind of representation is not adapted to represent big flows. A better solution is as follows: We smooth a completely noisy (color) image I, with a regularizing flow equivalent to ( 14) but where T is directed by the directions of F , instead of the local geometry of I:\n@I i @t \u00bc trace 1 kF k F F T ! H i \u00f0i \u00bc 1::n\u00de:\u00f015\u00de\nWhereas the PDE evolution time t goes by, more global structures of the flow F appear, i.e., a visualization scalespace of F is constructed (Fig. 14). Here, our used regularization equation (15) ensures that the smoothing of the pixels is done exactly in the direction of the flow F . This is not the case in [6], [11], [17], where the authors based their equations on a divergence expression. Using similar divergence-based techniques would raise a risk of smoothing the image in false directions, as this has been pointed out in Section 3.", "publication_ref": ["b14", "b5", "b10", "b16"], "figure_ref": ["fig_0", "fig_0"], "table_ref": []}, {"heading": "CONCLUSION and PERSPECTIVES", "text": "In this paper, we proposed a new formalism allowing to express a large set of previous vector-valued regularization approaches within a common local expression. This formulation is particularly adapted to understand the local smoothing behavior of diffusion PDEs. Indeed, it explains the link between the diffusion tensor shapes in divergence or trace-based equations, and the actual smoothing performed by these processes, in term of local filtering. From this general study, we defined a new and particular regularization equation, based on the respect of a coherent anisotropic smoothing preserving the global features of vector images. We proposed as well specific numerical schemes adapted for accurate implementations. The application to several problems related to color images and flow visualization illustrated the efficiency of our method to deal with concrete cases based on the use of vector-valued regularization processes.\nNote 1: Other applications results and color demos can be found at the following URL: http://www-sop.inria.fr/ odyssee/research/tschumperle-deriche:02d/appliu/in dex.html. His research interests are in image processing, computer and biological vision and include, in particular, the area related to variational methods and partial differential equations for vision. More generally, he is very interested in the applications of mathematics to computer vision and image processing. He has authored and coauthored more than 100 scientific papers. To find out more about his research and some selected publications, go to: http://www-sop.inria.fr/odyssee/ team/Rachid.Deriche/.\n. For more information on this or any other computing topic, please visit our Digital Library at www.computer.org/publications/dlib.", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Non Linear Restoration of Noisy Images", "journal": "IEEE Trans. Patern Analysis and Machine Intelligence", "year": "1982", "authors": "J F Abramatic; L M Silverman"}, {"ref_id": "b1", "title": "Axioms and Fundamental Equations of Image Processing", "journal": "", "year": "1993", "authors": "L Alvarez; F Guichard; P L Lions; J M Morel"}, {"ref_id": "b2", "title": "", "journal": "Digital Image Restoration. Signal Processing", "year": "1977", "authors": "H C Andrews; B R Hunt"}, {"ref_id": "b3", "title": "Mathematical Problems in Image Processing: Partial Differential Equations and the Calculus of Variations", "journal": "Applied Math. Sciences", "year": "2002-01", "authors": "G Aubert; P Kornprobst"}, {"ref_id": "b4", "title": "Bilateral Filtering and Anisotropic Diffusion: Towards a Unified Viewpoint", "journal": "", "year": "2000", "authors": "D Barash"}, {"ref_id": "b5", "title": "Pde Methods in Flow Simulation Post Processing", "journal": "", "year": "2000", "authors": "J Becker; T Preusser; M Rumpf"}, {"ref_id": "b6", "title": "Variational Problems and Partial Differential Equations on Implicit Surfaces: The Framework and Examples in Image Processing and Pattern Formation", "journal": "", "year": "2000-06", "authors": "M Bertalmio; L T Cheng; S Osher; G Sapiro"}, {"ref_id": "b7", "title": "Image Inpainting", "journal": "", "year": "2000", "authors": "M Bertalmio; G Sapiro; V Caselles; C Ballester"}, {"ref_id": "b8", "title": "Total Variation Methods for Restoration of Vector Valued Images", "journal": "", "year": "1998-06", "authors": "P Blomgren"}, {"ref_id": "b9", "title": "special issue on partial differential equations and geometry-driven diffusion in image processing and analysis", "journal": "IEEE Trans. Image Processing", "year": "1998", "authors": "P Blomgren; T F Chan"}, {"ref_id": "b10", "title": "Transport and Diffusion in Timedependent Flow Visualization", "journal": "", "year": "2001", "authors": "D Buerkle; T Preusser; M Rumpf"}, {"ref_id": "b11", "title": "Euler's Elastica and Curvature Based Inpainting", "journal": "SIAM J. Applied Math", "year": "2002", "authors": "T Chan; S H Kang; J Shen"}, {"ref_id": "b12", "title": "Mathematical Models for Local Deterministic Inpaintings", "journal": "Dept. Math", "year": "2000-03", "authors": "T Chan; J Shen"}, {"ref_id": "b13", "title": "Non-Texture Inpainting by Curvature-Driven Diffusions (CDD)", "journal": "J. Visual Comm. and Image Representation", "year": "2001", "authors": "T F Chan; J Shen"}, {"ref_id": "b14", "title": "Deterministic Edge-Preserving Regularization in Computed Imaging", "journal": "IEEE Trans. Image Processing", "year": "1997", "authors": "P Charbonnier; L Blanc-F\u00e9raud; G Aubert; M Barlaud"}, {"ref_id": "b15", "title": "Les EDP en Traitement des Images et Vision par Ordinateur", "journal": "technical report", "year": "1995-11", "authors": "R Deriche; O Faugeras"}, {"ref_id": "b16", "title": "Anisotropic Diffusion in Vector Field Visualization on Euclidian Domains and Surfaces", "journal": "IEEE Trans. Visualization and Computer Graphics", "year": "2000-04", "authors": "U Diewald; T Preusser; M Rumpf"}, {"ref_id": "b17", "title": "Restoring with Maximum Likelihood and Maximum Entropy", "journal": "J. Optical Soc. Am", "year": "1972", "authors": "B R Frieden"}, {"ref_id": "b18", "title": "Stochastic Relaxation, Gibbs Distributions, and the Bayesian Restoration of Images", "journal": "IEEE Trans. Pattern Analysis and Machine Intelligence", "year": "1984", "authors": "S Geman; D Geman"}, {"ref_id": "b19", "title": "Nonlinear Anisotropic Filtering of MRI Data", "journal": "IEEE Trans. Medical Imaging", "year": "1992", "authors": "G Gerig; O Kubler; R Kikinis; F Jolesz"}, {"ref_id": "b20", "title": "The Application of Constrained Least Squares Estimation to Image Restoration by Digital Computer", "journal": "IEEE Trans. Computers", "year": "1973", "authors": "B R Hunt"}, {"ref_id": "b21", "title": "Images as Embedded Maps and Minimal Surfaces: Movies, Color, Texture, and Volumetric Medical Images", "journal": "Int'l J. Computer Vision", "year": "2000-09", "authors": "R Kimmel; R Malladi; N Sochen"}, {"ref_id": "b22", "title": "The Structure of Images", "journal": "Biological Cybernetics", "year": "1984", "authors": "J J Koenderink"}, {"ref_id": "b23", "title": "Contributions \u00e0 la Restauration d'Images et \u00e0 l'Analyse de S\u00e9quences: Approches Variationnelles et Solutions de Viscosit\u00e9", "journal": "", "year": "1998", "authors": "P Kornprobst"}, {"ref_id": "b24", "title": "Image Restoration via PDE's", "journal": "", "year": "1996-11", "authors": "P Kornprobst; R Deriche; G Aubert"}, {"ref_id": "b25", "title": "Nonlinear Operators in Image Restoration", "journal": "", "year": "1997", "authors": "P Kornprobst; R Deriche; G Aubert"}, {"ref_id": "b26", "title": "Scale-Space Theory in Computer Vision", "journal": "Kluwer Academic Publishers", "year": "1994", "authors": "T Lindeberg"}, {"ref_id": "b27", "title": "Sur Quelques Sch\u00e9mas Num\u00e9riques de R\u00e9solution d' E Equations aux d E Eriv\u00e9es Partielles pour le Traitement d'Images", "journal": "", "year": "1997-06", "authors": "L Lucido; R Deriche; L Alvarez; V Rigaud"}, {"ref_id": "b28", "title": "Oscillatory Patterns in Image Processing and Nonlinear Evolution Equations", "journal": "Univ. Lecture Series", "year": "2001", "authors": "Y Meyer"}, {"ref_id": "b29", "title": "Regularization, Scale-Space and Edge Detection Filters", "journal": "J. Math. Imaging and Vision", "year": "1997", "authors": "M Nielsen; L Florack; R Deriche"}, {"ref_id": "b30", "title": "Image Restoration by Minimizing Objective Functions with Nonsmooth Data-Fidelity Terms", "journal": "", "year": "2001", "authors": "M Nikolova"}, {"ref_id": "b31", "title": "Estimating the Jacobian of the Singular Value Decomposition: Theory and Applications", "journal": "Research Report", "year": "2000-06", "authors": "T Papadopoulo; M I A Lourakis"}, {"ref_id": "b32", "title": "Vector Probability Diffusion", "journal": "", "year": "2000", "authors": "A Pardo; G Sapiro"}, {"ref_id": "b33", "title": "Scale-Space and Edge Detection Using Anisotropic Diffusion", "journal": "IEEE Trans. Pattern Analysis and Machine Intelligence", "year": "1990-07", "authors": "P Perona; J Malik"}, {"ref_id": "b34", "title": "Vector-Valued Active Contours", "journal": "", "year": "1996", "authors": "G Sapiro"}, {"ref_id": "b35", "title": "Computer Vision and Image Understanding", "journal": "", "year": "1997", "authors": "G Sapiro"}, {"ref_id": "b36", "title": "Geometric Partial Differential Equations and Image Analysis", "journal": "Cambridge Univ. Press", "year": "2001", "authors": "G Sapiro"}, {"ref_id": "b37", "title": "Anisotropic Diffusion of Multivalued Images with Applications to Color Filtering", "journal": "IEEE Trans. Image Processing", "year": "1996", "authors": "G Sapiro; D L Ringach"}, {"ref_id": "b38", "title": "Curve Evolution and Segmentation Functionals: Applications to Color Images", "journal": "", "year": "1996", "authors": "J Shah"}, {"ref_id": "b39", "title": "Diffusions and Confusions in Signal and Image Processing", "journal": "J. Math. Imaging and Vision", "year": "2001", "authors": "N Sochen; R Kimmel; A M Bruckstein"}, {"ref_id": "b40", "title": "Direction Diffusion", "journal": "", "year": "1998", "authors": "B Tang; G Sapiro; V Caselles"}, {"ref_id": "b41", "title": "Diffusion of General Data on Non-Flat Manifolds via Harmonic Maps Theory: The Direction Diffusion Case", "journal": "The Int'l J. Computer Vision", "year": "2000-02", "authors": "B Tang; G Sapiro; V Caselles"}, {"ref_id": "b42", "title": "Bilateral Filtering for Gray and Color Images", "journal": "", "year": "1998-01", "authors": "C Tomasi; R Manduchi"}, {"ref_id": "b43", "title": "PDE's Based Regularization of Multivalued Images and Applications", "journal": "", "year": "2002-12", "authors": "D Tschumperl\u00e9"}, {"ref_id": "b44", "title": "Constrained and Unconstrained PDE's for Vector Image Restoration", "journal": "", "year": "2001", "authors": "D Tschumperl\u00e9; R Deriche"}, {"ref_id": "b45", "title": "Diffusion Tensor Regularization with Constraints Preservation", "journal": "", "year": "2001", "authors": "D Tschumperl\u00e9; R Deriche"}, {"ref_id": "b46", "title": "Regularization of Orthonormal Vector Sets Using Coupled PDE's", "journal": "", "year": "2001", "authors": "D Tschumperl\u00e9; R Deriche"}, {"ref_id": "b47", "title": "Diffusion PDE's on Vector-Valued Images", "journal": "IEEE Signal Processing Magazine", "year": "2002", "authors": "D Tschumperl\u00e9; R Deriche"}, {"ref_id": "b48", "title": "Fiber Tract Mapping from Diffusion Tensor MRI", "journal": "", "year": "2001", "authors": "B Vemuri; Y Chen; M Rao; T Mcgraw; T Mareci; Z Wang"}, {"ref_id": "b49", "title": "Anisotropic Diffusion in Image Processing", "journal": "", "year": "1996-01", "authors": "J Weickert"}, {"ref_id": "b50", "title": "Anisotropic Diffusion in Image Processing", "journal": "Teubner-Verlag", "year": "1998", "authors": "J Weickert"}, {"ref_id": "b51", "title": "Principles of Computational Fluid Dynamics", "journal": "Springer-Verlag", "year": "2000", "authors": "P Wesseling"}, {"ref_id": "b52", "title": "Scale-Space Filtering", "journal": "", "year": "1983", "authors": "A P Witkin"}, {"ref_id": "b53", "title": "Modified Curvature Motion for Image Smoothing and Enhancement", "journal": "IEEE Trans. Image Processing", "year": "1998-03", "authors": "A Yezzi"}, {"ref_id": "b54", "title": "A Note on the Gradient of a Multi-Image", "journal": "", "year": "1986", "authors": "S ; Di Zenzo"}], "figures": [{"figure_label": "1", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Fig. 1 .1Fig. 1. Example of image restoration with surface area (functional) minimization. (a) Noisy image. (b) Corresponding surface. (c) Restored image. (d) Corresponding surface.", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Fig. 2 .2Fig. 2. Principle of regularization techniques based on oriented Laplacians: Two 1D smoothing are done along orthogonal axes and that are different for each image points.", "figure_data": ""}, {"figure_label": "3", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "Fig. 3 .3Fig. 3. Trace-based PDEs (7) viewed as convolutions by oriented 2D Gaussians.", "figure_data": ""}, {"figure_label": "54", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "5 Fig. 4 .54Fig. 4. Trace-based PDEs (7) with nonconstant diffusion tensor fields T. Interpretation in terms of nonlocal filtering.", "figure_data": ""}, {"figure_label": "567", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "Fig. 5 .Fig. 6 .Fig. 7 .567Fig. 5. Numerical schemes.", "figure_data": ""}, {"figure_label": "78", "figure_type": "figure", "figure_id": "fig_5", "figure_caption": "7 Fig. 8 .78Fig. 8. Using our vector-valued regularization PDE (14), for color image restoration. (a) Noisy color image and (b) restored color image.", "figure_data": ""}, {"figure_label": "9", "figure_type": "figure", "figure_id": "fig_6", "figure_caption": "Fig. 9 .9Fig. 9. Using our vector-valued regularization PDE (14), for improvement of lossy compressed images. (a) Lossy compressed JPEG image and (b) Improved color image.", "figure_data": ""}, {"figure_label": "10", "figure_type": "figure", "figure_id": "fig_7", "figure_caption": "Fig. 10 .10Fig. 10. Using vector-valued regularization PDE's for color image inpainting (2). (a) Image with undesired text. (b) Inpainted color image. (c) Zoom of (a). (d) Zoom of (b). (e) Original color image. (f) Image + Inpainting mask. (g) Inpainted image.", "figure_data": ""}, {"figure_label": "1112", "figure_type": "figure", "figure_id": "fig_8", "figure_caption": "Fig. 11 .Fig. 12 .1112Fig. 11. Using vector-valued regularization PDEs for image reconstruction. (a) Color image, (b) removing 50 percent of the pixels, and (c) reconstructured image.", "figure_data": ""}, {"figure_label": "1314", "figure_type": "figure", "figure_id": "fig_9", "figure_caption": "Fig. 13 .Fig. 14 .1314Fig. 13. Using our vector-valued regularization PDE (15), for flow visualization (1). (a) Flow visualization with arrows. (b) Flow visualization with diffusion PDEs (5 iter.). (c) Flow visualization with diffusion PDEs (15 iter.).", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "G \u00bc X n j\u00bc1", "formula_coordinates": [3.0, 115.99, 399.78, 34.58, 27.83]}, {"formula_id": "formula_1", "formula_text": "min I:!IR n E\u00f0I\u00de \u00bc Z \u00f0N \u00f0I\u00de\u00de d;\u00f01\u00de", "formula_coordinates": [3.0, 90.14, 664.76, 187.1, 29.66]}, {"formula_id": "formula_2", "formula_text": "N \u00f0I\u00de \u00bc ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi \u00fe \u00fe \u00c0 p", "formula_coordinates": [3.0, 26.19, 718.33, 74.48, 17.4]}, {"formula_id": "formula_3", "formula_text": "@I i @t \u00bc div \u00f0DrI i \u00de \u00f0i \u00bc 1::n\u00de:\u00f02\u00de", "formula_coordinates": [3.0, 350.25, 428.33, 190.05, 21.29]}, {"formula_id": "formula_4", "formula_text": "D 1 \u00bc Id krIk and D 2 \u00bc 1 krIk 3 \u00f0rIrI T \u00de: D 1 is isotropic (since it", "formula_coordinates": [3.0, 289.25, 601.65, 213.96, 41.22]}, {"formula_id": "formula_5", "formula_text": "@I @t \u00bc c 1 @ 2 I @ 2 \u00fe c 2 @I @ 2 \u00bc c 1 I \u00fe c 2 I :\u00f03\u00de", "formula_coordinates": [4.0, 75.34, 310.81, 201.9, 22.76]}, {"formula_id": "formula_6", "formula_text": "\u00f0A\u00de min I:!IR Z\u00f0krIk\u00de", "formula_coordinates": [4.0, 81.86, 496.27, 89.73, 29.48]}, {"formula_id": "formula_7", "formula_text": "d )\u00f0B\u00de", "formula_coordinates": [4.0, 65.54, 509.97, 120.29, 35.31]}, {"formula_id": "formula_8", "formula_text": "@I @t \u00bc div 0 \u00f0krIk\u00de krIk rI )\u00f0C\u00de", "formula_coordinates": [4.0, 65.54, 528.31, 131.52, 43.16]}, {"formula_id": "formula_9", "formula_text": "@I @t \u00bc 0 \u00f0krIk\u00de krIk I \u00fe 00 \u00f0krIk\u00de I ;\u00f04\u00de", "formula_coordinates": [4.0, 98.93, 536.3, 178.32, 41.68]}, {"formula_id": "formula_10", "formula_text": "min I:!IR n E\u00f0I\u00de \u00bc Z \u00f0 \u00fe ; \u00c0 \u00de d:\u00f05\u00de", "formula_coordinates": [4.0, 350.87, 247.78, 189.43, 29.72]}, {"formula_id": "formula_11", "formula_text": "@I i @t \u00bc div \u00f0DrI i \u00de \u00f0i \u00bc 1::n\u00de;\u00f06\u00de", "formula_coordinates": [4.0, 349.51, 442.28, 190.79, 21.29]}, {"formula_id": "formula_12", "formula_text": "D \u00bc @ @ \u00fe \u00fe T \u00fe \u00fe @ @ \u00c0 \u00c0 T \u00c0 :", "formula_coordinates": [4.0, 356.6, 489.5, 116.28, 22.41]}, {"formula_id": "formula_13", "formula_text": "\u00f0 \u00fe ; \u00c0 \u00de \u00bc \u00f0 ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi \u00fe \u00fe \u00c0 p \u00de", "formula_coordinates": [4.0, 366.86, 647.13, 101.89, 18.82]}, {"formula_id": "formula_14", "formula_text": "\u00f0 \u00fe ; \u00c0 \u00de \u00bc ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi \u00f01 \u00fe \u00fe \u00de\u00f01 \u00fe \u00c0 \u00de p :", "formula_coordinates": [4.0, 354.22, 686.25, 127.17, 18.88]}, {"formula_id": "formula_15", "formula_text": "@I i @t \u00bc c 1 I i \u00fe c 2 I i \u00bc trace \u00f0TH i \u00de \u00f0 i \u00bc 1::n\u00de;\u00f07\u00de", "formula_coordinates": [5.0, 37.98, 507.82, 239.26, 21.29]}, {"formula_id": "formula_16", "formula_text": "T \u00bc c 1 T \u00fe c 2 T", "formula_coordinates": [5.0, 199.22, 548.35, 74.39, 10.67]}, {"formula_id": "formula_17", "formula_text": "I i \u00f0t\u00de \u00bc I i \u00f0t\u00bc0\u00de \u00c3 G \u00f0T;t\u00de \u00f0i \u00bc 1::n\u00de;\u00f08\u00de", "formula_coordinates": [5.0, 71.15, 620.26, 206.1, 12.51]}, {"formula_id": "formula_18", "formula_text": "G \u00f0T;t\u00de \u00f0x\u00de \u00bc 1 4t exp \u00c0 x T T \u00c01 x 4t with x \u00bc \u00f0x y\u00de T :\u00f09\u00de", "formula_coordinates": [5.0, 30.39, 673.27, 246.86, 38.0]}, {"formula_id": "formula_19", "formula_text": "@G \u00f0T;t\u00de @t \u00bc \u00c0 1 4t 2 exp \u00c0 x T T \u00c01 x 4t 1 \u00c0 x T T \u00c01 x 4tand", "formula_coordinates": [5.0, 301.15, 261.0, 209.3, 41.94]}, {"formula_id": "formula_20", "formula_text": "rG \u00f0T;t\u00de \u00bc \u00c0 1 8t 2 exp \u00c0 x T T \u00c01 x 4t T \u00c01 x H G \u00f0T;t\u00de \u00bc \u00c0 1 8t 2 exp \u00c0 x T T \u00c01 x 4t T \u00c01 Id \u00c0 xx T T \u00c01 2t ; 8 < :", "formula_coordinates": [5.0, 305.63, 305.27, 216.63, 40.14]}, {"formula_id": "formula_21", "formula_text": "trace\u00f0T H G \u00f0T;t\u00de\u00de \u00bc \u00c0 1 8t 2 exp \u00c0 x T T \u00c01 x 4t trace Id \u00c0 xx T T \u00c01 2t \u00bc \u00c0 1 8t 2 exp \u00c0 x T T \u00c01 x 4t 2 \u00c0 x T T \u00c01 x 2t \u00bc @G \u00f0T;t\u00de @t :", "formula_coordinates": [5.0, 290.78, 397.0, 246.24, 78.19]}, {"formula_id": "formula_22", "formula_text": "@\u00f0I i 0 \u00c3 G \u00f0T;t\u00de \u00de @t \u00bc I i0 \u00c3 @G \u00f0T;t\u00de @t \u00bc I i0 \u00c3 trace\u00f0T H G \u00f0T;t\u00de \u00de \u00bc trace\u00f0T H Ii 0 \u00c3G \u00f0T;t\u00de \u00de", "formula_coordinates": [5.0, 340.89, 501.04, 147.76, 53.01]}, {"formula_id": "formula_23", "formula_text": "div \u00f0DrI i \u00de \u00bc trace \u00f0DH i \u00de \u00fe rI T i div ! \u00f0D\u00de;", "formula_coordinates": [6.0, 63.38, 661.48, 175.13, 17.11]}, {"formula_id": "formula_24", "formula_text": "if D \u00bc \u00f0d ij \u00de; div ! \u00f0D\u00de \u00bc div\u00f0d 11 d 12 \u00de T div\u00f0d 21 d 22 \u00de T :", "formula_coordinates": [6.0, 64.4, 716.5, 174.68, 24.11]}, {"formula_id": "formula_25", "formula_text": "D \u00bc f 1 \u00f0 \u00fe ; \u00c0 \u00de \u00fe T \u00fe \u00fe f 2 \u00f0 \u00fe ; \u00c0 \u00de \u00c0 T \u00c0\u00f010\u00de", "formula_coordinates": [6.0, 336.7, 477.88, 203.6, 12.66]}, {"formula_id": "formula_26", "formula_text": "div \u00f0DrI i \u00de \u00bc X n j\u00bc1 trace \u00f0 ij D \u00fe Q ij \u00deH j \u00c0 \u00c1 ;\u00f011\u00de", "formula_coordinates": [6.0, 329.39, 596.22, 210.91, 27.83]}, {"formula_id": "formula_27", "formula_text": "P ij \u00bc rI T i rI j Id \u00fe 2 @ @ \u00fe \u00fe T \u00fe \u00fe @ @ \u00c0 \u00c0 T \u00c0 rI j rI T i G \u00fe 2 \u00fe @ @ \u00fe \u00fe T \u00fe \u00fe \u00fe @ @ \u00c0 \u00c0 T \u00c0 rI j rI T i TSCHUMPERL E E", "formula_coordinates": [6.0, 25.4, 28.81, 499.42, 712.03]}, {"formula_id": "formula_28", "formula_text": "\u00bc f 1 \u00f0 \u00fe ; \u00c0 \u00de \u00c0 f 2 \u00f0 \u00fe ; \u00c0 \u00de \u00fe \u00c0 \u00c0 and \u00bc \u00fe f 2 \u00f0 \u00fe ; \u00c0 \u00de \u00c0 \u00c0 f 1 \u00f0 \u00fe ; \u00c0 \u00de \u00fe \u00c0 \u00c0 :", "formula_coordinates": [7.0, 90.03, 310.27, 131.69, 48.46]}, {"formula_id": "formula_29", "formula_text": "@I i @t \u00bc X n j\u00bc1 trace \u00f0A ij Hi\u00de \u00f0i \u00bc 1::n\u00de;\u00f012\u00de", "formula_coordinates": [7.0, 73.93, 547.01, 203.32, 27.83]}, {"formula_id": "formula_30", "formula_text": "@I @t \u00bc trace ! \u00f0AH\u00de;\u00f013\u00de", "formula_coordinates": [7.0, 114.97, 643.09, 162.27, 21.29]}, {"formula_id": "formula_31", "formula_text": "@I i @t \u00bc div \u00f0DrI i \u00de;", "formula_coordinates": [7.0, 393.17, 365.86, 73.03, 21.29]}, {"formula_id": "formula_32", "formula_text": "A ij \u00bc ij D \u00fe Q ij .", "formula_coordinates": [7.0, 443.39, 439.27, 71.48, 11.3]}, {"formula_id": "formula_33", "formula_text": "@I i @t ' \u00c1I i \u00bc trace\u00f0H i \u00de.", "formula_coordinates": [8.0, 56.13, 682.6, 89.79, 13.06]}, {"formula_id": "formula_34", "formula_text": "lim \u00f0\u00fe\u00fe\u00c0\u00de!0 A \u00bc Id:", "formula_coordinates": [8.0, 128.98, 714.83, 76.93, 14.96]}, {"formula_id": "formula_35", "formula_text": "@I i @t \u00bc trace \u00f0 \u00c0 \u00c0 T H i \u00de,", "formula_coordinates": [8.0, 444.25, 362.57, 96.02, 13.11]}, {"formula_id": "formula_36", "formula_text": "lim \u00f0\u00fe\u00fe\u00c0\u00de!1 A \u00bc \u00c0 T \u00c0 :", "formula_coordinates": [8.0, 385.57, 428.84, 89.86, 16.63]}, {"formula_id": "formula_37", "formula_text": "@I i @t \u00bc trace \u00f0TH i \u00de \u00f0i \u00bc 1::n\u00de;\u00f014\u00de", "formula_coordinates": [8.0, 347.81, 490.35, 192.49, 21.29]}, {"formula_id": "formula_38", "formula_text": "T \u00bc f \u00c0 ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi \u00c3 \u00fe \u00fe \u00c3 \u00c0 p \u00c3 \u00c0 \u00c3 \u00c0 T \u00fe f \u00fe ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi \u00c3 \u00fe \u00fe \u00c3 \u00c0 p \u00c3 \u00fe \u00c3 \u00fe T :", "formula_coordinates": [8.0, 305.46, 532.67, 218.61, 19.67]}, {"formula_id": "formula_39", "formula_text": "f \u00fe \u00f0s\u00de \u00bc 1 1 \u00fe s 2 and f \u00c0 \u00f0s\u00de \u00bc 1 ffiffiffiffiffiffiffiffiffiffiffiffi ffi 1 \u00fe s 2 p :", "formula_coordinates": [8.0, 332.28, 636.86, 164.98, 22.94]}, {"formula_id": "formula_40", "formula_text": "@I i @t \u00bc trace 1 kF k F F T ! H i \u00f0i \u00bc 1::n\u00de:\u00f015\u00de", "formula_coordinates": [11.0, 65.65, 537.94, 211.59, 29.51]}], "doi": ""}