{"title": "Learning from Simulated and Unsupervised Images through Adversarial Training", "authors": "Ashish Shrivastava; Tomas Pfister; Oncel Tuzel; Josh Susskind; Wenda Wang; Russ Webb", "pub_date": "", "abstract": "With recent progress in graphics, it has become more tractable to train models on synthetic images, potentially avoiding the need for expensive annotations. However, learning from synthetic images may not achieve the desired performance due to a gap between synthetic and real image distributions. To reduce this gap, we propose Simulated+Unsupervised (S+U) learning, where the task is to learn a model to improve the realism of a simulator's output using unlabeled real data, while preserving the annotation information from the simulator. We develop a method for S+U learning that uses an adversarial network similar to Generative Adversarial Networks (GANs), but with synthetic images as inputs instead of random vectors. We make several key modifications to the standard GAN algorithm to preserve annotations, avoid artifacts, and stabilize training: (i) a 'self-regularization' term, (ii) a local adversarial loss, and (iii) updating the discriminator using a history of refined images. We show that this enables generation of highly realistic images, which we demonstrate both qualitatively and with a user study. We quantitatively evaluate the generated images by training models for gaze estimation and hand pose estimation. We show a significant improvement over using synthetic images, and achieve state-of-the-art results on the MPIIGaze dataset without any labeled real data.", "sections": [{"heading": "Introduction", "text": "Large labeled training datasets are becoming increasingly important with the recent rise in high capacity deep neural networks [4,20,48,48,1,24,17]. However, labeling such large datasets is expensive and timeconsuming. Thus, the idea of training on synthetic instead of real images has become appealing because the annotations are automatically available. Human pose estimation with Kinect [35] and, more recently, a plethora of other tasks have been tackled using synthetic data [43,42,29,34]. However, learning from synthetic images can be problematic due to a gap between synthetic and real image distributions -synthetic data is often not realistic enough, leading the network to learn details only present in synthetic images and failing to generalize well on real images. One solution to closing this gap is to improve the simulator. However, increasing the realism is often computationally expensive, the content modeling takes a lot of hard work, and even the best rendering algorithms may still fail to model all the characteristics of real images. This lack of realism may cause models to overfit to 'unrealistic' details in the synthetic images.", "publication_ref": ["b3", "b19", "b47", "b47", "b0", "b23", "b16", "b34", "b42", "b41", "b28", "b33"], "figure_ref": [], "table_ref": []}, {"heading": "Refiner Unlabeled Real Images", "text": "Synthetic Refined\nIn this paper, we propose Simulated+Unsupervised (S+U) learning, where the goal is to improve the realism of synthetic images from a simulator using unlabeled real data. The improved realism enables the training of better machine learning models on large datasets without any data collection or human annotation effort. In addition to adding realism, S+U learning should preserve annotation information for training of machine learning models -e.g. the gaze direction in Figure 1 should be preserved. Moreover, since machine learning models can be sensitive to artifacts in the synthetic data, S+U learning should generate images without artifacts. We develop a method for S+U learning, which we term SimGAN, that refines synthetic images from a simulator using a neural network which we call the 'refiner network'. Figure 2 gives an overview of our method: a synthetic image is generated with a black box simulator and is refined using the refiner network. To add realism, we train our refiner network using an adversarial loss, similar to Generative Adversarial Networks (GANs) [8], such that the refined images are indistinguishable from real ones using a discriminative network. To preserve the annotations of synthetic images, we complement the adversarial loss with a self-regularization loss that penalizes large changes between the synthetic and refined images. Moreover, we propose to use a fully convolutional neural network that operates on a pixel level and preserves the global structure, rather than holistically modifying the image content as in e.g. a fully connected encoder network. The GAN framework requires training two neural networks with competing goals, which is known to be unstable and tends to introduce artifacts [32]. To avoid drifting and introducing spurious artifacts while attempting to fool a single stronger discriminator, we limit the discriminator's receptive field to local regions instead of the whole image, resulting in multiple local adversarial losses per image. Moreover, we introduce a method for improving the stability of training by updating the discriminator using a history of refined images rather than only the ones from the current refiner network.", "publication_ref": ["b7", "b31"], "figure_ref": ["fig_0", "fig_1"], "table_ref": []}, {"heading": "Contributions:", "text": "1. We propose S+U learning that uses unlabeled real data to refine the synthetic images.\n2. We train a refiner network to add realism to synthetic images using a combination of an adversarial loss and a self-regularization loss. ", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Related Work", "text": "The GAN framework learns two networks (a generator and a discriminator) with competing losses. The goal of the generator network is to map a random vector to a realistic image, whereas the goal of the discriminator is to distinguish the generated from the real images. The GAN framework was first introduced by Goodfellow et al. [8] to generate visually realistic images and, since then, many improvements and interesting applications have been proposed [32]. Wang and Gupta [41] use a Structured GAN to learn surface normals and then combine it with a Style GAN to generate natural indoor scenes. Im et al. [13] propose a recurrent generative model trained using adversarial training. The recently proposed iGAN [49] enables users to change the image interactively on a natural image manifold. CoGAN by Liu et al. [21] uses coupled GANs to learn a joint distribution over images from multiple modalities without requiring tuples of corresponding images, achieving this by a weight-sharing constraint that favors the joint distribution solution. Chen et al. [2] propose Info-GAN, an information-theoretic extension of GAN, that allows learning of meaningful representations. Tuzel et al. [39] tackled image super-resolution for face images with GANs. Li and Wand [19] propose a Markovian GAN for efficient texture synthesis. Lotter et al. [22] use adversarial loss in an LSTM network for visual sequence prediction. Yu et al. [45] propose the SeqGAN framework that uses GANs for reinforcement learning. Yoo et al. [44] tackle pixel-level semantic transfer learning with GANs. Style transfer [7] is also closely related to our work. Many recent works have explored related problems in the domain of generative models, such as PixelRNN [40] that predicts pixels sequentially with an RNN with a softmax loss. The generative networks focus on generating images using a random noise vector; thus, in contrast to our method, the generated images do not have any annotation information that can be used for training a machine learning model.\nMany efforts have explored using synthetic data for various prediction tasks, including gaze estimation [43], text detection and classification in RGB images [9,15], font recognition [42], object detection [10,27], hand pose estimation in depth images [38,37], scene recognition in RGB-D [11], semantic segmentation of urban scenes [31], and human pose estimation [26,3,18,14,28,30]. Gaidon et al. [5] show that pre-training a deep neural network on synthetic data leads to improved performance. Our work is complementary to these approaches, where we improve the realism of the simulator using unlabeled real data.\nGanin and Lempitsky [6] use synthetic data in a domain adaptation setting where the learned features are invariant to the domain shift between synthetic and real images. Wang et al. [42] train a Stacked Convolutional Auto-Encoder on synthetic and real data to learn the lower-level representations of their font detector ConvNet. Zhang et al. [46] learn a Multichannel Autoencoder to reduce the domain shift between real and synthetic data. In contrast to classical domain adaptation methods that adapt the features with respect to a specific prediction task, we bridge the gap between image distributions through adversarial training. This approach allows us to generate realistic training images which can be used to train any machine learning model, potentially for multiple tasks.\nJohnson et al. [16] transfer the style from a set of real images to the synthetic image by co-segmenting and then identifying similar regions. This approach requires users to select the top few matches from an image database. In contrast, we propose an end-to-end solution that does not require user intervention at inference time.", "publication_ref": ["b7", "b31", "b40", "b12", "b48", "b20", "b1", "b38", "b18", "b21", "b44", "b43", "b6", "b39", "b42", "b8", "b14", "b41", "b9", "b26", "b37", "b36", "b10", "b30", "b25", "b2", "b17", "b13", "b27", "b29", "b4", "b5", "b41", "b45", "b15"], "figure_ref": [], "table_ref": []}, {"heading": "S+U Learning with SimGAN", "text": "The goal of Simulated+Unsupervised learning is to use a set of unlabeled real images y i \u2208 Y to learn a refiner R \u03b8 (x) that refines a synthetic image x, where \u03b8 are the function parameters. Let the refined image be denoted byx, thenx := R \u03b8 (x). The key requirement for S+U learning is that the refined imagex should look like a real image in appearance while preserving the annotation information from the simulator.\nTo this end, we propose to learn \u03b8 by minimizing a combination of two losses:\nL R (\u03b8) = i real (\u03b8; x i , Y) + \u03bb reg (\u03b8; x i ), (1)\nwhere x i is the i th synthetic training image. The first part of the cost, real , adds realism to the synthetic images, while the second part, reg , preserves the annotation information. In the following sections, we expand this formulation and provide an algorithm to optimize for \u03b8.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Adversarial Loss with Self-Regularization", "text": "To add realism to the synthetic image, we need to bridge the gap between the distributions of synthetic and real images. An ideal refiner will make it impossible to classify a given image as real or refined with high confidence. This need motivates the use of an adversarial discriminator network, D \u03c6 , that is trained to classify images as real vs refined, where \u03c6 are the parameters of the discriminator network. The adversarial loss used in training the refiner network, R, is responsible for 'fooling' the network D into classifying the refined images as real. Following the GAN approach [8], we model this as a two-player minimax game, and update the refiner network, R \u03b8 , and the discriminator network, D \u03c6 , alternately. Next, we describe this intuition more precisely.\nThe discriminator network updates its parameters by minimizing the following loss:\nL D (\u03c6) = \u2212 i log(D \u03c6 (x i )) \u2212 j log(1 \u2212 D \u03c6 (y j )).(2)\nThis is equivalent to cross-entropy error for a two class classification problem where D \u03c6 (.) is the probability of the input being a synthetic image, and 1 \u2212 D \u03c6 (.) that of a real one. We implement D \u03c6 as a ConvNet whose last layer outputs the probability of the sample being a refined image. For training this network, each mini-batch consists of randomly sampled refined synthetic images x i 's and real images y j 's. The target labels for the crossentropy loss layer are 0 for every y j , and 1 for everyx i . Then \u03c6 for a mini-batch is updated by taking a stochastic gradient descent (SGD) step on the mini-batch loss gradient.\nIn our implementation, the realism loss function real in (1) uses the trained discriminator D as follows:\nreal (\u03b8; x i , Y) = \u2212 log(1 \u2212 D \u03c6 (R \u03b8 (x i ))). (3)\nBy minimizing this loss function, the refiner forces the discriminator to fail classifying the refined images as synthetic. In addition to generating realistic images, the refiner network should preserve the annotation information of the simulator. For example, for gaze estimation the learned transformation should not change the gaze direction, and for hand pose estimation the location of the joints should not change. This restriction is an essential ingredient to enable training a machine learning model that uses the refined images with the simulator's annotations. For this purpose, we propose using a selfregularization loss that minimizes per-pixel difference between a feature transform of the synthetic and refined images, reg = \u03c8(x) \u2212 x 1 , where \u03c8 is the mapping from image space to a feature space, and . 1 is the L1 norm. The feature transform can be an identity map  2). end end (\u03c8(x) = x), image derivatives, mean of color channels, or a learned transformation such as a convolutional neural network. In this paper, unless otherwise stated, we used the identity map as the feature transform. Thus, the overall refiner loss function (1) used in our implementation is:\nL R (\u03b8) = \u2212 i log(1 \u2212 D \u03c6 (R \u03b8 (x i ))) +\u03bb \u03c8(R \u03b8 (x i )) \u2212 \u03c8(x i ) 1 .(4)\nWe implement R \u03b8 as a fully convolutional neural net without striding or pooling, modifying the synthetic image on a pixel level, rather than holistically modifying the image content as in e.g. a fully connected encoder network, thus preserving the global structure and annotations. We learn the refiner and discriminator parameters by minimizing L R (\u03b8) and L D (\u03c6) alternately. While updating the parameters of R \u03b8 , we keep \u03c6 fixed, and while updating D \u03c6 , we fix \u03b8. We summarize this training procedure in Algorithm 1.", "publication_ref": ["b7"], "figure_ref": [], "table_ref": []}, {"heading": "Local Adversarial Loss", "text": "Another key requirement for the refiner network is that it should learn to model the real image characteristics without introducing any artifacts. When we train a single strong discriminator network, the refiner network tends to over-emphasize certain image features to fool the current discriminator network, leading to drifting and producing artifacts. A key observation is that any local patch sampled from the refined image should have similar statistics to a real image patch. Therefore, rather than defining a global discriminator network, we can define a discriminator network that classifies all local image patches separately. This division not only limits the receptive field, and hence the capacity of the discriminator network, but also provides many samples per image for learning the discriminator network. The refiner network is also improved by having multiple 'realism loss' values per image.\nIn our implementation, we design the discriminator D to be a fully convolutional network that outputs w \u00d7 h dimensional probability map of patches belonging to the fake class, where w \u00d7 h are the number of local patches in the image. While training the refiner network, we sum the cross-entropy loss values over w \u00d7 h local patches, as illustrated in Figure 3.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Updating Discriminator using a History of Refined Images", "text": "Another problem of adversarial training is that the discriminator network only focuses on the latest refined images. This lack of memory may cause (i) divergence of the adversarial training, and (ii) the refiner network re-introducing the artifacts that the discriminator has forgotten about. Any refined image generated by the refiner network at any time during the entire training procedure is a 'fake' image for the discriminator. Hence, the discriminator should be able to classify all these images as fake. Based on this observation, we introduce a method to improve the stability of adversarial training by updating the discriminator using a history of refined images, rather than only the ones in the current minibatch. We slightly modify Algorithm 1 to have a buffer of refined images generated by previous networks. Let B be the size of the buffer and b be the mini-batch size used in Algorithm 1. At each iteration of discriminator training, we compute the discriminator loss function by sampling b/2 images from the current refiner network, and sampling an additional b/2 images from the buffer to update parameters \u03c6. We keep the size of the buffer, B, fixed. After each training iteration, we randomly replace b/2 samples in the buffer with the newly generated refined images. This procedure is illustrated in Figure 4.\nIn contrast to our approach, Salimans et al.\n[32] used a running average of the model parameters to stabilize the training. Note that these two approaches are complementary and can be used together.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Experiments", "text": "We evaluate our method for appearance-based gaze estimation in the wild on the MPIIGaze dataset [43,47], and hand pose estimation on the NYU hand pose dataset of depth images [38]. We use a fully convolutional refiner network with ResNet blocks for all of our experiments.", "publication_ref": ["b42", "b46", "b37"], "figure_ref": [], "table_ref": []}, {"heading": "Appearance-based Gaze Estimation", "text": "Gaze estimation is a key ingredient for many human computer interaction (HCI) tasks. However, estimating the gaze direction from an eye image is challenging, especially when the image is of low quality, e.g. from a laptop or a mobile phone camera -annotating the eye images with a gaze direction vector is challenging even for humans. Therefore, to generate large amounts of annotated data, several recent approaches [43,47] train their models on large amounts of synthetic data. Here, we show that training with the refined synthetic images generated by SimGAN significantly outperforms the state-of-the-art for this task.", "publication_ref": ["b42", "b46"], "figure_ref": [], "table_ref": []}, {"heading": "Synthetic", "text": "Refined Sample real Figure 6. Self-regularization in feature space for color images.\nThe gaze estimation dataset consists of 1.2M synthetic images from the UnityEyes simulator [43] and 214K real images from the MPIIGaze dataset [47] samples shown in Figure 5. MPIIGaze is a very challenging eye gaze estimation dataset captured under extreme illumination conditions. For UnityEyes, we use a single generic rendering environment to generate training data without any dataset-specific targeting.\nQualitative Results : Figure 5 shows examples of synthetic, real and refined images from the eye gaze dataset. As shown, we observe a significant qualitative improvement of the synthetic images: SimGAN successfully captures the skin texture, sensor noise and the appearance of the iris region in the real images. Note that our method preserves the annotation information (gaze direction) while improving the realism.\nSelf-regularization in Feature Space: When the synthetic and real images have significant shift in the distribution, a pixel-wise L1 difference may be restrictive. In such cases, we can replace the identity map with an alternative feature transform. For example, in Figure 6, we use the mean of RGB channels for color image refinement. As shown, the network trained using this feature transform is able to generate realistic color images. Note that in our quantitative experiments we still use grayscale images because gaze estimation is better tackled in grayscale due to added invariance [43,47].\n'Visual Turing Test': To quantitatively evaluate the visual quality of the refined images, we designed a simple user study where subjects were asked to classify images as real or refined synthetic. Each subject was shown a random selection of 50 real images and 50 re- fined images in a random order, and was asked to label the images as either real or refined. The subjects were constantly shown 20 examples of real and refined images while performing the task. The subjects found it very hard to tell the difference between the real images and the refined images. In our aggregate analysis, subjects chose the correct label 517 times out of 1000 trials (p = 0.148), meaning they were not able to reliably distinguish real images from synthetic. Table 1 shows the confusion matrix. In contrast, when testing on original synthetic images vs real images, we showed 10 real and 10 synthetic images per subject, and the subjects chose correctly 162 times out of 200 trials (p \u2264 10 \u22128 ), which is significantly better than chance.\nQuantitative Results: We train a simple convolutional neural network (CNN) similar to [47] to predict the eye gaze direction (encoded by a 3-dimensional vector for x, y, z) with l 2 loss. We train on UnityEyes and test on MPIIGaze. Figure 7 and Table 2 compare the performance of a gaze estimation CNN trained on synthetic data to that of another CNN trained on refined synthetic data, the output of SimGAN. We observe a large improvement in performance from training on the SimGAN output, a 22.3% absolute percentage improvement. We also observe a large improvement by using more training data -here 4x refers to 100% of the training dataset. The quantitative evaluation confirms the value of the qualitative improvements observed in Figure 5, and shows that machine learning models generalize significantly better using SimGAN.\nTable 3 shows a comparison to the state-of-the-art. Training the CNN on the refined images outperforms the state-of-the-art on the MPIIGaze dataset, with a relative improvement of 21%. This large improvement shows the practical value of our method in many HCI tasks.   Preserving Ground Truth: To quantify that the ground truth gaze direction doesn't change significantly, we manually labeled the ground truth pupil centers in 100 synthetic and refined images by fitting an ellipse to the pupil. This is an approximation of the gaze direction, which is difficult for humans to label accurately. The absolute difference between the estimated pupil center of synthetic and corresponding refined image is quite small: 1.1 \u00b1 0.8px (eye width=55px).\nImplementation Details: The refiner network, R \u03b8 , is a residual network (ResNet) [12]. (1) Conv3x3, stride=2, feature maps=96, (2) Conv3x3, stride=2, feature maps=64, (3) MaxPool3x3, stride=1, (4) Conv3x3, stride=1, feature maps=32, (5) Conv1x1, stride=1, feature maps=32, (6) Conv1x1, stride=1, feature maps=2, (7) Softmax.\nOur adversarial network is fully convolutional, and has been designed such that the receptive field of the last layer neurons in R \u03b8 and D \u03c6 are similar. We first train the R \u03b8 network with just self-regularization loss for 1, 000 steps, and D \u03c6 for 200 steps. Then, for each update of D \u03c6 , we update R \u03b8 twice, i.e. K d is set to 1, and K g is set to 50 in Algorithm 1.\nThe eye gaze estimation network is similar to [47], with some changes to enable it to better exploit our large synthetic dataset. The input is a 35 \u00d7 55 grayscale image that is passed through 5 convolutional layers followed by 3 fully connected layers, the last one encoding the 3-dimensional gaze vector: (1) Conv3x3, feature maps=32, (2) Conv3x3, feature maps=32, (3) Conv3x3, feature maps=64, (4) Max-Pool3x3, stride=2, (5) Conv3x3, feature maps=80, (6) Conv3x3, feature maps=192, (7) MaxPool2x2, stride=2, (8) FC9600, (9) FC1000, (10) FC3, (11) Euclidean loss. All networks are trained with a constant 0.001 learning rate and 512 batch size, until the validation error converges.", "publication_ref": ["b42", "b46", "b42", "b46", "b46", "b11", "b46"], "figure_ref": ["fig_4", "fig_4", "fig_6", "fig_4"], "table_ref": ["tab_1", "tab_2"]}, {"heading": "Hand Pose Estimation from Depth Images", "text": "Next, we evaluate our method for hand pose estimation in depth images. We use the NYU hand pose dataset [38] that contains 72, 757 training frames and 8, 251 testing frames captured by 3 Kinect camerasone frontal and 2 side views. Each depth frame is labeled with hand pose information that has been used to create a synthetic depth image. We pre-process the data by cropping the pixels from real images using the synthetic images. The images are resized to 224 \u00d7 224 before passing them to the ConvNet.\nQualitative Results: Figure 8 shows example output of SimGAN on the NYU hand pose test set. The main source of noise in real depth images is from depth discontinuity at the edges, which the SimGAN is able to learn without requiring any label information.\nQuantitative Results: We train a fully convolutional hand pose estimator CNN similar to Stacked Hourglass Net [25] on real, synthetic and refined synthetic images of the NYU hand pose training set, and evaluate each model on all real images in the NYU hand pose test set. We train on the same 14 hand joints as in [38]. Many state-of-the-art hand pose estimation methods are customized pipelines that consist of several steps. We use only a single deep neural network to analyze the effect of improving the synthetic images to avoid bias due to other factors. Figure 9 and Table 4 ", "publication_ref": ["b37", "b24", "b37"], "figure_ref": ["fig_7", "fig_9"], "table_ref": ["tab_3"]}, {"heading": "Ablation Study", "text": "First, we analyzed the effect of using history of refined images during training. As shown in Figure 10, using the history of refined images (second column) prevents severe artifacts observed while training without the history (third column). This results in an increased gaze estimation error of 12.2 degrees without the history, in comparison to 7.8 degrees with the history.\nNext, we compare local vs global adversarial loss during training. A global adversarial loss uses a fully connected layer in the discriminator network, classifying the whole image as real vs refined. The local adversarial loss removes the artifacts and makes the generated image significantly more realistic, as seen in Figure 11.", "publication_ref": [], "figure_ref": ["fig_0", "fig_0"], "table_ref": []}, {"heading": "Synthetic", "text": "Refined (with history) Refined (without history) ", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Global vs Local Loss Zoomed In", "text": "Global adversarial loss Local adversarial loss Figure 11. Importance of using a local adversarial loss. (Left) an example image that has been generated with a standard 'global' adversarial loss on the whole image. The noise around the edge of the hand contains obvious unrealistic depth boundary artifacts. (Right) the same image generated with a local adversarial loss that looks significantly more realistic.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Conclusions and Future Work", "text": "We have proposed Simulated+Unsupervised learning to add realism to the simulator while preserving the annotations of the synthetic images. We described Sim-GAN, our method for S+U learning, that uses an adversarial network and demonstrated state-of-the-art results without any labeled real data. In future, we intend to explore modeling the noise distribution to generate more than one refined image for each synthetic image, and investigate refining videos rather than single images.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Additional Experiments", "text": "Qualitative Experiments for Appearance-based Gaze Estimation Dataset: The gaze estimation dataset consists of 1.2M synthetic images from eye gaze synthesizer Uni-tyEyes [43] and 214K real images from the MPIIGaze dataset [47] -samples shown in Figure 12. MPIIGaze is a very challenging eye gaze estimation dataset captured under extreme illumination conditions. For UnityEyes we use a single generic rendering environment to generate training data without any dataset-specific targeting.\nQualitative Results: In Figure 13, we show many examples of synthetic, and refined images from the eye gaze dataset. We show many pairs of synthetic and refined in multiple rows. The top row contains synthetic images, and the bottom row contains corresponding refined images. As shown, we observe a significant qualitative improvement of the synthetic images: SimGAN successfully captures the skin texture, sensor noise and the appearance of the iris region in the real images. Note that our method preserves the annotation information (gaze direction) while improving the realism.", "publication_ref": ["b42", "b46"], "figure_ref": ["fig_0", "fig_0"], "table_ref": []}, {"heading": "Qualitative Experiments for Hand Pose Estimation", "text": "Dataset: Next, we evaluate our method for hand pose estimation in depth images. We use the NYU hand pose dataset [38] that contains 72, 757 training frames and 8, 251 testing frames. Each depth frame is labeled with hand pose information that has been used to create a synthetic depth image. We pre-process the data by cropping the pixels from real images using the synthetic images. Figure 14 shows example real depth images from the dataset. The images are resized to 224 \u00d7 224 before passing them to the refiner network.", "publication_ref": ["b37"], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "Quantative Results:", "text": "We show examples of synthetic and refined hand depth images in Figure 15 from the test set. We show our results in multiple pairs of rows. The top row in each pair, contains synthetic depth image, and the bottom row shows the corresponding refined image using the proposed SimGAN approach. Note the realism added to the depth boundary in the refined images, compare to the real images in Figure 14.", "publication_ref": [], "figure_ref": ["fig_0", "fig_0"], "table_ref": []}, {"heading": "Convergence Experiment", "text": "To investigate the convergence of our method, we visualize intermediate results as training progresses. As shown in Figure 16, in the beginning, the refiner network learns to predict very smooth edges using only the selfregularization loss. As the adversarial loss is enabled, the network starts adding artifacts at the depth boundaries. However, as these artifacts are not the same as real images, the discriminator easily learns to differentiate between the real and refined images. Slowly the network starts adding realistic noise, and after many steps, the refiner generates very realistic-looking images. We found it helpful to train the network with a low learning rate and for a large number of steps. For NYU hand pose we used lr=0.0002 in the beginning, and reduced to 0.00005 after 600, 000 steps.  ", "publication_ref": [], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "", "text": "Acknowledgement: We are grateful to our colleagues Barry Theobald, Carlos Guestrin, Ruslan Salakhutdinov, Abhishek Sharma and Yin Zhou for their valuable inputs.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Training Iterations", "text": "Iterations Synthetic Images Refined Images", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Youtube-8m: A large-scale video classification benchmark", "journal": "", "year": "2016", "authors": "S Abu-El-Haija; N Kothari; J Lee; P Natsev; G Toderici; B Varadarajan; S Vijayanarasimhan"}, {"ref_id": "b1", "title": "InfoGAN: Interpretable representation learning by information maximizing generative adversarial nets", "journal": "", "year": "2016", "authors": "X Chen; Y Duan; R Houthooft; J Schulman; I Sutskever; P Abbeel"}, {"ref_id": "b2", "title": "Fast pose estimation with parameter sensitive hashing", "journal": "", "year": "2015", "authors": "T Darrell; P Viola; G Shakhnarovich"}, {"ref_id": "b3", "title": "ImageNet: A Large-Scale Hierarchical Image Database", "journal": "", "year": "2009", "authors": "J Deng; W Dong; R Socher; L.-J Li; K Li; L Fei-Fei"}, {"ref_id": "b4", "title": "Virtual worlds as proxy for multi-object tracking analysis", "journal": "", "year": "2016", "authors": "A Gaidon; Q Wang; Y Cabon; E Vig"}, {"ref_id": "b5", "title": "Unsupervised domain adaptation by backpropagation", "journal": "", "year": "2014", "authors": "Y Ganin; V Lempitsky"}, {"ref_id": "b6", "title": "Image style transfer using convolutional neural networks", "journal": "", "year": "2016", "authors": "L Gatys; A Ecker; M Bethge"}, {"ref_id": "b7", "title": "Generative adversarial nets", "journal": "", "year": "2014", "authors": "I Goodfellow; J Pouget-Abadie; M Mirza; B Xu; D Warde-Farley; S Ozair; A Courville; Y Bengio"}, {"ref_id": "b8", "title": "Synthetic data for text localisation in natural images", "journal": "", "year": "2016", "authors": "A Gupta; A Vedaldi; A Zisserman"}, {"ref_id": "b9", "title": "Learning rich features from rgb-d images for object detection and segmentation", "journal": "", "year": "2014", "authors": "S Gupta; R Girshick; P Arbel\u00e1ez; J Malik"}, {"ref_id": "b10", "title": "SceneNet: Understanding real world indoor scenes with synthetic data", "journal": "", "year": "2015", "authors": "A Handa; V Patraucean; V Badrinarayanan; S Stent; R Cipolla"}, {"ref_id": "b11", "title": "Deep residual learning for image recognition", "journal": "", "year": "2015", "authors": "K He; X Zhang; S Ren; J Sun"}, {"ref_id": "b12", "title": "Generating images with recurrent adversarial networks", "journal": "", "year": "2016", "authors": "D J Im; C D Kim; H Jiang; R Memisevic"}, {"ref_id": "b13", "title": "Human3.6m: Large scale datasets and predictive methods for 3d human sensing in natural environments", "journal": "PAMI", "year": "2014", "authors": "C Ionescu; D Papava; V Olaru; C Sminchisescu"}, {"ref_id": "b14", "title": "Reading text in the wild with convolutional neural networks", "journal": "IJCV", "year": "2016", "authors": "M Jaderberg; K Simonyan; A Vedaldi; A Zisserman"}, {"ref_id": "b15", "title": "Cg2real: Improving the realism of computer generated images using a large collection of photographs", "journal": "IEEE Transactions on Visualization and Computer Graphics", "year": "2011", "authors": "M K Johnson; K Dale; S Avidan; H Pfister; W T Freeman; W Matusik"}, {"ref_id": "b16", "title": "OpenImages: A public dataset for large-scale multi-label and multiclass image classification", "journal": "", "year": "2016", "authors": "I Krasin; T Duerig; N Alldrin; A Veit; S Abu-El-Haija; S Belongie; D Cai; Z Feng; V Ferrari; V Gomes; A Gupta; D Narayanan; C Sun; G Chechik; K Murphy"}, {"ref_id": "b17", "title": "Learning methods for generic object recognition with invariance to pose and lighting", "journal": "", "year": "2004", "authors": "Y Lecun; F Huang; L Bottou"}, {"ref_id": "b18", "title": "Precomputed real-time texture synthesis with markovian generative adversarial networks", "journal": "", "year": "2016", "authors": "C Li; M Wand"}, {"ref_id": "b19", "title": "Microsoft COCO: Common objects in context", "journal": "", "year": "2014", "authors": "T.-Y Lin; M Maire; S Belongie; J Hays; P Perona; D Ramanan; P Doll\u00e1r; C L Zitnick"}, {"ref_id": "b20", "title": "Coupled generative adversarial networks", "journal": "", "year": "2016", "authors": "M.-Y Liu; O Tuzel"}, {"ref_id": "b21", "title": "Unsupervised learning of visual structure using predictive generative networks", "journal": "", "year": "2015", "authors": "W Lotter; G Kreiman; D Cox"}, {"ref_id": "b22", "title": "Adaptive linear regression for appearance-based gaze estimation", "journal": "PAMI", "year": "2014", "authors": "F Lu; Y Sugano; T Okabe; Y Sato"}, {"ref_id": "b23", "title": "Modeling context between objects for referring expression understanding", "journal": "", "year": "2016", "authors": "V K Nagaraja; V I Morariu; L S Davis"}, {"ref_id": "b24", "title": "Stacked hourglass networks for human pose estimation", "journal": "", "year": "2016", "authors": "A Newell; K Yang; J Deng"}, {"ref_id": "b25", "title": "Articulated pose estimation with tiny synthetic videos", "journal": "", "year": "2015", "authors": "D Park; D Ramanan"}, {"ref_id": "b26", "title": "Learning deep object detectors from 3d models", "journal": "", "year": "2015", "authors": "X Peng; B Sun; K Ali; K Saenko"}, {"ref_id": "b27", "title": "Articulated people detection and pose estimation: Reshaping the future", "journal": "", "year": "2012", "authors": "L Pishchulin; A Jain; M Andriluka; T Thorm\u00e4hlen; B Schiele"}, {"ref_id": "b28", "title": "UnrealCV: Connecting computer vision to Unreal Engine", "journal": "", "year": "2016", "authors": "W Qiu; A Yuille"}, {"ref_id": "b29", "title": "MoCap-guided data augmentation for 3d pose estimation in the wild", "journal": "", "year": "2016", "authors": "G Rogez; C Schmid"}, {"ref_id": "b30", "title": "The SYNTHIA Dataset: A large collection of synthetic images for semantic segmentation of urban scenes", "journal": "", "year": "2016", "authors": "G Ros; L Sellart; J Materzynska; D Vazquez; A M Lopez"}, {"ref_id": "b31", "title": "Improved techniques for training gans", "journal": "", "year": "2016", "authors": "T Salimans; I Goodfellow; W Zaremba; V Cheung; A Radford; X Chen"}, {"ref_id": "b32", "title": "Manifold alignment for person independent appearance-based gaze estimation", "journal": "", "year": "2014", "authors": "T Schneider; B Schauerte; R Stiefelhagen"}, {"ref_id": "b33", "title": "Play and learn: Using video games to train computer vision models", "journal": "", "year": "2016", "authors": "A Shafaei; J Little; M Schmidt"}, {"ref_id": "b34", "title": "Efficient human pose estimation from single depth images", "journal": "PAMI", "year": "2013", "authors": "J Shotton; R Girshick; A Fitzgibbon; T Sharp; M Cook; M Finocchio; R Moore; P Kohli; A Criminisi; A Kipman; A Blake"}, {"ref_id": "b35", "title": "Learningby-synthesis for appearance-based 3d gaze estimation", "journal": "", "year": "2014", "authors": "Y Sugano; Y Matsushita; Y Sato"}, {"ref_id": "b36", "title": "Depth-based hand pose estimation: data, methods, and challenges", "journal": "", "year": "2015", "authors": "J Supancic; G Rogez; Y Yang; J Shotton; D Ramanan"}, {"ref_id": "b37", "title": "Real-time continuous pose recovery of human hands using convolutional networks", "journal": "ACM Trans. Graphics", "year": "2014", "authors": "J Tompson; M Stein; Y Lecun; K Perlin"}, {"ref_id": "b38", "title": "Globallocal face upsampling network", "journal": "", "year": "2016", "authors": "O Tuzel; Y Taguchi; J Hershey"}, {"ref_id": "b39", "title": "Pixel recurrent neural networks", "journal": "", "year": "2016", "authors": "A Van Den Oord; N Kalchbrenner; K Kavukcuoglu"}, {"ref_id": "b40", "title": "Generative image modeling using style and structure adversarial networks", "journal": "", "year": "2016", "authors": "X Wang; A Gupta"}, {"ref_id": "b41", "title": "Deepfont: Identify your font from an image", "journal": "", "year": "2015", "authors": "Z Wang; J Yang; H Jin; E Shechtman; A Agarwala; J Brandt; T Huang"}, {"ref_id": "b42", "title": "Learning an appearance-based gaze estimator from one million synthesised images", "journal": "", "year": "2016", "authors": "E Wood; T Baltru\u0161aitis; L Morency; P Robinson; A Bulling"}, {"ref_id": "b43", "title": "Pixel-level domain transfer", "journal": "", "year": "2016", "authors": "D Yoo; N Kim; S Park; A Paek; I Kweon"}, {"ref_id": "b44", "title": "Sequence generative adversarial nets with policy gradient", "journal": "", "year": "2016", "authors": "L Yu; W Zhang; J Wang; Y Yu;  Seqgan"}, {"ref_id": "b45", "title": "Learning classifiers from synthetic data using a multichannel autoencoder", "journal": "", "year": "2015", "authors": "X Zhang; Y Fu; A Zang; L Sigal; G Agam"}, {"ref_id": "b46", "title": "Appearance-based gaze estimation in the wild", "journal": "", "year": "2015", "authors": "X Zhang; Y Sugano; M Fritz; A Bulling"}, {"ref_id": "b47", "title": "Augmenting supervised neural networks with unsupervised objectives for large-scale image classification", "journal": "", "year": "2016", "authors": "Y Zhang; K Lee; H Lee"}, {"ref_id": "b48", "title": "Generative visual manipulation on the natural image manifold", "journal": "", "year": "2016", "authors": "J.-Y Zhu; P Kr\u00e4henb\u00fchl; E Shechtman; A Efros"}], "figures": [{"figure_label": "1", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Figure 1 .1Figure1. Simulated+Unsupervised (S+U) learning. The task is to learn a model that improves the realism of synthetic images from a simulator using unlabeled real data, while preserving the annotation information.", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Figure 2 .2Figure2. Overview of SimGAN. We refine the output of the simulator with a refiner neural network, R, that minimizes the combination of a local adversarial loss and a 'selfregularization' term. The adversarial loss 'fools' a discriminator network, D, that classifies an image as real or refined. The self-regularization term minimizes the image difference between the synthetic and the refined images. The refiner network and the discriminator network are updated alternately.", "figure_data": ""}, {"figure_label": "1", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "Algorithm 1 :1Adversarial training of refiner network R \u03b8 Input: Sets of synthetic images x i \u2208 X , and real images y j \u2208 Y, max number of steps (T ), number of discriminator network updates per step (K d ), number of generative network updates per step (K g ). Output: ConvNet model R \u03b8 . for t = 1, . . . , T do for k = 1, . . . , K g do 1. Sample a mini-batch of synthetic images x i . 2. Update \u03b8 by taking a SGD step on mini-batch loss L R (\u03b8) in (4) . end for k = 1, . . . , K d do 1. Sample a mini-batch of synthetic images x i , and real images y j . 2. Computex i = R \u03b8 (x i ) with current \u03b8. 3. Update \u03c6 by taking a SGD step on mini-batch loss L D (\u03c6) in (", "figure_data": ""}, {"figure_label": "34", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Figure 3 .Figure 4 .34Figure 3. Illustration of local adversarial loss. The discriminator network outputs a w \u00d7 h probability map. The adversarial loss function is the sum of the cross-entropy losses over the local patches.", "figure_data": ""}, {"figure_label": "5", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "Figure 5 .5Figure 5. Example output of SimGAN for the UnityEyes gaze estimation dataset [43]. (Left) real images from MPIIGaze [47]. Our refiner network does not use any label information from MPIIGaze dataset at training time. (Right) refinement results on UnityEye. The skin texture and the iris region in the refined synthetic images are qualitatively significantly more similar to the real images than to the synthetic images. More examples are included in the supplementary material.", "figure_data": ""}, {"figure_label": "7", "figure_type": "figure", "figure_id": "fig_6", "figure_caption": "Figure 7 .7Figure 7. Quantitative results for appearance-based gaze estimation on the MPIIGaze dataset with real eye images. The plot shows cumulative curves as a function of degree error as compared to the ground truth eye gaze direction, for different numbers of training examples of data.", "figure_data": ""}, {"figure_label": "8", "figure_type": "figure", "figure_id": "fig_7", "figure_caption": "Figure 8 .8Figure 8. Example refined test images for the NYU hand pose dataset[38]. (Left) real images, (right) synthetic images and the corresponding refined output images from the refiner network. The major source of noise in the real images is the non-smooth depth boundaries that the refiner networks learns to model.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_8", "figure_caption": "present quantitative results on NYU hand pose. Training on refined synthetic data -the output of SimGAN which does not require any labeling for the real images -outperforms the model trained on real images with supervision, by 8.8%. The proposed method also outperforms training on synthetic data. We also observe a large improvement as the number of synthetic training examples is increased -here 3x corresponds to training on all views.Implementation Details: The architecture is the same as for eye gaze estimation, except the input image size is 224 \u00d7 224, filter size is 7 \u00d7 7, and 10 ResNet blocks are used. The discriminative net D \u03c6 is: (1) Conv7x7, stride=4, feature maps=96, (2) Conv5x5, stride=2, feature maps=64, (3) MaxPool3x3, stride=2, (4) Conv3x3, stride=2, feature maps=32, (5) Conv1x1, stride=1, feature maps=32, (6) Conv1x1, stride=1, feature maps=2,", "figure_data": ""}, {"figure_label": "9", "figure_type": "figure", "figure_id": "fig_9", "figure_caption": "Figure 9 .9Figure 9. Quantitative results for hand pose estimation on the NYU hand pose test set of real depth images [38]. The plot shows cumulative curves as a function of distance from ground truth keypoint locations, for different numbers of training examples of synthetic and refined images.", "figure_data": ""}, {"figure_label": "10", "figure_type": "figure", "figure_id": "fig_10", "figure_caption": "Figure 10 .10Figure10. Using a history of refined images for updating the discriminator. (Left) synthetic images; (middle) result of using the history of refined images; (right) result without using a history of refined images (instead using only the most recent refined images). We observe obvious unrealistic artifacts, especially around the corners of the eyes.", "figure_data": ""}, {"figure_label": "1213", "figure_type": "figure", "figure_id": "fig_11", "figure_caption": "Figure 12 .Figure 13 .1213Figure 12. Example real images from MPIIGaze dataset.", "figure_data": ""}, {"figure_label": "1415", "figure_type": "figure", "figure_id": "fig_12", "figure_caption": "Figure 14 .Figure 15 .1415Figure 14. Example real test images in the NYU hand dataset.", "figure_data": ""}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_1", "figure_caption": "Results of the 'Visual Turing test' user study for classifying real vs refined images. The average human classification accuracy was 51.7% (chance = 50%).", "figure_data": "Selected as real Selected as syntGround truth real224276Ground truth synt207293Training data% of images within dSynthetic Data62.3Synthetic Data 4x64.9Refined Synthetic Data69.4Refined Synthetic Data 4x87.2Table 2. Comparison of a gaze estimator trained on syntheticdata and the output of SimGAN. The results are at distanced = 7 degrees from ground truth. Training on the output ofSimGAN outperforms training on synthetic data by 22.3%."}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "Comparison of SimGAN to the state-of-the-art on the MPIIGaze dataset of real eyes. The second column indicates whether the methods are trained on Real/Synthetic data. The error the is mean eye gaze estimation error in degrees. Training on refined images results in a 2.1 degree improvement, a relative 21% improvement compared to the state-of-the-art.", "figure_data": "MethodR/S ErrorSupport Vector Regression (SVR) [33]R16.5Adaptive Linear Regression ALR) [23]R16.4Random Forest (RF) [36]R15.4kNN with UT Multiview [47]R16.2CNN with UT Multiview [47]R13.9k-NN with UnityEyes [43]S9.9CNN with UnityEyes Synthetic ImagesS11.2CNN with UnityEyes Refined ImagesS7.8"}, {"figure_label": "4", "figure_type": "table", "figure_id": "tab_3", "figure_caption": "Comparison of a hand pose estimator trained on synthetic data, real data, and the output of SimGAN. The results are at distance d = 5 pixels from ground truth.(7) Softmax. We train the R \u03b8 network first with just selfregularization loss for 500 steps and D \u03c6 for 200 steps; then, for each update of D \u03c6 we update R \u03b8 twice, i.e. K d is set to 1, and K g is set to 2 in Algorithm 1.For hand pose estimation, we use the Stacked Hourglass Net of[25] 2 hourglass blocks, and an output heatmap size 64 \u00d7 64. We augment at training time with random [\u221220, 20] degree rotations and crops.", "figure_data": "Training data% of images within dSynthetic Data69.7Refined Synthetic Data72.4Real Data74.5Synthetic Data 3x77.7Refined Synthetic Data 3x83.3"}], "formulas": [{"formula_id": "formula_0", "formula_text": "L R (\u03b8) = i real (\u03b8; x i , Y) + \u03bb reg (\u03b8; x i ), (1)", "formula_coordinates": [3.0, 97.04, 634.22, 197.57, 20.58]}, {"formula_id": "formula_1", "formula_text": "L D (\u03c6) = \u2212 i log(D \u03c6 (x i )) \u2212 j log(1 \u2212 D \u03c6 (y j )).(2)", "formula_coordinates": [3.0, 318.0, 305.74, 221.71, 33.1]}, {"formula_id": "formula_2", "formula_text": "real (\u03b8; x i , Y) = \u2212 log(1 \u2212 D \u03c6 (R \u03b8 (x i ))). (3)", "formula_coordinates": [3.0, 347.78, 526.76, 191.94, 10.47]}, {"formula_id": "formula_3", "formula_text": "L R (\u03b8) = \u2212 i log(1 \u2212 D \u03c6 (R \u03b8 (x i ))) +\u03bb \u03c8(R \u03b8 (x i )) \u2212 \u03c8(x i ) 1 .(4)", "formula_coordinates": [4.0, 105.57, 464.44, 189.04, 35.42]}], "doi": ""}